<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Eric Duncan]]></title>
  <link href="http://eduncan911.com/atom.xml" rel="self"/>
  <link href="http://eduncan911.com/"/>
  <updated>2014-04-28T17:58:02-04:00</updated>
  <id>http://eduncan911.com/</id>
  <author>
    <name><![CDATA[Eric Duncan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Please Put Your Blog Under Source Control]]></title>
    <link href="http://eduncan911.com/software/please-put-your-blog-under-source-control.html"/>
    <updated>2014-04-07T10:37:08-04:00</updated>
    <id>http://eduncan911.com/software/please-put-your-blog-under-source-control</id>
    <content type="html"><![CDATA[<p>There are many benefits to both your readers and yourself if you were to put your
blog under source revisions.  I would go as far to say that you own it to the community
to publish all revisions of your blog that was ever public for pure archiving reasons.</p>

<!-- more -->


<h2>Revision those files you linked to</h2>

<p>Recently I setup <a href="http://eduncan911.com/software/my-hackers-blog.html">my hacker&rsquo;s blog</a>
and I had a need to import my old blog posts from CommunityServer.  The steps were a bit
hackery itself as I had to get data out of CS and into a format that one of the common
importers of Jekyll/Octopress could read from.  I chose BlogML to export as that seemed
to have the oldest support (my CS blog was 9 years old).</p>

<h2>Finding that old file that no one cares about any longer</h2>

<p>After spending a few days off and on tweaking the exported BlogML data, I basically found only
a single BlogML importer for Jekyll.  This is why I chose this route to begin with.  So, when
it came time to perform the import guess what?  The blogml.rb ruby script links were all broken!</p>

<p>Then I had a thought: if the author of the script was running Jekyll/Octopress, especially on
GitHub pages, then perhaps there is a revision history.</p>

<p>I had to dig through about 2 years of commits; but, I found it!</p>

<p><a href="https://github.com/philippkueng/philippkueng.github.com/blob/30ef1570f06d33938b18d5eee7767d6641b9a779/source/_import/blogml.rb">Commit 30ef1570f0 for blogml.rb from author</a></p>

<p>You can even backup a folder and see his entire snapshot of his blog during the import process.</p>

<p>Thank you Philipp KÃ¼ng for revisioning your blog.</p>

<h2>Changing blogging platforms</h2>

<p>What if you are switch blogging software every 5 years?  Keep old snapshots and revisions of your old site
in tags and refer to them in your change revisions.  Even if you don&rsquo;t keep the same technology,
having an old copy around for public reference can be useful to the community.</p>

<h2>Domain expiration, hosting company goes under, etc</h2>

<p>So your domain expires or got snatched up by a squatter?  Or your hosting company pulls the plug?
At least having a revision available will allow you the flexibility, even if you don&rsquo;t continue
a blog any longer.</p>

<h2>Updates, changes and redactions</h2>

<p>Opinions online can be heated and made in jest.  You may have published something that you wish you
didn&rsquo;t.  Or after some nice comments are posted, you update the post.  Maybe a DMCA takedown request
forced you to remove a piece of content.  Wouldn&rsquo;t it be nice to know and show the revision history of your post?</p>

<p>I know that me for one is going to stop with the dozen tiny edits for spelling and grammar because
of this.  Who knows, it may cause me to actually <em>think</em> before publishing.</p>

<p>And FYI, you can see each revision of each post and page I make to my site here.</p>

<h2>Backups</h2>

<p>Similar to the above, having a full backup you can take with you can be advantageous.</p>

<p>Personally, I not only publish my source code here at GitHub; but, I also have an additional
remote added for BitBucket and always do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; git add .
</span><span class='line'>&gt; git commit -m <span class="s2">&quot;fixed spelling and corrected a quote&quot;</span>
</span><span class='line'>&gt; git push backup <span class="nb">source</span>
</span><span class='line'>&gt; git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, you can do this for any source code sure.  It&rsquo;s these next steps that make it viable.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; rake deploy
</span><span class='line'>    ^- this publishes the live site to GitHub pages
</span><span class='line'>&gt; <span class="nb">cd</span> ./_deploy
</span><span class='line'>&gt; git push backup master
</span></code></pre></td></tr></table></div></figure>


<p>Yep, I also deploy a 2nd copy to my BitBucket account.  Even though it will never be used as a real
site, it&rsquo;s a full backup of the live site in the master branch.</p>

<p>The Optopress command <code>rake deploy</code> also pushed it up to GitHub pages on master &ndash; that&rsquo;s how it
&ldquo;publishes.&rdquo;  So all I have to do is make a quick backup.  What&rsquo;s even nice is the script does
a pull request as well, to keep the _deploy folder in sync so when I do perform a backup, it&rsquo;s all there.
I am new to git branch tracking; so, I may have to tweak that last command by forcing <code>-f</code> up the
push to backup if it gets out of sync or something.</p>

<p>Finally, having multiple copies of your repo online and publicly accessible can help with&hellip;</p>

<h2>Government seizers</h2>

<p>All too often, governments are taking domains and peoples&#8217; hosting accounts in the name of DMCA and
copyright infringements.  Oh, and free speech as well.</p>

<p>Why not publish your blog open source?</p>

<p>The last step to further solidify your published site and source would be automate a bittorrent release
for every deployment.  Doesn&rsquo;t seem to far out of reach with these snapshots readily available.</p>

<h2>Death</h2>

<p>What if you were to pass away?  Would your annual payment to your domains continue for decades? What
about the fee you pay your hosting company?  Same as the previous reason, publishing it may very well
keep it going for a long time even if the domain is gone, people can still get to the source.</p>

<p>Especially at a place like GitHub pages.</p>

<h2>Why not?</h2>

<p>I hope I sparked some food for thought and I would like your opinions on the matter.</p>

<p>I cannot come up with solid reasons for not to publish your blog open source.  I know at first I
wrestled with the idea that:</p>

<blockquote><p>Wait, my database connection strings would be publicly visible.  I can&#8217;t do that.</p></blockquote>


<p>Then it hit me that Octopress/Jekyll is completely static &ndash; there are no database connection strings.
Q</p>

<blockquote><p>My secret keys for my 3rd party integrations may be exposed.</p></blockquote>


<p>Actually not.  Twitter, Disqus, LinkedIn and so on all use public kesy/ids to identify you with their
widgets.  Even Flickr allows for a vast array of public apis.</p>

<p>You would only need private keys on your site if you were programatically pushing or changing content
elsewhere in a write-permission need.  But again, this was planned as a static site &ndash; no problem here.</p>

<blockquote><p>I have private downloads I don&#8217;t want others to see.</p></blockquote>


<p>Ok, this one did get me.  I do have private downloads of password-protected files on my old site.</p>

<p>I have to think back to the longevity of my blog &ndash; do I want the downloads archived forever?  Short
answer, no.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Old Pics Have Moved]]></title>
    <link href="http://eduncan911.com/misc/old-pics-have-moved.html"/>
    <updated>2014-04-06T21:54:32-04:00</updated>
    <id>http://eduncan911.com/misc/old-pics-have-moved</id>
    <content type="html"><![CDATA[<p>If you are reading this, then I get to say this:</p>

<blockquote><p>I moved my blog, and the photos didn&#8217;t go with it.</p></blockquote>


<p>You can try browsing the images in <a href="https://www.flickr.com/photos/eduncan911/sets/72157600808141363/">my Flickr set called Blogs</a>
for the one you were looking for; but alas, I didn&rsquo;t upload all photos (sorry Venna White fans).</p>

<p>Fret not.  If you really need that photo, just use the contact button at in the header and/or footer
of this site and send me the link you want the photo(s) for.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Wacom Intuos3/4 Is Incompatible With the Lenovo Helix]]></title>
    <link href="http://eduncan911.com/hardware/the-wacom-intuos3-slash-4-is-incompatible-with-the-lenovo-helix.html"/>
    <updated>2014-04-04T10:37:08-04:00</updated>
    <id>http://eduncan911.com/hardware/the-wacom-intuos3-slash-4-is-incompatible-with-the-lenovo-helix</id>
    <content type="html"><![CDATA[<p>I recently abandoned my 14 year dedication to Dell laptops in favor of the
Lenovo Helix ultrabook/tablet.  In doing so, I needed a stylus for the active
digitizer as the one that came with the Helix just isn&rsquo;t going to work for
diagramming and sketching.</p>

<h2>Research: Styluses for the Lenovo Helix</h2>

<p>I had a problem: I was obsessed for days reading every blog, review and comment
and watching every video I could find online to figure out what stylus would work
with the Wacom Active Digitizer that is built into the Helix.</p>

<p>Sadly, I couldn&rsquo;t find a straight answer.</p>

<h2>Wacom ZP501ESE Intuos3 Special Edition Grip Pen</h2>

<p>This is the pen I decided on.  It arrived today and I immediately ripped it open
only to find out it didn&rsquo;t work.  And yes, I removed the OEM stylus cause there is
a switch that disables the digitizer when the pen is inserted to save battery.</p>

<!-- more -->


<h2>So which one?</h2>

<p>Now that I am armed with new search queries <em>e.g. Lenovo Helix Intuos3 doesn&rsquo;t work</em>,
I&rsquo;ve found new pages with additional info that I wish I&rsquo;d found in the first place.</p>

<p>Usually I am diligent enough to find these errors ahead of time.  But, I failed this
time around and I&rsquo;m having fun writing on my new Octopress blog &ndash; so, why not whip
up a quick post to let others know.</p>

<p>I found <a href="http://forums.lenovo.com/t5/X-Series-Tablet-ThinkPad-Laptops/Wacom-Intuos-4-pen-doesn-t-work-on-Helix/td-p/1153403/page/2">this thread</a>
that was the most helpful in figuring out which stylus to get.  Specifically, this post:</p>

<blockquote><p>FYI, the Wacom Penabled Digitizer system is not compatible with Intuos, Cintiq, and Bamboo Tablet pens.<br/> <br/>Any other Wacom Penabled Tablet PC Pen will work (as mentioned, Series 7 slate, Asus EP121, Lenovo ThinkPad Tablet 2, Lenovo X61 - X230T series, Fujitsu T900 series, Motion F5t, Wacom Bamboo Feel pens to name just a few).<br/> <br/>Additionally the Wacom Pen Display Pens will work (eg DTU- series).<br/> <br/>These pens come in different shapes, sizes and button configurations, but the pen must match up with the digitizer system that is built into the tablet and many people aren&#8217;t aware that Wacom have different systems.<br/> <br/>The Penabled system is not as advanced as the Intuos or Cintiq unfortunately (fewer pressure degrees, no tilt angles etc), but still very impressive and useful.</p><footer><strong>Brett Gilbertson - Microsoft Tablet and Touch MVP</strong> <cite><a href='http://forums.lenovo.com/t5/X-Series-Tablet-ThinkPad-Laptops/Wacom-Intuos-4-pen-doesn-t-work-on-Helix/td-p/1153403/page/2'>Wacom Intuos 4 Pen Doesn&#8217;t Work on Helix</a></cite></footer></blockquote>


<p>Well, there we have it.  NewEgg, a return is coming!</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress and Posh-Git - Oh My]]></title>
    <link href="http://eduncan911.com/software/octopress-powershell-and-posh-git-oh-my.html"/>
    <updated>2014-04-03T16:11:01-04:00</updated>
    <id>http://eduncan911.com/software/octopress-powershell-and-posh-git-oh-my</id>
    <content type="html"><![CDATA[<p>As announced previously, I&rsquo;ve recently <a href="http://eduncan911.com/software/my-hackers-blog.html">converted my blog over to Octopress</a>.
This was not without a few stumbling blocks on Windows using Posh-Git.  I&rsquo;ve also recently started to suspect some issues
with <a href="https://github.com/dahlbyk/posh-git">Posh-Git</a> now that I am using it on a daily basis.</p>

<p>In this post, I am documenting the procedure for future installs on Windows; and, maybe I can help someone else who runs across the
same issues.</p>

<!-- more -->


<h2>Ruby on Windows? No, Yari on Windows</h2>

<p>This is my first exposure to Ruby.  I know, I&rsquo;ve been closed off to anything non-.NET since, well, .NET in 2002.  With that the first
steps to getting ruby installed.  A few quick searches yielded some issues with Windows and Ruby and Octopress, until I ran across
<a href="http://blog.zerosharp.com/setting-up-octopress-on-windows-again/">Robert Anderson&rsquo;s Octopress install</a>.</p>

<p>They key point to this type of installing is this golden snippet:</p>

<blockquote><p>Use yari instead of RVM/rbenv</p><p>Scott Muc has written yari which lets you switch between Windows Ruby versions.</p><footer><strong>Robert Anderson</strong> <cite><a href='http://blog.zerosharp.com/setting-up-octopress-on-windows-again/'>Setting Up Octopress on Windows Again</a></cite></footer></blockquote>




<!-- TODO: Unfortunately this didn't work for me out right.  I had some issues with the `gem install bundler` command that generated a lot of missing
dependencies. -->


<p>Once all dependencies are fixed up, it&rsquo;s onto following the setup guide over at Octopress:</p>

<p><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></p>

<h2><code>&gt; rake setup_github_pages</code></h2>

<p>Now, I am going to use GitHub Pages for my static blog hosting.  Those are the instructions I am going to focus on here and below.</p>

<p>The next step is to call the task to setup your repo for GitHub deployments.  Just take a quick gander a what it does,
as listed on the Octopress install guide:</p>

<ol>
<li>Ask for and store your Github Pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from &lsquo;origin&rsquo; to &lsquo;octopress&rsquo;</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog&rsquo;s url according to your repository.</li>
<li>Setup a master branch in the _deploy directory for deployment.</li>
</ol>


<p>If that sounds like a lot, wait until you see what actually does happen below.  So, we&rsquo;ll run it and look at the output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [master +2 ~1 -0 !]&gt; rake setup_github_pages
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.io.git)
</span><span class='line'>           or 'https://github.com/your_username/your_username.github.io')
</span><span class='line'>Repository url: git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>Added remote git@github.com:eduncan911/eduncan911.github.io.git as origin
</span><span class='line'>Set origin as default remote
</span><span class='line'>Master branch renamed to 'source' for committing your blog source files
</span><span class='line'>rm -rf _deploy
</span><span class='line'>mkdir _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>Initialized empty Git repository in C:/gd/code/eduncan911/_deploy/.git/
</span><span class='line'>'My Octopress Page is coming soon
</span><span class='line'>'hellip' is not recognized as an internal or external command, operable program or batch file.
</span><span class='line'>[master (root-commit) f1e0e3f] Octopress init
</span><span class='line'> 1 file changed, 0 insertions(+), 0 deletions(-)
</span><span class='line'> create mode 100644 index.html
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>cd -
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'>## Now you can deploy to git@github.com:eduncan911/eduncan911.github.io.git with `rake deploy` ##
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Btw, kudos to the developers of Octopress to put this much output in the build processes &ndash; makes
things much easier to debug than the vast majority of scripts you run.</p>

<p>But doh!  We have our first stumbling blocks.  We have a number of errors to work out here, three exactly.</p>

<p>Fortunately, <code>line 7</code> is an extremely common problem when working git.  Unfortunately though,
the common fixes doesn&rsquo;t seem to work with any Posh-Git install I&rsquo;ve used to date.</p>

<p>Before we get to that though, let&rsquo;s take a look at the ruby task to see exactly what is going on
before we jump to any conclusions.</p>

<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Set up _deploy folder and deploy branch for Github Pages deployment&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:setup_github_pages</span><span class="p">,</span> <span class="ss">:repo</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">repo</span>
</span><span class='line'>    <span class="n">repo_url</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">repo</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Enter the read/write url for your repository&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;(For example, &#39;git@github.com:your_username/your_username.github.io.git)&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;           or &#39;https://github.com/your_username/your_username.github.io&#39;)&quot;</span>
</span><span class='line'>    <span class="n">repo_url</span> <span class="o">=</span> <span class="n">get_stdin</span><span class="p">(</span><span class="s2">&quot;Repository url: &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">protocol</span> <span class="o">=</span> <span class="p">(</span><span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/(^git)@/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;https&#39;</span> <span class="p">:</span> <span class="s1">&#39;git&#39;</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">protocol</span> <span class="o">==</span> <span class="s1">&#39;git&#39;</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/:([^\/]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/github\.com\/([^\/]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">branch</span> <span class="o">=</span> <span class="p">(</span><span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\/[\w-]+\.github\.(?:io|com)/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;gh-pages&#39;</span> <span class="p">:</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>  <span class="n">project</span> <span class="o">=</span> <span class="p">(</span><span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;gh-pages&#39;</span><span class="p">)</span> <span class="p">?</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\/([^\.]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="k">unless</span> <span class="p">(</span><span class="sb">`git remote -v`</span> <span class="o">=~</span> <span class="sr">/origin.+?octopress(?:\.git)?/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="c1"># If octopress is still the origin remote (from cloning) rename it to octopress</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git remote rename origin octopress&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>      <span class="c1"># If this is a user/organization pages repository, add the correct origin remote</span>
</span><span class='line'>      <span class="c1"># and checkout the source branch for committing changes to the blog source.</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Added remote </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> as origin&quot;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git config branch.master.remote origin&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Set origin as default remote&quot;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git branch -m master source&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Master branch renamed to &#39;source&#39; for committing your blog source files&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">unless</span> <span class="o">!</span><span class="n">public_dir</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;rake set_root_dir[</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">]&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">jekyll_config</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jekyll_config</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^url:.*$/</span><span class="p">,</span> <span class="s2">&quot;url: </span><span class="si">#{</span><span class="n">blog_url</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">project</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">jekyll_config</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">rm_rf</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">mkdir</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git init&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;echo &#39;My Octopress Page is coming soon &amp;hellip;&#39; &gt; index.html&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="s2">Octopress init</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git branch -m gh-pages&quot;</span> <span class="k">unless</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">rakefile</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_branch(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_branch</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3</span><span class="si">#{</span><span class="n">branch</span><span class="si">}</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_default(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_default</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3push</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">rakefile</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">---</span><span class="se">\n</span><span class="s2">## Now you can deploy to </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> with `rake deploy` ##&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s step through what this task does to our repo:</p>

<!-- start:20 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># If octopress is still the origin remote (from cloning) rename it to octopress</span>
</span><span class='line'><span class="nb">system</span> <span class="s2">&quot;git remote rename origin octopress&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, no problem.  We are renaming origin.  But what you don&rsquo;t know is with Posh-Git, when
you rename origin, it seems creates an empty origin!  So, when the next system command executes:</p>

<!-- start:22 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>  <span class="c1"># If this is a user/organization pages repository, add the correct origin remote</span>
</span><span class='line'>  <span class="c1"># and checkout the source branch for committing changes to the blog source.</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We get our first error, <code>fatal: remote origin already exists.</code></p>

<p>Ok, back on task of what the <code>RakeFile</code> is doing to move forward.</p>

<!--  start:26 mark:27,29 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Added remote </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> as origin&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git config branch.master.remote origin&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Set origin as default remote&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git branch -m master source&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Master branch renamed to &#39;source&#39; for committing your blog source files&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="k">unless</span> <span class="o">!</span><span class="n">public_dir</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;rake set_root_dir[</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">]&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Interesting.  I haven&rsquo;t seen this in my git-ninja code before.  A quick Google and we come up
with this SO answer on how to setup master to track a remote branch:</p>

<blockquote><p>You can do the following (assuming you are checked out on master and want to push to a remote branch master):</p><p>Set up the &#8216;remote&#8217; if you don&#8217;t have it already</p><p># git remote add origin ssh://&#8230;<br/>Now configure master to know to track:</p><p># git config branch.master.remote origin<br/># git config branch.master.merge refs/heads/master<br/>And push:</p><p># git push origin master</p><footer><strong>Paul Hedderly</strong> <cite><a href='http://stackoverflow.com/a/625460/56693'>stackoverflow.com/a/625460/&hellip;</a></cite></footer></blockquote>


<p>So now we have master tracking a remote branch and on <code>line 29</code>, we&rsquo;ve renamed master to a new branch
called <code>source</code> (which also switches us to <code>source</code> for future commands).</p>

<p>Continuing&hellip;</p>

<!--  start:37 mark:45-48 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">jekyll_config</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jekyll_config</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^url:.*$/</span><span class="p">,</span> <span class="s2">&quot;url: </span><span class="si">#{</span><span class="n">blog_url</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">project</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">jekyll_config</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">rm_rf</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">mkdir</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git init&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;echo &#39;My Octopress Page is coming soon &amp;hellip;&#39; &gt; index.html&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="s2">Octopress init</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ah, we are create a new directory (<code>_deploy</code> by default Octopress config) and by calling
<code>git init</code> we create a new bank repo!  This was not clear to me as to why at first, until I got things
working.  You&rsquo;ll see why in a bit.</p>

<p>And look here, on <code>line 46</code>, we have our 2nd error in the output.  It would seem this
is a parsing typo on Windows machines.  So, we never get this index.html file!  No biggie,
we&rsquo;ll be replacing that very shortly anyways.</p>

<p>Let&rsquo;s move forward.</p>

<!-- start:49 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">system</span> <span class="s2">&quot;git branch -m gh-pages&quot;</span> <span class="k">unless</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is my first Ruby playground, so I am not exactly sure what this line does.  I would say we create
a branch called gh-pages, but that is for GitHub Projects (for corporate accounts), not our
GitHub Pages that we using here.</p>

<p>I suspect the <code>unless branch == 'master'</code> is what prevents this line from running on my installation.</p>

<!-- start:50 mark:50 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">rakefile</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_branch(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_branch</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3</span><span class="si">#{</span><span class="n">branch</span><span class="si">}</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_default(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_default</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3push</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">rakefile</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">---</span><span class="se">\n</span><span class="s2">## Now you can deploy to </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> with `rake deploy` ##&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally we are at the end.  Let&rsquo;s see, back on <code>line 48</code> we are sitting in a new directory
called <code>_deploy</code> with a new clean <code>git init</code>.  So, on <code>line 50</code> we add a remote for origin&hellip;</p>

<p>And get our 3rd and final error, that we have already seen before.</p>

<h3>fatal: remote origin already exists</h3>

<p>As I mentioned earlier, this is most likely because Posh-Git already creates an origin and never
leaves an empty remote.</p>

<p>I&rsquo;ve seen this <a href="https://www.google.com/search?q=fatal%3A+remote+origin+already+exists&amp;oq=fatal%3A+remote+origin+already+exists&amp;aqs=chrome..69i57j69i58.840j0j7&amp;sourceid=chrome&amp;espv=210&amp;es_sm=122&amp;ie=UTF-8">fatal: remote origin already exists</a>
error all too often and it usually means you already have an origin and cannot add another one.  Usually <code>git</code> on Linux allows you to fix with a set of simple and meaningful commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># pseudo code, not actually used during this install guide</span>
</span><span class='line'><span class="nv">$ </span>git remote add temp user@my-url.com/repo.git
</span><span class='line'><span class="nv">$ </span>git remote rm origin
</span><span class='line'><span class="nv">$ </span>git remote add origin user@my-url.com/repo.git
</span><span class='line'><span class="nv">$ </span>git remote rm temp
</span></code></pre></td></tr></table></div></figure>


<p>But this has never worked for me using Posh-Git.  When trying to remove origin with Posh-Git, you get a new and blocking
error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote rm origin
</span><span class='line'>error: Could not remove config section 'remote.origin'</span></code></pre></td></tr></table></div></figure>


<p>Searching online basically leads you to a dead end in that this normally works using other versions of git.  I did stumble upon
a related SO question about remotes using <code>set-url</code>, which <a href="http://stackoverflow.com/a/22826225/56693">lead me to come up with this solution</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote -v
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (fetch)
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (push)
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the <code>rake setup_github_pages</code> has renamed our origin to octopress.  But Posh-Git seemed to have created
another empty origin and it won&rsquo;t the script add one.  Let&rsquo;s fix that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote -v
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (fetch)
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (push)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)</span></code></pre></td></tr></table></div></figure>


<p>There we go.  Let&rsquo;s <code>rake</code> that <code>setup_github_pages</code> script again, shall we?</p>

<!-- mark:17 -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake setup_github_pages
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.io.git)
</span><span class='line'>           or 'https://github.com/your_username/your_username.github.io')
</span><span class='line'>Repository url: git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>rm -rf _deploy
</span><span class='line'>mkdir _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>Initialized empty Git repository in C:/gd/code/eduncan911/_deploy/.git/
</span><span class='line'>'My Octopress Page is coming soon
</span><span class='line'>'hellip' is not recognized as an internal or external command,
</span><span class='line'>operable program or batch file.
</span><span class='line'>[master (root-commit) 27d2dd5] Octopress init
</span><span class='line'> 1 file changed, 0 insertions(+), 0 deletions(-)
</span><span class='line'> create mode 100644 index.html
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>cd -
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'>## Now you can deploy to git@github.com:eduncan911/eduncan911.github.io.git with `rake deploy` ##</span></code></pre></td></tr></table></div></figure>


<p>Well crap. We still get that <code>fatal: remote origin already exists</code> on <code>line 17</code> error after all we did!</p>

<p>Ah, but remember what I said earlier about a directory called <code>_deploy</code>?  They are making a new repo
and setting up the <code>origin</code> manually.</p>

<p>So, we have to set that <code>origin</code> ourselves again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; cd .\_deploy
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>This is just checking to see what was there and as we suspected the <code>git remote add origin</code> command in the task did not work.</p>

<p>You may also notice that when you change directories to the <code>_deploy</code> new repo, we are on <code>master</code> now of a different repo.
We were previously on `source&#8217; branch of the root repo from the previous scripts.</p>

<p>So let&rsquo;s fix that up.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; cd ..
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; </span></code></pre></td></tr></table></div></figure>


<p>There we go.  All fixed up and ready to continue.  Make sure to change directories <code>cd ..</code> to backup to where you were
before continuing.</p>

<p>At this point, it is not necessary to run the <code>rake setup_github_pages</code> again because the script continues even with
errors, as we&rsquo;ve seen above.  The last part of the script seems to modify the <code>RakeFile</code>.  We&rsquo;ll leave that for another
topic as we want to keep hacking on our new blog to get it up.</p>

<p class='info ' data-title=''>To the keen observer, you may notice that we have two branches of the same repo:</p>


<p>git@github.com:eduncan911/eduncan911.github.io.git<br/># master<br/># source</p>


<p>The first part of Octopress&#8217; instructions for github actually branches what you cloned from Octopress&#8217; github<br/>into a source branch.  Ok, check.</p>


<p>But recall that we created a sub-directory called _deploy and we git init a new clean repo there.  It was<br/>already set to master, and finally we made its origin the same as our original source.</p>


<p>What this means is now you will have two branches with completely different code.  Your source branch is what<br/>you will work from, commit to and push up.  While the Octopress ruby framework will handle the generation of the<br/>static site and deployments to the master branch.</p>


<p>The last piece to remember is that GitHub Pages will only use the master branch to serve your static site.</p>


<p>Sweet!  Our website (aka master branch) will be nice and clean based on this _deploy directory, whereas<br/>our source branch will be the work committed.</p>


<h2><code>rake generate</code></h2>

<p>This runs without issue.</p>

<h2><code>rake deploy</code></h2>

<p>Aw shit, it would seem we still have some issues because this task generates errors:</p>

<!-- mark:6-7,24-28 -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake deploy
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>## Deploying branch to Github Pages
</span><span class='line'>## Pulling any updates from Github Pages
</span><span class='line'>cd _deploy
</span><span class='line'>fatal: No remote repository specified.  Please, specify either a URL or a
</span><span class='line'>remote name from which new revisions should be fetched.
</span><span class='line'>cd -
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>
</span><span class='line'>## Copying public to _deploy
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>
</span><span class='line'>## Committing: Site updated at 2014-04-03 22:58:56 UTC
</span><span class='line'>[master 5257cf9] Site updated at 2014-04-03 22:58:56 UTC
</span><span class='line'> 61 files changed, 1118 insertions(+)
</span><span class='line'> create mode 100644 assets/jwplayer/glow/controlbar/background.png
</span><span class='line'> ...(snip)...
</span><span class='line'> create mode 100644 sitemap.xml
</span><span class='line'> create mode 100644 stylesheets/screen.css
</span><span class='line'>
</span><span class='line'>## Pushing generated _deploy website
</span><span class='line'>fatal: 'origin' does not appear to be a git repository
</span><span class='line'>fatal: Could not read from remote repository.
</span><span class='line'>
</span><span class='line'>Please make sure you have the correct access rights
</span><span class='line'>and the repository exists.
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>We got two errors to sort out.  Let&rsquo;s take a look at the first one.</p>

<h3>fatal: No remote repository specified.  Please, specify either a URL or a remote name from which new revisions should be fetched.</h3>

<p>Humm, this sounds like a <code>git pull</code> was issued.  Let&rsquo;s take a look at the ruby commands for this.  Again, thanks to
the great output from the developers, a quick search in the <code>RakeFile</code> finds this code.</p>

<!--  mark:5-6,18 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;deploy public directory to github pages&quot;</span>
</span><span class='line'><span class="n">multitask</span> <span class="ss">:push</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Deploying branch to Github Pages &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Pulling any updates from Github Pages &quot;</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git pull&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="p">(</span><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">/*&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">rm_rf</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:copydot</span><span class="o">].</span><span class="n">invoke</span><span class="p">(</span><span class="n">public_dir</span><span class="p">,</span> <span class="n">deploy_dir</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Copying </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/.&quot;</span><span class="p">,</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add -A&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Committing: Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Pushing generated </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2"> website&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git push origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Github Pages deploy complete&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ah hah, there marked on lines 5 and 6 is the <code>git pull</code> for the <code>_deploy</code> directory.  Smart, they are pulling down any
changes you may have made manually to your static pages.  For example, using GitHub&rsquo;s edit file feature to edit a file
directly in the browser.</p>

<p>I wonder why that didn&rsquo;t work because as you recall, we setup the <code>origin</code> correctly.  Let&rsquo;s figure out why.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; cd .\_deploy
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>Wha&hellip;  We already set this before.  What happened?  Well, I can tell you that it is because I re-ran the
<code>rake setup_github_pages</code> a 2nd and 3rd time.  If you recall from the setup_github_pages take, it doesn&rsquo;t care if you have
an existing deployment directory or not &ndash; it blows out and creates it again!</p>

<p>So, just go add the origin again.  <em>facepalm</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; cd ..
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Before we continue, let&rsquo;s take a quick look at that second error.  Scrolling down to <code>line 18</code> in the same ruby
task above we see a <code>git push origin master</code> being executed.</p>

<p>Because we had no <code>origin</code> set correctly, this would cause yet another error.  We got that fixed already though with
the above <code>git remote set-url --add</code> command.</p>

<p>Let&rsquo;s try to deploy again now that we fixed the <code>_deploy</code> folder.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake deploy
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>## Deploying branch to Github Pages
</span><span class='line'>## Pulling any updates from Github Pages
</span><span class='line'>cd _deploy
</span><span class='line'>Warning: Permanently added 'github.com,192.30.252.131' (RSA) to the list of known hosts.
</span><span class='line'>There is no tracking information for the current branch.
</span><span class='line'>Please specify which branch you want to merge with.
</span><span class='line'>See git-pull(1) for details
</span><span class='line'>
</span><span class='line'>    git pull &lt;remote&gt; &lt;branch&gt;
</span><span class='line'>
</span><span class='line'>If you wish to set tracking information for this branch you can do so with:
</span><span class='line'>
</span><span class='line'>    git branch --set-upstream-to=origin/&lt;branch&gt; master
</span><span class='line'>
</span><span class='line'>cd -
</span><span class='line'>rm -rf _deploy/assets
</span><span class='line'>rm -rf _deploy/atom.xml
</span><span class='line'>rm -rf _deploy/blog
</span><span class='line'>rm -rf _deploy/favicon.png
</span><span class='line'>rm -rf _deploy/images
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>rm -rf _deploy/javascripts
</span><span class='line'>rm -rf _deploy/robots.txt
</span><span class='line'>rm -rf _deploy/sitemap.xml
</span><span class='line'>rm -rf _deploy/stylesheets
</span><span class='line'>
</span><span class='line'>## Copying public to _deploy
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>
</span><span class='line'>## Committing: Site updated at 2014-04-03 23:21:58 UTC
</span><span class='line'># On branch master
</span><span class='line'>nothing to commit, working directory clean
</span><span class='line'>
</span><span class='line'>## Pushing generated _deploy website
</span><span class='line'>Warning: Permanently added 'github.com,192.30.252.131' (RSA) to the list of known hosts.
</span><span class='line'>Counting objects: 79, done.
</span><span class='line'>Delta compression using up to 12 threads.
</span><span class='line'>Compressing objects: 100% (72/72), done.
</span><span class='line'>Writing objects: 100% (79/79), 186.45 KiB | 0 bytes/s, done.
</span><span class='line'>Total 79 (delta 1), reused 0 (delta 0)
</span><span class='line'>To git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'> * [new branch]      master -&gt; master
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Humm, a few warnings about no tracking information for the remote branch, which we renamed to be <code>source</code> from <code>master</code>
if you recall from earlier.  I think this is normal because we haven&rsquo;t pushed <code>source</code> up yet.</p>

<h3>git push origin source</h3>

<p>Now, let&rsquo;s see if we can fix the tracking information for our <code>source</code> branch by pushing our changes up.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'initial commit of source branch'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>Seems like we are good here.</p>

<p>Let&rsquo;s head over to our GitHub Page and see what&rsquo;s there in the repo.  What&rsquo;s this?  My master is a nice and clean static
site?  Sweet!</p>

<p><a href="https://github.com/eduncan911/eduncan911.github.io/tree/master">github.com/eduncan911/eduncan911.github.io/tree/master</a></p>

<p>And lookie here, the <code>source</code> branch has the source!</p>

<p><a href="https://github.com/eduncan911/eduncan911.github.io/tree/source">github.com/eduncan911/eduncan911.github.io/tree/source</a></p>

<p>I&rsquo;m sticking a fork in her and calling it&hellip;  These may be normal warnings with the way the remote tracking is handled
as I don&rsquo;t have a lot of experience with that part of git.</p>

<h2>It&rsquo;s all downhill from here</h2>

<p>If you have stuck with me this long, I have some good news &ndash; you&rsquo;re done!  Time to start blogging!</p>

<p>You can read the rest of the deployment guide from here as they have some useful tips.  Also, make sure to commit
your work (they mention this too).</p>

<p>My last piece of advice after you get the hang of things and create a few test posts is to look into these commands.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate   <span class="c"># Generates posts and pages into the public directory</span>
</span><span class='line'>rake watch      <span class="c"># Watches source/ and sass/ for changes and regenerates</span>
</span><span class='line'>rake preview    <span class="c"># Watches, and mounts a webserver at http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ve already run <code>rake generate</code>; but, take a look at the other two.</p>

<p><code>rake watch</code> is nice to auto-generate files as you change them.</p>

<p><code>rake preview</code> is even better!  It will watch for and auto-generate your site; but, more so it runs a very lightweight
tiny webserver (much less tiny than IIS!) in the background where you can open a browser and hit refresh to your heart&rsquo;s
content.</p>

<p>I advise everyone to do that to keep the number of commits down because once  you have a few 100 pages, that generate and
deploy is going to take a long while.  Might as well get into the habit early!</p>

<p>~E</p>

<p>PS: I am thinking of renting a <a href="http://technichi.com/">Macbook Pro</a> because of the time lost with stuff like this
under Windows.  Argh&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Hackers' Blog]]></title>
    <link href="http://eduncan911.com/software/my-hackers-blog.html"/>
    <updated>2014-04-02T23:25:01-04:00</updated>
    <id>http://eduncan911.com/software/my-hackers-blog</id>
    <content type="html"><![CDATA[<p>Three years, 11 months and 22 days&hellip; That&rsquo;s how long it has been since my last blog post.</p>

<p>When I originally launched this blog, I was using the software I originally wrote for CommunityServer back in
2004 and 2005.  Ever since then I have dreamed of grand visions of new blogging software.  Tinkering with new
design patterns, following <a href="http://invalidlogic.com/2008/12/22/blogging-apps-are-the-new-hello-world/">Ken Robertson&rsquo;s advice of trying out new frameworks with the concept of an Hello Blog</a>,
where you create a blog using whatever language you want.  While that was all said and good, I never got around to
finishing any of them good enough to launch them live.</p>

<h3>Enter <a href="http://octopress.org/">Octopress</a>: A blogging framework for hackers</h3>

<p>For those that haven&rsquo;t heard about it, go <a href="http://octopress.org/">read about it</a>.  In short, it uses Ruby to create a static blog for
you to upload anywhere.  Yes, just raw .html files and css/js/image files.  And, that&rsquo;s about it.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<p>You write your posts in MarkDown, and be done with it. There are all sorts of little <del>hacks</del> shortcuts when writing posts that I
am going to have a lot of fun with.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview
</span><span class='line'># now open browser to eduncan911.local:4000/</span></code></pre></td></tr></table></div></figure>


<p>When you go completely static, interesting opportunities start to emerge&hellip;  You no longer need a &ldquo;web host&rdquo; &ndash; all you need is a place
to dump your files online somewhere.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>Enter <a href="https://pages.github.com/">GitHub Pages</a></h3>

<p>GitHub allows you to <a href="https://pages.github.com/">host static pages</a> in a public repo.  I&rsquo;ve been hosting my code.eduncan911.com
there for years.</p>

<p><span class='pullquote-right' data-pullquote='If I create a static blog, I can just host it at GitHub.'>
A few Google searches revealed I wasn&rsquo;t the only one who thought this way. If I create a static blog, I can just host it at GitHub.
At first I stumbled upon <a href="https://github.com/jekyll/jekyll">Jekyll</a> which gives you full control over markup, css, etc.  But here I was in
the same position &ndash; writing code.  I found that Octopress is built upon Jekyll; but, it already has a default theme, css, plugins, etc.
</span></p>

<p>The best part is they have step-by-step instructions on how to publish it straight to GitHub Pages.  It really can&rsquo;t get any easier than
this, for any <del>hacker</del> skill level.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add --all
</span><span class='line'>git commit -m "new post: My Hacker Blog"
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s right, this blog is hosted at <a href="http://eduncan911.github.io/">eduncan911.github.io</a>.  They have instructions on
setting up a CNAME (in my case though, an ALIAS for the root eduncan911.com domain) and that&rsquo;s it, you&rsquo;re live.</p>

<p>As a matter of fact, <a href="https://github.com/eduncan911/eduncan911.github.io">go browse my site</a> just like the old &ldquo;directory browsing&rdquo; method.
If you want to see the source code in how I generate the site, switch branches to <a href="https://github.com/eduncan911/eduncan911.github.io/tree/source"><code>source</code></a> to
check that out.  Tip: most of that is Octopress.  Drill into the /source/ directory to see the raw nit-n-gritty fun stuff.</p>

<p>I will admit though, it took some tinkering to get Octopress setup and working correctly on Windows with PoshGit and PowerShell.</p>

<h3>The way forward</h3>

<p>There are a number of plug-ins, and there is some work I want to do to the asides (right column).  But I am liberated
to no longer wait, and just do.</p>

<p>Most of all, being just raw MarkDown, I can write from any device now: tablets, smart phones, anywhere.  And, being on GitHub,
I can just browse to my source branch and create a new file to start blogging.  There are instructions for a C.I. server to
take callbacks from GitHub, and to publish it on the site after commits.  Yep, very fun stuff&hellip;</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power Naps for Everyone]]></title>
    <link href="http://eduncan911.com/blog/archives/power-naps-for-everyone.html"/>
    <updated>2011-04-25T19:28:35-04:00</updated>
    <id>http://eduncan911.com/blog/archives/power-naps-for-everyone</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: left; border-top: 0px; border-right: 0px; padding-top: 0px" title="Mei sleeping on our couch." border="0" alt="Mei sleeping on our couch." align="left" src="http://eduncan911.com/blog/archives/images/How-to-Take-a-Nap_CD86/V__A2E1_thumb.jpg" width="256" height="193" />You may think you know how to take a nap.&#160; Lie down, close eyes, and whenever you wake up that&#8217;s it.&#160; As it turns out, anything beyond 30 minutes puts you into danger of biting your work colleagues heads off when they interrupt you at 40 or 50 minutes into your nap.</p>


<p>  <p>I find myself constantly giving this advice to my work colleagues and family members.&#160; So, here&rsquo;s a blog post on what works very well for me.</p>  <p>There was a British study I read some 6 or so years ago that concluded a simple formula for power napping.&#160; And ever since I started to use this formula, it has worked wonders for my afternoon concentration.&#160; </p>  <p><strong>Preparation</strong></p>  <p>First and foremost, caffeine is your enemy here.&#160; If you are a 2+ cups of coffee drinker a day, &quot;because I need it to get going&quot;, then you may have to look elsewhere to prepare.&#160; There&rsquo;s nothing you can do when you crash in the afternoon but to drink more caffeine. </p>  <p>One idea would be to switch to Japanese Green Tea (not the cheap store-brands, but actual shredded green leafs that you control the dosage with).&#160; It is said that the caffeine in Japanese Green Tea absorbs at a much slower pace than coffee, which is less of a shock to your body (and lasts longer).&#160; This could allow you to come down from that high more easily, and allow a power nap.</p>  <p>I actually went caffeine-free for about 6 solid years.&#160; It completely changes your sleep habits (for the good).&#160; The only caffeine I take now is a cup of imported Japanese Green Tea in the morning (but no later than 12 noon), and a piece of chocolate here and there once a week or so.</p>  <p><strong>1. Remove all distractions.</strong></p>  <p>Turn off the computer, all distractions, close the office door, put up a sign in your cubical for Do Not Disturb &ndash; whatever it takes to remove all distractions.&#160; Also, silence any phones in your area (no txt, next chess move alerts, etc).</p>  <p>The problem with New York City when I moved here is I have yet to work in an office with dedicated offices, or even a cubical!&#160; Everyone is squeezed into tight open work areas, and demanded to be at full attention at all hours of the day.&#160; This is a horrible working environment and goes against our basic evolutional bodily functions.&#160; You are yawning at 2pm?&#160; Yeah, no wonder.&#160; All I have to say here is to bring a set of very large headphones, and set a workplace policy that when you have your headphones on, you are to not be disturbed.&#160; Works most of the time actually (even if head laying on the desk).</p>  <p><strong>2. Set an alarm for no longer than 30 minutes.&#160; </strong></p>  <p>You do not want to sleep past 30 minutes, no matter how tired you are.&#160; When the alarm goes off, you must get up &ndash; no exceptions.&#160; This is because your body will start to go into REM Stage I sleep at 35 to 40 minutes, and your body will be expecting to go through all 3 stages of REM &ndash; over the next 3 to 4 hours.&#160; Your body will start to release the chemicals needed for deep sleep at Stage I, and you don&rsquo;t want any of that.&#160; If your REM cycle is interrupted during any of these stages, well, that&rsquo;s when Mr. Groggy comes out and is introduced to your co-workers.</p>  <p>Tip: the use of a smartphone in your workplace is perfect here.&#160; Set some relaxing meditation music on your phone as well as an alarm on the phone for no longer than 30 minutes.&#160; Just turn off the ringer and text message sounds first.</p>  <p><strong>3. Set the proper conditions.</strong></p>  <p>If it is not possible to set a dark area, bring a sleep mask with you to work.&#160; Also, increase the temp if possible or put on a jacket &ndash; even if you are a bit warm already (your body lowers its temp during sleep cycles).&#160; If you cannot use a sleep mask or dim the lights, just lie your forehead on your arms on your desk. </p>  <p><strong>4. Remove all thoughts of stress.&#160; </strong></p>  <p>Do not think about anything related to work, no matter how fun it is.&#160; Think nothing of deadlines or tasks &ndash; that only begets an elevated heart rate. Think of the next vacation for the family instead, or your kids next birthday wish, or that hot rod car project: whatever makes you happy.&#160; </p>  <p><strong>If interrupted from slumberâ¦</strong></p>  <p>There are a few rules to follow if you are interrupted by the kids, or co-workers.</p>  <ul>   <li>Get up immediately.&#160; </li>    <li>Do not attempt to go back to the nap for the next 2 to 3 hours.&#160; Anything earlier than that does not work. </li> </ul>  <p>This is why it is important to set the policy that once you are resting, you are at rest.&#160; </p>  <p><strong>Power Naps are not a replacement for the lack of sleep.</strong></p>  <p>One bad night of sleep?&#160; Fine.&#160; Two or more of consecutive bad nights of sleep?&#160; Power naps aren&rsquo;t going to help much.</p>  <p><strong>Tell the boss you are just thinking.</strong></p>  <p>The British study (if I could find it, I would &ndash; Binging <em>British Power Nap Studies</em> has an endless supply of links) also concluded that power napping makes you more focused in the 2 to 3 hours after the power nap.&#160; Additional research on the study yielded that people tend to have their best ideas just before and just after Stage I REM.</p>  <p>So the next time your boss asks if you are sleeping on the job, say no and you just are thinking.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.NET 4.0, HTML, and a Potentially Dangerous Request.Form Value]]></title>
    <link href="http://eduncan911.com/blog/archives/net-4-0-html-and-a-potentially-dangerous-request-form-value.html"/>
    <updated>2010-04-09T01:51:41-04:00</updated>
    <id>http://eduncan911.com/blog/archives/net-4-0-html-and-a-potentially-dangerous-request-form-value</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-right-width: 0px; margin: 0px 0px 20px 20px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="validation" border="0" alt="validation" align="right" src="http://eduncan911.com/blog/archives/images/ApotentiallydangerousRequest.Formvalue.0_12CAD/validation.jpg" width="312" height="244" /> I ran across a breaking change tonight in the .NET 4.0 CLR&#8217;s version of ASP.NET.&#160; The 4.0 version of the CLR binds to any HTTP request data to validate against.</p>


<p>  <p>The entire error you may see is:</p>  <blockquote>   <p><em>A potentially dangerous Request.Form value was detected from the client</em></p> </blockquote>  <p>This is because 4.0 now inspects all request data.&#160; Rather that being the cookies, urls, headers, etc.&#160; A very nice security upgrade, I might say.&#160; This will prevent a hacker from submitting malicious code through cookies or other means that you may be parsing. </p>  <h2>WYSIWYG and/or HTML Editors with .NET 4.0&rsquo;s CLR</h2>  <p>One common issue that immediately creeps up with this new security is when you want to use a rich-text editor or even a textbox that you want to submit HTML data through.&#160; This seems to be now impossible with .NET 4.0&rsquo;s CLR&rsquo;s default validation because you cannot override this behavior, if you remain in 4.0&rsquo;s validation.</p>  <p>And no, there is no way to selectively disable which items to validate.</p>  <h2>ASP.NET MVC&rsquo;s ValidateInput attribute does not work</h2>  <p>You, like me, most likely just slapped a big ol&#8217; fat <font face="Courier New">[ValidateInput]</font> attribute on your MVC controller&rsquo;s action method and thought you were done.&#160; But behold, the error still remains!</p>  <p>This is because your MVC website is running on the .NET 4.0 CLR and therefore continues to be validated.</p>  <h2>The Fix: HttpRuntime requestValidationMode</h2>  <p>The work-around is to place this into your web.config&rsquo;s <font face="Courier New">&lt;system.web&gt;</font> node:</p>  <p></p>  <pre><code>
&lt;httpRuntime requestValidationMode=&quot;2.0&quot; /&gt;</p>

<p></code></pre></p>

<p></p>




<p>What this does is it forces the CLR to only check the Page&#8217;s html fields, which you can now overwrite with the <font face="Courier New">[ValidateInput]</font> attribute in MVC controllers, or the <font face="Courier New">&lt;%@ Page validateRequest=&quot;false&quot; %&gt;</font>, or any other normal means. </p>




<p>Sadly though, this also disables all of those other checks for the request data.&#160; Obviously, this is not a preferred work-around and even though VS 2010 is due for release on April 12th (just around the corner!), I do not see any notations of this being changed anytime soon.</p>




<p>If someone knows a work around for 4.0, please let me know.&#160; This is a great new feature, but sadly we must disable it for just about any website we develop on.</p>




<p>Unless we move to <a href="http://daringfireball.net/projects/markdown/" target="_blank">MarkDown</a> that is (which I am a big fan of, clients not so muchâ¦).</p>




<p><a href="http://msdn.microsoft.com/en-us/library/system.web.configuration.httpruntimesection.requestvalidationmode(VS.100).aspx" target="_blank">You can find out more information about this over at MSDN</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Bootable USB Drive With Windows]]></title>
    <link href="http://eduncan911.com/blog/archives/create-a-bootable-usb-drive-with-windows.html"/>
    <updated>2010-04-01T23:21:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/create-a-bootable-usb-drive-with-windows</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-right-width: 0px; margin: 0px 20px 20px 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="5805-1[1]" border="0" alt="5805-1[1]" align="left" mce_src="/blog/archives/images/CreateaBootableUSBDrive_F442/580511.jpg" width="244" height="167" src="http://eduncan911.com/blog/archives/images/CreateaBootableUSBDrive_F442/580511.jpg"> I find myself Bing-ing this every few months to make sure I included each and every step.&nbsp; So often, that I can&#8217;t believe I still Bing it.&nbsp; So below is a manual for anyone (mostly me) to follow in the future.</p>


<p>  <h2>USB Boot Linux, Windows or any other operating system</h2>  <p>You will be creating a bootable usb drive with Windows 7 or Vista&rsquo;s diskpart utility.&nbsp; Even though you are using Windows to create the bootable device, the source disk should not matter as long as the os supports booting from fat32.&nbsp; You can have a Linux iso mounted as the source, and the usb stick will end up being a Linux bootable usb.</p>  <p>Without further ado, on with the steps.</p>  <h2>Creating a bootable USB device</h2>  <p>In Windows 7 or Vista, open a command prompt.&nbsp; A shortcut is to press <font face="Courier New"><b>WINDOWS-KEY + R</b></font> and then type <font face="Courier New"><b>CMD</b></font>, press <font face="Courier New"><b>ENTER</b></font>.</p>  <p><font face="Courier New">C:\Users\eduncan911&amp;gt; diskpart</font></p>  <p><font face="Courier New">DISKPART&gt; list disk</font></p>  <blockquote>   <p>Inspect the list and note which one is the USB drive.&nbsp; Tip: It&rsquo;s most likely the last one.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; select disk 1</font></p>  <blockquote>   <p>Where 1 is the disk number from the <font face="Courier New">list disk</font> command above.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; detail disk</font></p>  <blockquote>   <p>The <font face="Courier New">detail disk</font> step above lists the details of the selected disk.&nbsp; Make sure the correct one is listed.&nbsp; If not, go back to <font face="Courier New">list disk</font> and start over.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; clean</font></p>  <p><font face="Courier New">DISKPART&gt; create partition primary</font></p>  <p><font face="Courier New">DISKPART&gt; select partition 1</font></p>  <p><font face="Courier New">DISKPART&gt; active</font></p>  <p><font face="Courier New">DISKPART&gt; format fs=fat32 quick label=&ldquo;USB_16GB&rdquo;</font></p>  <p><font face="Courier New">DISKPART&gt; assign</font></p>  <p><font face="Courier New">DISKPART&gt; detail disk</font></p>  <blockquote>   <p>Note the drive letter listed in the column labeled <font face="Courier New">LTR</font>.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; exit</font></p>  <p><font face="Courier New">C:\Users\eduncan911&gt; xcopy d:*.* g:\ /E /F</font></p>  <blockquote>   <p>Where d:\ is your mounted ISO or DVD you want to copy from, and g:\ is the USB device to copy to.</p> </blockquote>  <p><font face="Courier New">C:\Users\eduncan911&gt; exit</font></p>  <p>And that&rsquo;s it.&nbsp; Go stick it in something and boot it.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managed Extensibility Framework (MEF) - Microsoft's Official Inversion of Control Container]]></title>
    <link href="http://eduncan911.com/blog/archives/managed-extensibility-framework-mef-microsofts-official-inversion-of-control-container.html"/>
    <updated>2010-02-16T00:50:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/managed-extensibility-framework-mef-microsofts-official-inversion-of-control-container</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p>This new Microsoft feature in .NET Framework 4 is a programming model for reusing components, very similar to those Inversion of Control container frameworks out there that we all know and love (Castle Windsor, Structured Map, their own Unity from the Patterns and Practices team and etc).&nbsp; Now, they have built their own to address the pain points of these frameworks called the Managed Extensibility Framework, or MEF for short.</p>


<p> <p>I was pleasantly surprised this weekend when reading the February 02010&rsquo;s issue of MSDN Magazine.&nbsp; Getting up-to-speed on some new features in .NET Framework 4, I saw the headline &ldquo;<a href="http://msdn.microsoft.com/en-us/magazine/ee291628.aspx" target="_blank">Building Composable Apps in .NET 4 with the Managed Extensibility Framework</a>&rdquo; by Glenn Block.&nbsp; Yeah, it just rolls off your tongue eh?&nbsp; So I decided I had a few minutes while waiting for the water to boil and scanned the article.&nbsp; I am glad I did.</p> <p>In this post, I will try to give a very brief overview on how to use MEF coming from a background of using other Inversion of Control (IoC) containers, including some of the gotchas that you must be aware of during the switch.&nbsp; Yeah, you will want to make the switch &ndash; the switch away from those other bulky frameworks.&nbsp; I, for one, am officially announcing my abandonment of Castle and Unity for all future projects.&nbsp; Because once you add-in .NET 4&rsquo;s new data annotations for seriously improved validation, mixed with MEF, the only other 3rd party component I am left with is Castle&rsquo;s Logger abstraction &ndash; which I am hoping I can find a replacement for with .NET 4&rsquo;s new features.</p> <h2>MEF Terminology</h2> <p>First and fore-most for those of you already using an IoC container, it&rsquo;s time for a quick review on what MEF calls a few things and concepts.&nbsp; Below is a table I whipped up to help compare the two terminologies (the MEF portions largely taken from Glenn&rsquo;s excellent article).</p> <p>&nbsp;<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="2-15-2010 10-41-32 PM" border="0" alt="2-15-2010 10-41-32 PM" src="http://eduncan911.com/blog/archives/images/ManagedExtensibilityFrameworkMicrosoftsO_A9C4/2152010104132PM_3.png" width="832" height="649"> </p> <p>Below is an image from Glenn&rsquo;s article that helps visualize the concepts above of MEF.</p> <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="ee291628_Block_Fig1(en-us,MSDN_10)" border="0" alt="ee291628_Block_Fig1(en-us,MSDN_10)" src="http://eduncan911.com/blog/archives/images/ManagedExtensibilityFrameworkMicrosoftsO_A9C4/ee291628_Block_Fig1enusMSDN_10.png" width="413" height="288"> </p> <p>You can see that the overall concept is called Composition.&nbsp; A &lsquo;part&rsquo; is the type or service you want to export.&nbsp; The part (or parts) is marked for Export via Contracts (which are automatic).&nbsp; And other parts that want to ask for another part can do so by Importing.</p> <h2>Managed Extensibility Framework &ndash; Why they built it</h2> <p>Glenn mentions in the article that they needed a way to compose of reusable types or components in the up coming Visual Studio 2010, Oslo, Acropolis and I am sure many more.&nbsp; What is important to note is why they created one themselves, instead of using Unity or alike.&nbsp; Glenn mentions some key points:</p> <ul> <li>Third-party Extensibility (allowing vendors to generate plug-ins for Visual Studio, or your own application, with minimal work on your part now)  <li>Other frameworks were too heavyweight for a simple programming model.&nbsp; <li>Or other frameworks required too much effort on the part of either the host or the extension developer. </li></ul> <p>Those last two is what struck a cord with me, and got my attention.&nbsp; Try to sit back and think about how you would allow your applications to be extended with Castle, StructureMap or even Unity.&nbsp; That&rsquo;s a lot of work, a lot of 3rd party assemblies to wire up and configure properly.&nbsp; Especially if you want runtime changes, which MEF supports out of the box with no configuration.</p> <p>That last point is particularly interesting.&nbsp; All too often I see a released developer framework or contrib project by a group of inspired individuals.&nbsp; This is great and all, but those projects quickly grow to be a large project requiring documentation, support, and even refactorings for performance.</p> <p>It got me thinking a lot about what I see wrong with Castle &ndash; only two things, it&rsquo;s learning curve and size.&nbsp; While Unity was very well documented, it comes with some significant bloat and only what I can refer to as hoop-jumping.&nbsp; The earlier versions of Unity violated Dependency Injection pricipals and concepts (no ctor injection!).&nbsp; Perfect example of refactoring.</p> <p>MEF really strives to resolve all of these issues, with some extremely simple programming models that I will show you below.</p> <p></p> <h2>MEF Programming Models &ndash; Straight Attributed Declarations</h2> <p>Another rip from Glenn&rsquo;s article.&nbsp;&nbsp; But he did it so well.</p> <blockquote> <p>Developers consume MEF through a programming model.&nbsp; A programming model provides a means to declare components as MEF parts.&nbsp; Out of the box, MEF provides an attributed programming model, which will be the main focus of this article.&nbsp; That model is just one of many possible programming models that MEF enables.&nbsp; MEF&rsquo;s core API is completely agnostic to attributes.</p></blockquote> <p>Yep, you heard that right.&nbsp; MEF supports Attributes &ndash; for out-of-the-box functionality.&nbsp; No configuration, no setup, nothing.&nbsp; This is so much easier than you are even thinking.&nbsp; So much so, I feel guilty by writing all of this text.&nbsp; Let&rsquo;s just show you how it&rsquo;s done now.</p> <h2>The Blog &ldquo;Hello World&rdquo; Snippets</h2> <p>As what seems to be an invasion, the common Hello World for websites these days <a href="http://invalidlogic.com/2008/12/22/blogging-apps-are-the-new-hello-world/" target="_blank">are blogs</a>.&nbsp; So without further delay, here&rsquo;s some code snippets.</p> <p>The post object</p> <p></p><pre><code>
public partial class Post
{</p>

<pre><code>public Int32 PostId { get; set; }
public String Title { get; set; }
public String Description { get; set; }
public String Body { get; set; }
public Guid AuthorId { get; set; }
</code></pre>

<p>}</p>

<p></code></pre></p>

<p></p>


<p>And the PostService that will service the post.</p>


<p></p>


<pre><code>
[Export(typeof(IPostService))]
public class PostService : IPostService
{
    [Import]
    public IPostRepository PostRepository { get; set; }

    public Post FetchById(Int32 postId)
    {
        return
            (from p in PostRepository.GetAll()
             where p.PostId == postId
             select p as Post).FirstOrDefault();
    }
}

</code></pre>


<p>Please note that the above code is not production-code.&nbsp; You should always provide proper cache, concurrency and disposable patterns.&nbsp; This code has been cleaned up for easier reading.</p>


<p>Notice that the PostService has been marked to be exportable, using a specific contract type for IPostService. Now, you do not have to specify the contract type or name. You can simply use [Export]. But remember, we do want to allow for simply extensibility in the future by plugging in different components to be served during composition.&nbsp; How to do that?&nbsp; Easy, just specify the interface type as the contract.&nbsp; Now how easy was that?</p>


<p>Also, notice that we have a dependency on IPostRepository. This is marked with the simple [Import] attribute.&nbsp; It does exactly as you think.&nbsp; MEF composes the first part that matches the contract for IPostRepository and supplies it </p>


<p>Now, some will cry fowl here since I am not directly injecting IPostRepository, or not demanding it in the constructor. Yes, MEF fully supports constructor injection. But, there is a few gotchas you have to be aware of with MEF and constructor composition that I get into a little further down. There&#8217;s also a new pattern I am designing, when mixed with .NET 4 and some nifty T4 templates I&#8217;m tinkering with. That&#8217;s another article I&#8217;ll write though. Check the comments, or leave a comment for more information on, &#8220;Managing BDD Contexts and Mocks Automatically with .NET 4, MEF, and T4 Templates.&#8221; Nice. I just named my next blog post. </p>


<h2>Constructor Dependency Injection - MEF Gotcha</h2>


<p>As mentioned above, constructor injection is a bit tricky with MEF.&nbsp; There are some rules to follow:</p>


<ul>
<li>MEF assumes all parameters are imports, making the import attribute unnecessary.&nbsp; I leave it up to the reader to figure out how to get around this. 
<li>Recomposition is not supported on constructor parameters.</li></ul>


<p>That last one is almost a deal breaker for me.&nbsp; Recomposition is a feature of MEF that allows parts to automatically have their imports updated as new matching exports appear in the system.&nbsp; Given, this isn&#8217;t the case with most websites out there.&nbsp; It&#8217;s an issue for websites and applications that want to support dynamic (e.g. downloadable) plugins.&nbsp; The plugins would overwrite, at runtime, certain contracts and therefore allow the parts to automatically be updated with the new plugin versions - all without an application restart!</p>


<p>So with that said (and you will never be developing plugins right?), you can use constructor injection with MEF as follows.</p>


<p><p><pre><code>
[Export(typeof(IPostService))]
public class PostService : IPostService
{</p>

<pre><code>private IPostRepository _postRepo;
private IUserRepository _userRepo

[ImportingConstructor]
public PostService(IPostRepository postRepo, IUserRepository userRepo)
{
    _postRepo = postRepo;
    _userRepo = userRepo;
}

public Post FetchById(Int32 postId)
{
    return
        (from p in _postRepo.GetAll()
         where p.PostId == postId
         select p as Post).FirstOrDefault();
}
</code></pre>

<p>}</p>

<p></code></pre>
<p>Don&rsquo;t fret too much though about the all-or-nothing constructor.&nbsp; You have a Factory option later on in this post.</p>
<h2>Bootstrapping MEF for Application Startup</h2>
<p>Glenn nailed it right on the head when he called this procedure &ldquo;bootstrapping.&rdquo;&nbsp; I&rsquo;ve always struggled with the proper terminology for this composition process with other Inversion of Control containers.&nbsp; Bootstrapping.&nbsp; Yep, just like my hacked MP3 players have.</p>
<p>To get things up and running, you will need to to insert some bootstrapping code for your application.&nbsp; This code is required with any type of IoC container, and with MEF as well.</p>
<p>Below is a small code snippet from a typical ASP.NET MVC 2 global.asax file.&nbsp; Notice I added the two using blocks at the end of the Application_Start().&nbsp; This process would be the same for any type of application you have.</p>
<p><pre><code>
using System.ComponentModel.Composition;
using System.ComponentModel.Composition.Hosting;</p>

<p>protected void Application_Start()
{</p>

<pre><code>AreaRegistration.RegisterAllAreas();

RegisterRoutes(RouteTable.Routes);

using (var catalog = new DirectoryCatalog(@".\"))
{
    using (var container = new CompositionContainer(catalog))
    {
        container.ComposeParts(this);
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>Now, this code is running from with the website assembly.&nbsp; If you, like me, create a seperate assembly to hold your Domain and Repository models, then you simply reference the assembly by replacing the &lsquo;this&rsquo; keyword with Assembly.GetAssembly(typeof(MyProject.Domain)).&nbsp; And yes, you can reference multiple catalogs and assemblies and build up your list as well.</p>
<p>Note that I included the namespaces here.&nbsp; This is important as normally this bootstrapping code is in the Hosting namespace.&nbsp; What they don&rsquo;t tell you is there is an extension in the namespace one higher for CompositionContainer, that enables the ComposeParts() extension method in the System.ComponentModel.Composition namespace.</p>
<p>There are tons of options here with the composition containers.&nbsp; Please refer to the .NET 4 documentation on MEF, as well as Glenn&rsquo;s article for a few more tips.&nbsp; You can specify an assembly to reference for the catalog.&nbsp; You can have aggregated catalogs for grouping/namespacing purposes.&nbsp; And yet, you can still have that aged-old configuration file if you really really really want to manually register (export) each type.</p>
<h2>All Parts are Singletons, out of the box</h2>
<p>Yep.&nbsp; All of your part&rsquo;s instances are composed and referenced throughout all of your code as singletons (or &ldquo;statics&rdquo;).&nbsp; This is a great solution for that stubborn developer you may have working in your group that just won&rsquo;t let go of static managers.&nbsp; Make it instance based, and slap an [Export] on it.&nbsp; Done, now use [Import] wherever you like.</p>
<p>This is important to note because Castle and StructuredMap both default to transient composition (Unity uses whatever you configured the container to use as default).&nbsp; So, make sure you are coding to be thread-safe if you are making the switch over to MEF.</p>
<p>But do not fret, it&rsquo;s easy to specify the lifestyle within the contract definitions.&nbsp; There are three possible configurations you can set with the [PartCreationPolicy()] attribute:</p>
<ul>
<li>CreationPolicy.Shared (singleton, default)
<li>CreationPolicy.NonShared (transient)
<li>CreationPolicy.Any</li></ul>
<p>The &ldquo;Any&rdquo; option is interesting as it leaves it up to the context configuration of the host and/or the configuration of the [Import] contract to specify.&nbsp; You can use RequiredCreationPolicy on the [Import] contract definition to specify the preference.</p>
<p><pre><code>
[PartCreationPolicy(CreationPolicy.Any)]
[Export(typeof(IUserAccountService))]
public class UserAccountService : IUserAccountService
{</p>

<pre><code>...
</code></pre>

<p>}</p>

<p>public class Post
{</p>

<pre><code>public Int32 PostId { get; set; }
public String Title { get; set; }
...

[Import(RequiredCreationPolicy=CreationPolicy.NonShared]
public IUserService UserService { get; set; }
</code></pre>

<p>}</p>

<p></pre></code>
<p>There is a problem with this concept though.&nbsp; With a current project we are working on at the moment, we identified the need to have a security context around our services to ensure the current WebRequest has the correct security credentials.&nbsp; With this, we elected to use Castle&rsquo;s WebRequest lifestyle feature.&nbsp; Sadly, this is not possible (yet) with the PartCreationPolicy.&nbsp; So it is left up to the implementer to handle custom composition on their own with a Factory pattern (see below).</p>
<h2>Lazy Loading within Entities</h2>
<p>Those of you that are wanting Lazy Loading within your entities, but are struggling with a solution that is compatible with Inversion of Control, fear not!&nbsp; The answer is now possible with MEF.</p><pre><code>
public partial class Post
{</p>

<pre><code>[Range(0, Int32.MaxValue)]
public Int32 PostId { get; set; }

[Required, StringLength(64, MinimumLength = 5)]
public String Title { get; set; }

[Required, StringLength(1024, MinimumLength = 5)]
public String Description { get; set; }

[Required, StringLength(Int32.MaxValue, MinimumLength = 5)]
public String Body { get; set; }

[Required]
public Guid AuthorId { get; set; }

[Import]
public IUserService UserService { get; set; }

private User _user;
public User Author
{
    get
    {
        if (_user == null)
            _user = UserService.FetchById(this.AuthorId);
        return _user;
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p>With our updated Post entity, notice we now have a dependency on IUserService marked with the [Import] attribute.&nbsp; Yep, MEF composes that for you, and you have the UserService to access your lazy objects as needed.</p>
<h2>Using MEF as a Static Wrapper</h2>
<p>Time and time again I find myself writing wrapper classes around static members of a 3rd party component, just so I can unit test my code without having to rely on that static class.&nbsp; Using MEF, if you haven&rsquo;t guesses already, is just as easy as you might think.</p>
<p></p><pre><code>
public class Loggerpart
{</p>

<pre><code>[Export]
public ILogger Logger
{
    get
    {
        return LogManager.GetLogger("LoggerInstance", "config");
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>This pattern allows you to make a wrapper around any 3rd party or legacy code.</p>
<h2>MEF Composition with a Factory Pattern</h2>
<p>Here&rsquo;s another one not in Glenn&rsquo;s article.&nbsp; How to use MEF with a factory pattern to initiate a complex type.</p>
<p><pre><code>
public class UserService : IUserService
{</p>

<pre><code>public UserService(ISecurityContext securityContext)
{
    ...
}
</code></pre>

<p>}</p>

<p>public class UserServiceFactory
{</p>

<pre><code>[Export(typeof(IUserService))]
[PartCreationPolicy(CreationPolicy.Shared)]
public IUserService Instance
{
    get
    {
        var context = HttpContext.Current;
        var securityContext = 
            SecurityContextProvider.Setup(context)
        return new UserService(securityContext);
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>Notice how the UserService is not exported?&nbsp; Instead, we designate a property member of UserServiceFactory called Instance as the Export composition location.&nbsp; </p>
<p>Remember, you are only Exporting for Composition at runtime.&nbsp; Nothing gets composed during your unit tests, as you are mocking them.&nbsp; So anywhere you use [Import] will be still be mockable for any of your unit tests with this pattern.</p>
<h2>Exporting with Multiple Contracts</h2>
<p>Here&rsquo;s a nice trick, you can specify multiple Export contracts for multiple types.&nbsp; Why would you do this?&nbsp; If you are a big DDD follower, you may be using IUserService and IAccountService combined to give you an UserAccountService part.</p>
<p><pre><code>
[Export(typeof(IUserService))]
[Export(typeof(IAccountService))]
public class UserAccountService : IUserService, IAccountService
{</p>

<pre><code>...
</code></pre>

<p>}</code><code>
</pre></code>
<p></p>
<h2>MEF Does Not Blow Up on Rejection</h2>
<p>This one is going to take some getting used to.&nbsp; As Glenn mentions, MEF does not throw exceptions if a part cannot be satisfied.&nbsp; It simply will not exist in the object graph for MEF to return &ndash; you&rsquo;ll get a null, and will most likely see a NullReferenceException in your containing code that is trying to use the part you wanted to import.</p>
<p>MEF will simply reject the request for the Import of a part for a number of reasons.&nbsp; For example, if there is no part defined as the correct Export contract type.&nbsp; Say you wanted to import IUserService, but only exported UserService with [Export] and no contract type of IUserService was defined.&nbsp; That was the typical one I found myself forgetting to do.&nbsp; As recommended above, always include the Contract Type when designated a part as Export with [Export(typeof(IUserService))].</p>
<p>I agree that MEF&rsquo;s Rejection policy is a power feature because it stabilizes the code and allows debugging.&nbsp; Glenn links to a good article on why to ensure application stability: <a title="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx" href="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx"><a href="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx">http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx</a></a></p>
<p>But in short, if you get Rejection happening quite often, check your Export contract definition on your part.</p>
<h2>In Summary</h2>
<p>As you can see, it is dead simple to use MEF.&nbsp; The Export functionality is what was missing with Unity, and completely with all other IoC containers.&nbsp; And, it&rsquo;s what gives MEF such great, simplistic power.&nbsp; I highly recommend reading through Glenn&rsquo;s complete article, as he covers a few other concepts such as using the new <strong>Lazy&lt;T&gt;</strong> for importing lazy exports and metadata.</p>
<p>Some additional things Glenn covers is the very strong support for debugging and tracing, things you want to be aware of if you use MEF even moderately.&nbsp; He also hints at the up-n-coming support for MEF with IronRuby.&nbsp; He also covers some external links, which I will list here (for my own archiving purposes):</p>
<ul>
<li><a href="http://codebetter.com/blogs/glenn.block/archive/2009/05/14/customizing-container-behavior-part-2-of-n-defaults.aspx" target="_blank">Customizing Container Behavior Part 2 of N &ndash; Defaults</a> for Facilities
<li><a href="http://mef.codeplex.com/releases/view/33536" target="_blank">MEF Analysis Tool (mefx) for .NET 4.0</a> for debugging those contracts in large projects
<li><a href="http://blogs.msdn.com/dsplaisted/archive/2009/06/08/a-crash-course-on-the-mef-primitives.aspx" target="_blank">A Crash Course on the MEF Primitives</a> for the underlying &ldquo;quantum universe of MEF, its Ã¼ber extensibility points&rdquo; as Glenn says</li></ul>
<p>Once concept I am tinkering with is utilizing the [Import] attribute in the attributed programming model of MEF to define the complete contexts of my BDD tests for me with all dependencies already mocked up and ready, with T4 templates largely driving that effort.</p>
<p>MEF wacked me upside the head.&nbsp; It does everything right, and even allowed me to step back and realized, &ldquo;Dang. I was bloating my code.&rdquo;&nbsp; Yes, they have done it right.&nbsp; So right that the next project I am starting this week will be on Visual Studio 2010 RC &ndash; not even released yet.&nbsp; </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Registering MSpec Runners for TestDriven.NET on Windows X64]]></title>
    <link href="http://eduncan911.com/blog/archives/registering-mspec-runners-for-testdriven-net-on-windows-x64.html"/>
    <updated>2010-01-20T17:59:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/registering-mspec-runners-for-testdriven-net-on-windows-x64</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P>EDIT:&nbsp;MSpec v0.3 now supports <A href="http://weblogs.asp.net/nunitaddin/archive/2009/11/05/testdriven-net-2-24-xcopy-deployable-test-runners.aspx" mce_href="http://weblogs.asp.net/nunitaddin/archive/2009/11/05/testdriven-net-2-24-xcopy-deployable-test-runners.aspx">TestDriven.Net&#8217;s v2.24 XCopy Deployable Test Runners</A>.&nbsp; So this blog post is legacy information at this time.&nbsp; </P>


<P><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; MARGIN-LEFT: 0px; BORDER-TOP: 0px; MARGIN-RIGHT: 0px; BORDER-RIGHT: 0px" title=td_rocket2[1] border=0 alt=td_rocket2[1] align=left src="http://eduncan911.com/blog/archives/images/MSpecrunnersforTestDrive.NETonWindowsx64_AD3B/td_rocket21.gif" width=141 height=100 mce_src="/blog/archives/images/MSpecrunnersforTestDrive.NETonWindowsx64_AD3B/td_rocket21.gif"> Machine.Specifications (MSpec) is my preferred Behavior-Driven Design (BDD) framework for Microsoft.NET.&nbsp; Aaron Jensen, <A href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx" target=_blank mce_href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx">the author of MSpec</A>, released support for TestDriven.NET, xUnit, nUnit, and Gallio.&nbsp; And with the latest release of v0.3, it adds official support for ReSharper&#8217;s Unit Tests and and Selenium integration testing.&nbsp; Very cool stuff indeed, and a very active project!</P>


<P>What has bugged me a bit is getting TestDriven.NET to see my MSpec specifications, on my Windows 7 x64 platform.&nbsp; Aaron so kindly includes a InstallTDNetRunner.bat file to register MSpec with TestDrive.NET; but, it only works on x86 systems.</P>


<P>So why does it not work with x64 systems?&nbsp; It is because the installer for TestDriven.NET registers the runners in a different registry location.</P>


<H2>Windows Vista/7 x64 (64-bit) MSpec runner TestDriven.NET registry file</H2>


<P>Below, I have created a bat file you can copy and paste into your own InstallTDNetRunner-x64.bat if you are on Windows x64.&nbsp; Or, you can download it from here: </P>


<P><A href="http://eduncan911.com/blog/binary/legacy/InstallTDNetRunner-x64.zip">/blog/binary/legacy/InstallTDNetRunner-x64.zip</A> </P>


<PRE><CODE>

@echo off &amp; if not &#8220;%ECHO%&#8221;==&#8221;&#8221; echo %ECHO%

setlocal
set LOCALDIR=%~dp0

echo Windows Registry Editor Version 5.00 &gt; MSpecTDNet.reg
echo [HKEY_CURRENT_USER\Software\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg
echo. &gt;&gt; MSpecTDNet.reg

echo [HKEY_LOCAL_MACHINE\SOFTWARE\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg
echo. &gt;&gt; MSpecTDNet.reg

echo [HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg

regedit MSpecTDNet.reg

del MSpecTDNet.reg


</CODE></PRE>


<H2>Setup TestDriven.NET and MSpec</H2>


<P>Still a bit confused, getting TestDriven.NET and MSpec setup for the first time? Here&#8217;s the steps to follow:</P>


<UL>
<LI>Go ahead and install TestDriven.NET.&nbsp; It can be installed and upgraded at any time. </LI>
<LI>Next, grab <A href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx" target=_blank mce_href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx">the latest release of MSpec</A>&nbsp; and extract the zip to a semi-permanent location.&nbsp; This is because things such as ReSharper and TestDriven.NET will need to know a common location for the mspec assemblies.&nbsp; I recommend C:\Program Files (x86)\MSpec&#46; 
<UL>
<LI>Included with the MSpec zip is an InstallTDNetRunner.bat, but it only works on 32-bit Windows.&nbsp; For 64-bit Windows, you want to copy my registry code above into a new file called InstallTDNetRunner-x64.bat. </LI>
<LI>Make sure to place this InstallTDNetRunner-x64.bat file in the same directory as your semi-permanent MSpec location above. </LI></UL></LI>
<LI>Finally, you want to double-click and execute the InstallTDNetRunner or InstallTDNetRunner-x64 from within this semi-permanent location.&nbsp; This will insert the registry values for a new runner called MSpec for TestDriven.NET to detect and execute. </LI></UL>


<P>From this point further, you can right-click within different places to execute your specifications within your MSpec.&nbsp; Some tips on locations you can right-click and execute the specs:</P>


<UL>
<LI>The project file: will execute all specs detected within that project. </LI>
<LI>The Namespace: will execute all specs detected within that namespace throughout the project. </LI>
<LI>Within the <FONT face="Courier New">Establish context</FONT> or <FONT face="Courier New">Because of</FONT> : Will execute all specs within that one class/scenario. </LI>
<LI>Within the <FONT face="Courier New">It</FONT> spec - Will execute just that one test. </LI></UL>


<P>Something to note is Aaron is currently upgrading MSpec (version 0.4, not released yet) to support TestDriven.NET&#8217;s new 2.24 feature of version independent runners. I haven&#8217;t looked completely into that myself, but should make registring TDNet runners in the future a bit easier.</P>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Azure SDK for Microsoft Visual Studio November 2009]]></title>
    <link href="http://eduncan911.com/blog/archives/windows-azure-sdk-for-microsoft-visual-studio-november-2009.html"/>
    <updated>2009-11-16T18:38:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/windows-azure-sdk-for-microsoft-visual-studio-november-2009</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blogs/eduncan911/productsoverviewinfographic_677ADB3A.gif" mce_href="/blogs/eduncan911/productsoverviewinfographic_677ADB3A.gif"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 637px; DISPLAY: inline; HEIGHT: 191px; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=products-overview-infographic border=0 alt=products-overview-infographic src="http://eduncan911.com/blog/archives/images/products-overview-infographic.gif" width=637 height=191 mce_src="/blog/archives/images/products-overview-infographic.gif"></A> </P>


<P>Over this past weekend, Microsoft released an updated Windows Azure SDK dated November 2009 for Visual Studio 2008 and 2010 Beta 2.&nbsp; It is great to hear this since my tinkering with with the old CTP release was a bit buggy (had to download a few hot-fixes).&nbsp; </P>


<P>Officially this SDK is known as version 20091111.1401, and released on November 13th, 2009.&nbsp; <A href="http://go.microsoft.com/fwlink/?LinkID=128752" target=_blank mce_href="http://go.microsoft.com/fwlink/?LinkID=128752">You can go straight to the SDK download here</A>.</P>


<P>I have compiled a list of improvements and details about this release.&nbsp; For those new to Windows Azure, the SDK add-on for Visual Studio 2008/2010 includes the following:</P>


<UL>
<LI>C# and VB Project creation support for creating a Windows Azure Cloud Service solution with multiple roles.</LI>
<LI>Tools to add and remove roles from the Cloud Service.</LI>
<LI>Tools to configure each Role.</LI>
<LI>Integrated local development via the Development Fabric and Development Storage services.</LI>
<LI>Running and Debugging a Cloud Service in the Development Fabric.</LI>
<LI>Building and packaging of Cloud Service Packages.</LI>
<LI>Browsing to the Windows Azure Developer Portal.</LI></UL>


<P>This updated includes a large number of enhancements and compatibility updates.&nbsp; The overview reads:</P>


<UL>
<LI>Windows Azure Service Runtime managed library: The latest version of the Service Hosting Runtime API includes support for enhanced communication between roles and for runtime notification of service configuration changes. Direct communication between role instances enables new application development scenarios, including applications that distribute state across role instances. Service configuration changes include an increase or decrease in the number of request role instances and changes to the values of configuration settings.</LI>
<LI>Windows Azure Diagnostics managed library: The new Diagnostics API enables logging using standard .NET APIs. The Diagnostics API provides built-in support for collecting standard logs and diagnostic information, including the Windows Azure logs, IIS 7.0 logs, Failed Request logs, crash dumps, Windows Event logs, performance counters, and custom logs. </LI>
<LI>Certificate Management: Enhanced support for SSL certificates in Windows Azure and in the Windows Azure SDK enables the secure automated deployment of certificates to services hosted on Windows Azure. </LI>
<LI>Variable-size Virtual Machines : Developers may now specify the size of the virtual machine to which they wish to deploy a role instance, based on the role&#8217;s resource requirements. The size of the VM determines the number of CPU cores, the memory capacity, and the local file system size allocated to a running instance. </LI>
<LI>External endpoints for worker roles. A worker role may now define any number of external endpoints for HTTP, HTTPS, and TCP, and specify the desired port number for any external endpoint. </LI>
<LI>Persistent local resource storage: Developers can now choose to persist data written to a local storage resource at runtime when the role is recycled. </LI>
<LI>Windows Azure Storage Client managed library: The Storage Client library provides a .NET API for accessing the Windows Azure storage services. </LI>
<LI>Improved Development Storage: Development storage provides a high-fidelity simulation of the Windows Azure storage services in the cloud. Tables can now be created dynamically in the development storage Table service and are no longer required to be generated in advance. </LI>
<LI>Updated samples: The samples included with the Windows Azure SDK have been updated to demonstrate new features. The samples now include both C# and Visual Basic versions.</LI></UL>


<P>The actual technical updates are listed below.&nbsp; Some interesting parts such as ASP.NET MVC 2 support are now included.</P>


<UL>
<LI>Service Model UI: A redesigned and significantly more complete interface for manipulating Role configuration information. To access, double-click on a role node in the Solution Explorer.</LI>
<LI>Additional role templates: Support for ASP.NET MVC 2 (2010 only), F# worker roles (2010 only), and WCF Service Application web roles.</LI>
<LI>VS2010 Beta2 Support: Support for Visual Studio 2010 Beta 2 and VWD Express 2010 Beta 2.</LI>
<LI>Support for dynamically creating tables: The Create Tables functionality is now performed automatically; there is no longer a need to right-click and select Create Tablesâ¦ on the project after your table definitions have changed.</LI>
<LI>Full support for and installation of the November Windows Azure SDK release (in short, similar to the above list):</LI>
<UL>
<LI>The sample storage client has been replaced by a new production quality library.</LI>
<LI>New Diagnostics library enables logging using .NET APIs and enables the collection of diagnostic information from the service.</LI>
<LI>Service Runtime library updated to support inter-role communication and notification of configuration changes . </LI>
<LI>Support for input endpoints on Worker Roles. </LI>
<LI>Higher fidelity simulation of Development Storage: supports all current cloud storage features, including dynamically creating tables. </LI>
<LI>Ability to choose the size of the VM for a role instance. </LI>
<LI>Ability to persist data in local storage even after the role is recycled. </LI>
<LI>Ability to manage certificates to install to the role VMs. </LI></UL></UL>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Support Ticket Severity vs Priority]]></title>
    <link href="http://eduncan911.com/blog/archives/support-ticket-severity-vs-priority.html"/>
    <updated>2009-10-05T02:16:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/support-ticket-severity-vs-priority</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw.jpg" mce_href="/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw.jpg"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px 20px 0px 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=ARG1329_pvw border=0 alt=ARG1329_pvw align=left src="http://eduncan911.com/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw_thumb.jpg" width=244 height=236 mce_src="/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw_thumb.jpg"></A> All too often, I get involved with ticketing systems that have these set incorrectly.&nbsp; Or, they utilize them in a different manner than what they were intended for.&nbsp; Tonight, I am setting up another system and thought I would document the differences here for future references (and for my buddies that could tweak their systems).</P>


<P>I understand there is a movement to get away from setting both of these.&nbsp; I myself like a system without the severity part, as it is much faster just to run down the priority list.&nbsp; But, I feel that the more formal the QA process is (e.g. you have a dedicated QA member or team or outsourced group), the more you need to separate the two.&nbsp; This post should help with that.</P>


<H2>Definitions of Severity and Priority</H2>


<P>The definitions, in terms of a ticketing system are as follows:</P>


<BLOCKQUOTE>
<P><STRONG>Severity</STRONG> : The level of impact the defect has on the system, overall.&nbsp; Basically, <EM>how serious the bug is</EM>.&nbsp; </P>
<P><STRONG>Priority</STRONG> : The developers order in which to attack, address, or fix the tickets.&nbsp; Ranked usually from Highest to Lowest.</P></BLOCKQUOTE>


<P>Before going any further, letâs setup the Severity to match what Microsoft uses (<A href="http://c2.com/cgi/wiki?DifferentiatePriorityAndSeverity" target=_blank mce_href="http://c2.com/cgi/wiki?DifferentiatePriorityAndSeverity">sourced from this article</A>, with my spin on it).&nbsp; </P>


<BLOCKQUOTE>
<P><STRONG>1 - Exception or Crash </STRONG>: A system crash or anything that loses persistent data.&nbsp; Often times referred to as Show Stoppers.&nbsp; Most of the time your overall exceptions that users see (or get the generic âand error has occurredâ page) would fall into this category.&nbsp; Unless related to a new feature being QAâd (see #2 below).</P>
<P><STRONG>2 - New Feature Incomplete</STRONG> : A <EM>new</EM> feature that does not work at all or has exceptions.&nbsp; The word <EM>new</EM> being import there, as broken new feature bugs do not belong in #1 above.</P>
<P><STRONG>3 - Release Feature Bug</STRONG> : A completed feature that can be released, but has some rough edges to iron out further.</P>
<P><STRONG>4 - Cosmetic (UI)</STRONG> : Purely cosmetic, css, html, and spelling issues.</P></BLOCKQUOTE>


<P>I usually take it a little further by adding a 5th option.</P>


<BLOCKQUOTE>
<P><STRONG>5 - Feature Request</STRONG> : Usually a placeholder for feature notes and feature development / feedback to the reporter.&nbsp; Some organizations prefer to keep a separate list of these.&nbsp; I find they are too often forgotten about.</P></BLOCKQUOTE>


<P>It is easier to think of severities as categories of the defect itself.&nbsp; Also if you notice, I prefixed the severities with numbers.&nbsp; This has a two effects by giving users an instant âwhat level is this bugâ resolve, as well as a trick to get several ticket systems to order the DropDownList by the number (yeah, lame, but works!).</P>


<H2>Who sets Severity and Priority?</H2>


<P>This is a good one.&nbsp; A few employees at my last company nearly went to war over who gets to set these.&nbsp; But, the answer is simple:</P>


<BLOCKQUOTE>
<P><EM>Itâs the tester/bug reporterâs job to set the severity.</EM></P></BLOCKQUOTE>


<P>The person in charge of QAing the system knows the severity of the bug they are reporting.&nbsp; They know how it impacts the users on the other end.&nbsp; But, this person should not be given the power to set the priority.&nbsp; Else, everything would be set to High Priority (usually the case).</P>


<BLOCKQUOTE>
<P><EM>Priority should be set by the project manager or dispatcher.</EM></P></BLOCKQUOTE>


<P>During the weekly standup, the project manager decides on what order the tickets are addressed in and this, in turn, dictates the priority of the tickets.&nbsp; This is done by examining the severity of the bug reported (yep, there it is - examine the severity here!).&nbsp; After reviewing the severity, the PM estimates the time to resolve the bug for the next milestone or release and decides if it is acceptable.&nbsp; If so, a priority is set on the ticket and it is moved to the appropriate milestone.</P>


<H2>Severity and Priority Examples</H2>


<P>Letâs take an example of an css issue in which the overflow property is not set correctly, and the text the user sees is being obscured by this issue.&nbsp; But, this css issue is part of a new feature that is going out in the next build.&nbsp; What do you set it to?&nbsp; Is it #2, a feature incomplete?&nbsp; Or #3, a feature bug because the user cannot set the text of this ânewâ feature?&nbsp; Or, #4, an UI issue?</P>


<P>Personally, this is to each his own.&nbsp; I would examine the context of the text being hidden.&nbsp; If this text is the balance of your bank account being hidden, then that is a #2.&nbsp; If it is part of the help text, then #3 and can be released to be tweaked later.&nbsp; If it is just a few words not needed for any operation or description of the pageâs purpose, then, itâs #4 and can wait for more sever issues to be addressed.</P>


<P>Basically, the severity dictates rather that bug must be completed before release.&nbsp; I usually set the rule that the release does not go out with any #1 and #2s in the list.&nbsp; Or, I may release some #2s if I can quickly follow-up with a patch within a day or two.&nbsp; </P>


<P>Number 3s and 4s often time get pushed back until the next release, unless the priority has been bumped (i.e. how old a ticket is).&nbsp; The #3s and #4s are great gap fillers for those &#8220;let&#8217;s run through the tickets and attack as many as we can&#8221; days.</P>


<P>If you need more examples, feel free to hit me up or leave a comment.</P>


<H2>Summary</H2>


<P>Hopefully you have a better idea of severity and how it fits into your project management.&nbsp; Again, I have to stress that smaller projects may never use severity.&nbsp; But, if you have any type of format QA process, it makes sense to stick it in there to have the extra level of communications.</P>


<P>In case you are wondering, I personally use Unfuddle at my companies and personal projects.&nbsp; You canât beat the web version of diffmerge in the browser!&nbsp; GitHub is very good as well for those diffmerges.&nbsp; GitHub is best suited for public projects and very small teams, and is only for Git.&nbsp; Where Unfuddle supports both Git and SVN, and is more privatized. </P>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Html.RenderAction for ASP.NET MVC 1.0]]></title>
    <link href="http://eduncan911.com/blog/archives/html-renderaction-for-asp-net-mvc-1-0.html"/>
    <updated>2009-09-24T16:04:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/html-renderaction-for-asp-net-mvc-1-0</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P>The <A href="http://eduncan911.com/blog/type-safety-with-asp-net-mvc-futures.aspx" mce_href="/blog/type-safety-with-asp-net-mvc-futures.aspx">ASP.NET MVC 1.0 Futures assembly</A> (that is not included with ASP.NET MVC 1.0) has a powerful HtmlHelper extension method called RenderAction().&nbsp;&nbsp; It sounds similar to the Html extension method called RenderPartial() for a good reason.&nbsp; RenderAction() executes an action on a controller, allowing you to move your logic out of the views.</P>


<H2>The problem with Html.RenderPartial()</H2>


<P>There is no direct problem with this.&nbsp; It is just that developers are left with only the ability to render a Partial View.&nbsp; What if you want that partial view to act on model properties you pass into that partial view?&nbsp; What if you need to access the ambient values in the Routes collection to render some specifics?&nbsp; Unfortunately, developers are only left with RenderPartial() which only gives you access to a partial view.&nbsp; If you really need this logic, you have no choice but to put it into the partial view.&nbsp; Or, to put it into your controllerâs action method that calls the view that calls the partialviews.&nbsp; Needless to say, thatâs a bit hokey.</P>


<H2>What Html.RenderAction&lt;TController&gt;() Resolves</H2>


<P>It gives you the power of moving that complex View and Partial View logic to a Controllerâs Action, where it belongs!&nbsp; Think of it as a âRender Partial Actionâ method of where you can call back into a controller to render some logic. This gives you the ability to clean up your partial views now by removing that logic and placing it on a controllerâs action, that renders the partial view when done. The syntax looks like:</P>


<PRE><CODE>&lt;% Html.RenderAction&lt;ProductController&gt;(c =&gt; c.RenderProductResults()); %&gt;<BR></CODE><CODE>&lt;!&#8211; Or&#8230; //&#8211;&gt;<BR>&lt;%= Html.RenderAction(&#8220;RenderPartialResults&#8221;, &#8220;Product&#8221;); %&gt; </CODE></PRE>


<P>Put simply, this renders an action on a controller directly in your view.&nbsp; You may be thinking âbig dealâ, but I assure you this is a big deal in large complex MVC sites.&nbsp; Having the power to abstract or breakup your controllerâs actions into multiple <EM>partial-actions</EM> and multiple views is very powerful.&nbsp; Instead of relying on the 1 controller&#8217; action to wire up all of the data for all of the views, partial views, and logic for the views.&nbsp; Now, you can just focus on that one section - and abstract the rest into reusable parts.</P>


<P>You may be wondering where this extension method is with your ASP.NET MVC project.&nbsp; As mentioned above, it is part of the <A href="http://eduncan911.com/blog/type-safety-with-asp-net-mvc-futures.aspx" mce_href="/blog/type-safety-with-asp-net-mvc-futures.aspx">Futures extension of the ASP.NET MVC project at codeplex</A>.</P>


<H2>ASP.NET MVC Sidebar Widget Example</H2>


<P>The current pattern suggests you use Html.RenderPartial to render those partial views as your sidebar widgets.&nbsp; What if you want those widgets to be more complex?&nbsp; What if you want those widgets to act on the the current Route?&nbsp; Well, you are left with little options with RenderPartial.&nbsp; Instead, you want to use RenderAction to call an action on a controller to handle that logic.&nbsp; </P>


<P>Assume we are viewing a blog post entry and on the right, we want a sidebar widget for related posts. To do this, first create an action on a controller called RelatedPosts().</P>


<PRE><CODE>public ActionResult RelatedPosts(Int32 postID)
{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>  // some complex logic, or simple logic, can go here nowâ¦<BR>  //<BR>  <BR>  if (postID &lt; 1)<BR>    return PartialView(âNoRelatedPostsâ);<BR>&nbsp; var relatedPosts =<BR>&nbsp;&nbsp;&nbsp; _postService.FetchRelatedPosts(postID);<BR>  <BR>&nbsp; if (relatedPosts.Count &gt; 0)<BR>&nbsp;&nbsp; return PartialView(&#8220;RelatedPosts&#8221;, relatedPosts);<BR>&nbsp; else<BR>&nbsp;&nbsp;&nbsp; return PartialView(âNoRelatedPostsâ);
}</CODE></PRE>


<P>Notice how the logic here accounts for empty or no results, and returns an a different partial view?&nbsp; Using RenderPartial(), this is logic could only be reflected with inline IF ELSE brackets within your PartialView - and ugly spaghetti mess.&nbsp; Also, how would you even retrieve the related posts collection?&nbsp; You have no choice but to obtain that collection back on the post entry view action - which should not be concerned about our little sidebar widget.&nbsp; All it should do is wire up the post.&nbsp; But, that is not the case with RenderPartial() - you have to wire up all of your data ahead of time in one large ViewModel with multiple entities dangling off of it.</P>


<P>No no.&nbsp; Letâs do it with RenderAction() and instead put this logic into the Controller (where it belongs, so we can test for it); and then, we can call it with the RenderAction() extension.&nbsp; We can do this now with a simple call within our larger post view like so:</P>


<PRE><CODE>&lt;% Html.RenderAction&lt;PostController&gt;(c =&gt; c.RelatedPosts(Model.PostID)); %&gt; </CODE></PRE>


<P>We instead kind of render a <EM>partial action</EM> by calling an action on a controller that handles the logic that we would otherwise have to put in the view.&nbsp; Now, our main post view action doesnât have to be concerned about wiring up our sidebar partial view.&nbsp; We can just call RenderAction() in the view.</P>


<H2>ASP.NET MVC AJAX Example using RenderAction</H2>


<P>Taking an example from the book <A href="http://www.amazon.com/gp/product/0470384611?ie=UTF8&amp;tag=eduncan911com-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470384611" mce_href="http://www.amazon.com/gp/product/0470384611?ie=UTF8&amp;tag=eduncan911com-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0470384611">Profressional ASP.NET MVC 1.0</A>, weâll use the submitting a Form Using Ajax example to replace the limited RenderPartial() function with a richer RenderAction() from a Controllerâs action to process the results more finely.</P>


<P>In the ProductController, you would add a new method with the signature RenderProductResults(IList&lt;Product&gt; products):</P>


<PRE><CODE>public ActionResult RenderProductResults(IList&lt;Product&gt; products)
{
    // insert some custom logic here, maybe even switch partial views, etc
    //
    if (products.Count &gt; 0)
        return PartialView(&#8220;ProductSearchResults&#8221;, products);
    else
        return EmptyResult();
}    </CODE></PRE>


<P>Now, you can update their ajax example to render this new action instead of the RenderPartial() from their example:</P>


<PRE><CODE>&lt;h1&gt;Product Search - jQuery&lt;/h1&gt;
&lt;form action=&#8221;&lt;%= Url.Action(&#8220;ProductSearch&#8221;) %&gt;&#8221; method=&#8221;post&#8221; id=&#8221;jform&#8221;&gt;

  &lt;%= Html.TextBox(&#8220;query&#8221;, null, new { size=40 }) %&gt;
  &lt;input type=&#8221;submit&#8221; id=&#8221;jsubmit&#8221; value=&#8221;go&#8221; /&gt; 

&lt;/form&gt;

&lt;div id=&#8221;results2&#8221;&gt;
  &lt;% Html.RenderAction&lt;ProductController&gt;(c =&gt; c.RenderProductResults(Model.Results)); %&gt;
&lt;/div&gt;

&lt;script src=&#8221;/Scripts/jquery-1.3.2.js&#8221; type=&#8221;text/javascript&#8221;&gt; &lt;/script&gt;<BR>&lt;script src=&#8221;/Scripts/jquery-form.js&#8221; type=&#8221;text/javascript&#8221;&gt; &lt;/script&gt;<BR>&lt;script&gt; <BR>  $(function() { <BR>    $(&#8216;#jform&#8217;).submit(function(){ <BR>      $(&#8216;#jform&#8217;).ajaxSubmit({ target: &#8216;#results2&#8217; }); <BR>      return false; <BR>    }); <BR>  });<BR>&lt;/script&gt;</CODE></PRE>


<P>Look for the Html.RenderAction line above.&nbsp; What this does is instead of rendering a partial view in the id=âresults2â location, you can now render a âpartial Actionâ with the Html.RenderAction() call.&nbsp; Notice that how we are also passing strongly typed parameters directly into the method?&nbsp; Yep, fully supported.</P>


<P>By using the RenderAction instead of RenderPartial, you have much more control over what happens with that rendering of the partial (now, rendering of the action).&nbsp; <EM><U>This gives you an excellent opportunity to remove that complex view logic you may have, and place it in an Action where it belongs</U></EM>!</P>


<H2>Custom ViewEngines and Extensions</H2>


<P>Now, you can also resolve this logic issue by creating custom ViewEngines, or extensions that expand upon the ViewEngine, HtmlHelper, or UrlHelper.&nbsp; But, I see those methods as more application-wide common logic (like pagers and server controls for display name).&nbsp; I do not see that as a solution for your one-off partial view for the ajax response to something.&nbsp; Think of how bloated your ViewEngine would get, or how many different ViewEngines youâd have to choose from.&nbsp; No, ViewEngine extensions have a place which I will post about as well.</P>


<H2>Summary</H2>


<P>When your views start getting complex and messy, it may be time to switch to a RenderAction to handle that logic.&nbsp; I know I have cleaned up quite a lot using it.&nbsp; Also, custom view engines have a place in their own right to abstract more global/common logic across the entire site.</P>


<p><img alt='Html.RenderAction for ASP.NET MVC 1.0' src='http://www.spacedaily.com/images/solar-impulse-bg.jpg'/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Microsoft Announces WebsiteSpark]]></title>
    <link href="http://eduncan911.com/blog/archives/microsoft-announces-websitespark-program.html"/>
    <updated>2009-09-24T14:31:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/microsoft-announces-websitespark-program</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-bottom: 0px; border-left: 0px; margin: 0px 20px 0px 0px; display: inline; border-top: 0px; border-right: 0px" title="g_home" border="0" alt="g_home" align="left" src="http://eduncan911.com/blog/archives/images/MicrosoftannouncestheWebsiteSparkProgram_8A1B/g_home.png" width="244" height="184" /> For the first time, Microsoft is licensing a number of software and servers to startups, small businesses, and actual independent web developers - for free.&#160; And, it lasts for three years.&#160; <a href="http://weblogs.asp.net/scottgu/archive/2009/09/24/announcing-the-websitespark-program.aspx" target="_blank">Scott Guthrie tweeted today</a> about the new <a href="http://www.microsoft.com/web/websitespark/" target="_blank">WebsiteSpark Program</a>, which is what this program is called.&#160; Why not call it WebSpark?&#160; I dunno.</p>


<p>  <p>I was shocked to see it comes with a 3rd party tool called DotNetPanel, a great Server Control Panel for hosting websites.&#160; But, I am guessing the free version &ndash; not the upgraded ones.&#160; ;)</p>  <h2>Microsoft WebsiteSpark Features</h2>  <p>Now, donât get too excited.&#160; Hereâs the list so far:</p>  <ul>   <li>3 licenses of Visual Studio 2008 Professional Edition </li>    <li>1 license of Expression Studio 3 (which includes Expression Blend, Sketchflow, and Web) </li>    <li>2 licenses of Expression Web 3 </li>    <li>4 processor licenses of Windows Web Server 2008 R2 </li>    <li>4 processor licenses of SQL Server 2008 Web Edition </li>    <li>DotNetPanel control panel (enabling easy remote/hosted management of your servers)</li> </ul>  <p>Some may say, âIt doesnât come with Enterprise editions?!?&#160; Blah!â Donât be discouraged at the power being given away here.&#160; This is targeting two key business groups:</p>  <ul>   <li>Independent contractors building websites for others.</li>    <li>Small companies of 10 employees or less building websites for others.</li> </ul>  <p>Being in one of these two categories means you really do not have a need for Enterprise editions.&#160; If your website(s) actually do need that level of licensing to run on larger hardware, then Microsoft sees that you can afford the $25/mo licensing fee for Standard or $119/mo for Enterprise because of the traffic, of volume of sites you have running.&#160; </p>  <p>I kind of agree.&#160; Why do startups need to setup these large and expensive 4 webserver, 2 SQL DBs in a high-end failover environment with massive hardware &ndash; for the 6 month to 1 year it will take to develop the software?&#160; Scale back, let your developers develop it. And 30 days before you launch, then get your massive setup and migrate over to it.&#160; You reap the benefits of saving the costs during that time.&#160; If you application(s) are too embedded to be migrated quickly to another set of servers, find a new architect or developer.&#160; </p>  <h2>Microsoft and Open-Source</h2>  <p>I actually have a history with these start-up programs.&#160; It was back in 2006 when I worked on a new Microsoft site called <a href="http://www.microsoftstartupzone.com">www.microsoftstartupzone.com</a> at Telligent.&#160; It was going to be a new low-cost initiative to compete with the free open-source market (LAMP).</p>  <p>One of the first programs to come out of this site was the BizSpark program that we all know and love.&#160; We got BizSpark at GlobalGrind, and I helped setup BizSpark at my former gig as well.&#160; It really is a powerful and inexpensive way to get a company up and going.</p>  <p>And now, we have this WebsiteSpark to get things kicked off.&#160; Excellent.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Type Safety With ASP.NET MVC Futures]]></title>
    <link href="http://eduncan911.com/blog/archives/type-safety-with-asp-net-mvc-futures.html"/>
    <updated>2009-09-22T17:02:29-04:00</updated>
    <id>http://eduncan911.com/blog/archives/type-safety-with-asp-net-mvc-futures</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p>In this post, I will show you how to strongly type some parts of MVC to get rid of those âmagic strings.â&#160; I will also publish a few extension methods that expand upon this concept later on.&#160; So, this is a continuation of my <a href="http://eduncan911.com/blog/asp-net-mvc.aspx">Mvc series</a> that you can subscribe to.</p>


<p>  <h2>ASP.NET MVC 1.0 Futures</h2>  <p>You can download ASP.NET MVC 1.0 RTM from codeplex.&#160; You can even download the source code and step through what the framework is doing.&#160; What a lot of people overlook is an additional assembly available for download at these locations called ASP.NET MVC 1.0 Futures.&#160; You can download it from Codeplex from below:</p>  <blockquote>   <p><a href="http://aspnet.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=24471" target="_blank">Download ASP.NET MVC 1.0 Futures from CodePlex</a></p> </blockquote>  <p>This is a darling of an assembly using the namespace <strong>Microsoft.Web.Mvc</strong>.&#160; Usually these Microsoft âFuturesâ releases are developer code that did not get approved for RTM release.&#160; This assembly is no exception and includes a plethora of strongly typed extensions.&#160; The reason some of this code did not get approved was because some of it did not conform to Medium Trust requirements for the 1.0 release.&#160; So if you have a strict medium trust application, you may not be able to use the some of the code contained within the assembly.</p>  <p>I am not going to cover all of the extensions within this assembly.&#160; You can do that on your own with <a href="http://www.red-gate.com/products/reflector/index.htm" target="_blank">.NET Reflector</a>.&#160; Instead, I am going to cover just a couple that you will be using on a daily basis.</p>  <p>To get started, go ahead and added a reference to the Microsoft.Web.Mvc assembly to your project.&#160; In addition, to make things a lot easier, go ahead and add a few namespaces to your web.config.</p>  <pre><code>&lt;namespaces&gt;
  &lt;add namespace=&quot;System.Web.Mvc&quot;/&gt;<br/>
  &lt;add namespace=&quot;System.Web.Mvc.Ajax&quot;/&gt;
  &lt;add namespace=&quot;System.Web.Mvc.Html&quot;/&gt;
  &lt;add namespace=&quot;System.Web.Routing&quot;/&gt;
  &lt;add namespace=&quot;System.Linq&quot;/&gt;
  &lt;add namespace=&quot;System.Collections.Generic&quot;/&gt;</p>

<p>  &lt;add namespace=&quot;AspNetMvcTypeSafety.Controllers&quot;/&gt;
  &lt;add namespace=&quot;AspNetMvcTypeSafety.Models&quot;/&gt;
  &lt;add namespace=&quot;Microsoft.Web.Mvc&quot;/&gt; &lt;!&mdash; Add this assembly &mdash;&gt;<br/>
&lt;/namespaces&gt;</code><p></p></pre></p>

<p>Hit CTRL-SHIFT-B to do a quick compile of your code (so the assembly is copied to your /bin). ASP.NET MVC 1.0 Futures is now available for your project.&#160; Youâll also note that I add my controllers and modelsâ namespaces.&#160; This is because you want them available from your views and controllers.</p>




<h2>Strong Typed Html ActionLink&lt;TController&gt;</h2>




<p>If you are already coding in ASP.NET MVC, you are using strings to reference controllers, actions, and views.&#160; An example to access to the MostRecent() action on a PostController would be something like:</p>




<pre><code>&lt;%-- // Old way--%&gt; <br />&lt;%= Html.ActionLink(Model.DisplayName, &quot;MostRecent&quot;, new { Controller=&quot;Post&quot; }) %&gt;<br /></code></pre>




<p>You have to create an anonymous type and reference a controller with âPostâ, for the action method âMostRecentâ.&#160; Using the Futures assembly, youâll see a few new extension overloads for Html.ActionLink:</p>




<pre><code>Html.ActionLink&lt;TController&gt;(<br />    Expression&lt;Action&lt;TController&gt;&gt; action, String linkText)
Html.ActionLink&lt;TController&gt;(<br />    Expression&lt;Action&lt;TController&gt;&gt; action, String linkText, object attributes)<br /></code></pre>




<p>So, now you can re-write the first example to get the MostRecent() action like so:</p>




<pre><code>&lt;%-- // New way --%&gt;</code><code><br />&lt;%= Html.ActionLink&lt;PostController&gt;(c =&gt; c.MostRecent(), Model.DisplayName)%&gt;<br /></code></pre>




<p>Isnât that much tidier?&#160; To break it down, TController is the controller you want to access an action method for.&#160; With it assigned as the generic type, now you have intellisense for your controller as the image below demonstrates.</p>




<p><a href="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200981403PM.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="9-23-2009 8-14-03 PM" border="0" alt="9-23-2009 8-14-03 PM" src="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200981403PM_thumb.png" width="664" height="239" /></a> </p>




<p>This pattern even supports the parameters on your controllerâs actions!&#160; For example, say you want to pass in a username property for a PostController action with the signature of MyPosts(String username).&#160; Using the old method, you have to pass it an anonymous type like so (again, using strings):</p>




<pre>&lt;%-- // Old way --%&gt;<code><br />&lt;%= Html.ActionLink(Model.DisplayName, &quot;MyPosts&quot;, new { Controller=&quot;Post&quot;, id=Model.Username }) %&gt;<br /></code></pre>




<p>With the Futures assembly, itâs a simple as this:</p>




<pre>&lt;%-- // New way --%&gt;<code><br />&lt;%= Html.ActionLink&lt;PostController&gt;(c =&gt; c.MyPosts(Model.Username), Model.DisplayName)%&gt;<br /></code></pre>




<p>Notice that you pass the Model.Username parameter directly into the method c.MyPosts(), instead as an anonymous type like the old way. You even get the intellisense as well, as shown below:</p>




<p><a href="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200982013PM.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="9-23-2009 8-20-13 PM" border="0" alt="9-23-2009 8-20-13 PM" src="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200982013PM_thumb.png" width="631" height="121" /></a></p>




<h2>Html RenderAction&lt;TController&gt;</h2>




<p>This new function works exactly like the ActionLink&lt;TController&gt; above.&#160; No surprises.</p>




<pre><code>&lt;%-- // new way %&gt;
&lt;% Html.RenderAction&lt;PostController&gt;(c =&gt; c.MyPosts(Model.Username));%&gt;<code> </code></code></pre>




<p>You can <a href="http://eduncan911.com/blog/html-renderaction-for-asp-net-mvc-1-0.aspx">read more about RenderAction&lt;TController&gt; here</a>.&#160; </p>




<h2>Strong Typed Html BeginForm&lt;TController&gt;</h2>




<p>Again, using the ASP.NET MVC Futures assembly, this is already done for you.&#160; This one is a bit tricky though.&#160; You want to pass your values within the formâs scope, not the BeginForm method itself.&#160; But, if you leave the parameters blank for your method, the view will not render and you will be an exception.&#160; Intelliense actually gives you a hint by the red underline.</p>




<p><a href="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200990142PM.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="9-23-2009 9-01-42 PM" border="0" alt="9-23-2009 9-01-42 PM" src="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200990142PM_thumb.png" width="504" height="93" /></a> </p>




<p>To get by this, you have to trick it and pass in some default values like so:</p>




<p><a href="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200990258PM.png"><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="9-23-2009 9-02-58 PM" border="0" alt="9-23-2009 9-02-58 PM" src="http://eduncan911.com/blog/archives/images/StronglyTypedMVCwithASP.NETFutures_C956/923200990258PM_thumb.png" width="536" height="101" /></a> </p>




<p>Yes, you can still pass a direct value into the method.&#160; And just like normal, if a routeâs parameter does not match the name, it will be tacked on as a querystring.&#160; </p>




<h2>Summary</h2>




<p>Thatâs it for now.&#160; There are more to capitalize on within the Futures assembly such as the <strong>FileCollectionModelBinder</strong> for multiple files, the <strong>CookieTempDataProvider</strong> for setting a temp cookie only for the next request, or even the HtmlHelper extensions for <strong>Mailto()</strong> that wraps those ever daunting subject, body, multiple emails, etc all into a neat HtmlHelper.</p>




<p>For my next project, I will be developing heavy in Mvc across multiple sites.&#160; At that point, I am sure I will have more strongly typed extensions for things like RedirectToAction() at the controller level.&#160; I will post them as I run across them.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET MVC]]></title>
    <link href="http://eduncan911.com/blog/archives/asp-net-mvc.html"/>
    <updated>2009-09-22T17:02:13-04:00</updated>
    <id>http://eduncan911.com/blog/archives/asp-net-mvc</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-right-width: 0px; margin: 0px 0px 0px 20px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="funny-pictures-cat-does-not-like-puppies" border="0" alt="funny-pictures-cat-does-not-like-puppies" align="right" src="http://eduncan911.com/blog/archives/images/ASP.NETMVC_C748/funnypicturescatdoesnotlikepuppies.jpg" width="364" height="484" /> I am starting a new series that will be focusing on ASP.NET MVC design patterns.&#160; What I will be focusing on is enterprise-ready patterns and practices that scales across cloud computing, coding with type safety, and abstractions of WebForms-like server controls â using the MVC pattern.&#160;&#160; <a href="http://blog.codeville.net/" target="_blank">Steve Sanders</a> and <a href="http://haacked.com/" target="_blank">Phil Haack</a> have about a year head start on everything-mvc, so I highly recommend reading up on their blogs for the basics and advanced solutions.&#160; </p>


<p>  <p>I will keep updating this post with each post for future references.&#160; So, bookmark it or <a href="http://eduncan911.com/archive/tags/asp.net+mvc/default.aspx" target="_blank">you can subscribe to the series here</a>.</p>  <ul>   <li><a href="http://eduncan911.com/blog/type-safety-with-asp-net-mvc-futures.aspx">Type Safety with ASP.NET MVC Futures</a> </li>    <li><a href="http://eduncan911.com/blog/html-renderaction-for-asp-net-mvc-1-0.aspx">Html.RenderAction&lt;TController&gt; for ASP.NET MVC 1.0</a></li> </ul>  <p>&#160;</p>  <p>You can also follow me on Twitter via eduncan911, if you can weed out my random thoughts from these postings.</p> <img alt='ASP.NET MVC' src='http://eduncan911.com/blog/archives/images/ASP.NETMVC_C748/funnypicturescatdoesnotlikepuppies.jpg'/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HiPEâs Voice-operated Drive-N Car PC w/Vista]]></title>
    <link href="http://eduncan911.com/blog/archives/hipe-voice-operated-drive-n-car-pc-vista.html"/>
    <updated>2009-09-21T06:55:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/hipe-voice-operated-drive-n-car-pc-vista</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P>This old <A href="http://www.engadget.com/2007/04/24/hipe-intros-voice-operated-drive-n-car-pcs-with-vista-mce/" target=_blank mce_href="http://www.engadget.com/2007/04/24/hipe-intros-voice-operated-drive-n-car-pcs-with-vista-mce/">Engadget post</A> reminds me of my Dell mini-pc I hacked up to fit in a block of foam and fans to run my XP on 12V with 80GB of MP3s and videos, with wireless (to sync from outside in the car).&nbsp; Too bad I never finished the project; but, I did sell it on eBay for a few hundred bucks.&nbsp; That guy wrote some flash interface for it.&nbsp; Nice.</P>


<P><A href="http://eduncan911.com/blog/archives/images/HiPEsvoiceoperatedDriveNcarPCwVista_28F7/hipedriven.jpg" mce_href="/blog/archives/images/HiPEsvoiceoperatedDriveNcarPCwVista_28F7/hipedriven.jpg"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: block; FLOAT: none; MARGIN-LEFT: auto; BORDER-TOP: 0px; MARGIN-RIGHT: auto; BORDER-RIGHT: 0px" title=hipe-drive-n border=0 alt=hipe-drive-n src="http://eduncan911.com/blog/archives/images/HiPEsvoiceoperatedDriveNcarPCwVista_28F7/hipedriven_thumb.jpg" width=444 height=226 mce_src="/blog/archives/images/HiPEsvoiceoperatedDriveNcarPCwVista_28F7/hipedriven_thumb.jpg"></A> </P>


<BLOCKQUOTE>
<P><EM>âThe units, ranging in price from $799 for a barebones Via C7 in an amp-style chassis up to $2199 for a tricked-out double-DIN touchscreen monster, all run Windows Vista MCE with the One Voice command system, and can be outfitted with GPS, WiFi, Bluetooth, XM, and even a rearview camera. The machines can also interface with your car&#8217;s OBD II unit to let you monitor vehicle diagnostics, as well as clear out some of those annoying error messages you usually have to let the dealer handle.â</EM></P></BLOCKQUOTE>


<P>The ODB-II connection is nice.&nbsp; But still, $2k?</P>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[8 Steps to SEO Quickly]]></title>
    <link href="http://eduncan911.com/blog/archives/8-steps-to-seo-quickly.html"/>
    <updated>2009-09-20T05:11:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/8-steps-to-seo-quickly</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blog/archives/images/7StepstoSEOQuickly_14B2E/willseoforfood.jpg" mce_href="/blog/archives/images/7StepstoSEOQuickly_14B2E/willseoforfood.jpg"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px 20px 10px 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=will-seo-for-food border=0 alt=will-seo-for-food align=left src="http://eduncan911.com/blog/archives/images/7StepstoSEOQuickly_14B2E/willseoforfood_thumb.jpg" width=204 height=172 mce_src="/blog/archives/images/7StepstoSEOQuickly_14B2E/willseoforfood_thumb.jpg"></A> SEO stands for Search Engine Optimizations.&nbsp; It is a term used to reference a websiteâs HTML source code and related metadata and url for search engine rankings.&nbsp; I recently was involved with interviewing and working with a number of SEO firms here in New York City and picked up a number of quick tips that anyone fimilar with html and css can knock out.&nbsp; </P>


<P>I prefix this post that my own weblog canât follow these rules 100% because of limitations with CommunityServer and how it bakes-in a number of HTML rendering elements that I have no control over â without editing the source code and deploying new assemblies â more than I care to do at this time.&nbsp; But, I have gotten it <EM>almost</EM> there.&nbsp; This is why I love ASP.NET MVC -&nbsp;full control over all markup even if it requires more UI work.</P>


<H2>H1 SEO</H2>


<P>These have the most impact on your blogâs ranking (at this time).&nbsp; The words you chose to insert into these, their repetition throughout the site (and what H* they fall into), and their correlation to your metadata on the page, and their position on your site all weigh heavily for ranking your site.</P>


<P>Several of these tips below center around the H1 and other H* tags and how to optimize them.</P>


<H2>1. The first rule about SEO Club is you talk about SEO Club, with H1 being first.</H2>


<P>Hereâs a quick test.&nbsp; Open an article or weblog post on your site and go to File â&gt; Print Preview (or just print it).&nbsp; What is the first âtextâ you see at the very top?&nbsp; Is it the title of your post?&nbsp; If not, you fall down the list of rankings.&nbsp; Now, do the same here on my blog.&nbsp; Go to File â&gt; Print Preview and see what it looks like.&nbsp; You will notice it is the title of this page (8 steps to SEO Quickly), and then content after that.&nbsp; Nice and neat.&nbsp; Now, did you notice the header and navbar links are the very bottom?</P>


<P>This âprint viewâ is pretty much what the search engine sees when it is trying to determine what text to index.&nbsp; If you have a large and complicated header, well your content â and H1 â get pushed way down the page.</P>


<P>To accomplish this takes a bit of CSS magic.&nbsp; First, wrap your header html in a div.&nbsp; </P>


<PRE><CODE>&lt;div id=âheaderâ&gt;â¦&lt;/div&gt;</PRE>


<p></CODE></p>

<P>The next step is to wrap your content in another dedicated div.</P>


<PRE><CODE>&lt;div id=âcontentâ&gt;â¦&lt;/div&gt;</PRE>


<p></CODE></p>

<P>Now, move the entire header div down below your content div.&nbsp; The final step is to use CSS to render a large âspaceâ for your content div, allowing room for the header to be âpositionedâ to the top of the page.&nbsp; It should look something like this (using inline style definitions for easier reading).</P>


<PRE><CODE>&lt;html&gt;<BR>&lt;header&gt;<BR>  &lt;title&gt;My SEO post&lt;/title&gt;<BR>  &lt;style type=âtext/cssâ&gt;<BR>    #content <BR>    { <BR>      margin-top: 100px;<BR>    }<BR>    #header <BR>    {<BR>      position: absolute;<BR>      top: 0; <BR>      left: 0;<BR>    }<BR>  &lt;/style&gt;<BR>&lt;/header&gt;<BR>&lt;body&gt;<BR>  &lt;div id=âcontentâ&gt;<BR>    &lt;h1&gt;My SEO post&lt;/h1&gt;<BR>    &lt;p&gt;Search engines should love me now!&lt;/p&gt;<BR>  &lt;/div&gt;<BR>  &lt;div id=âheaderâ&gt;<BR>    &lt;a href=â/â&gt;Home&lt;/a&gt; &lt;a href=â/aboutâ&gt;About&lt;/a&gt;<BR></CODE><CODE>  &lt;/div&gt;<BR>&lt;/body&gt;<BR>&lt;/html&gt;</CODE></PRE>


<P>Notice how the content html comes before the header html?&nbsp; And did you notice that the CSS styles will âpush downâ the content 100px, while absolute positioning the header above the content?&nbsp; This is the magic that is needed to âmake the H1 the first text the search engine sees.â</P>


<H2>2. The second rule about SEO Club is you talk about SEO Club, with H1 being first.</H2>


<P>There is more to just moving the H1 up higher in your page.&nbsp; It must be the first text the engine sees!&nbsp; Some clients had difficulty with this because their H1 is buried down deep in a number of divs and sub-titles, tooltips, javascript inline, etc.&nbsp; </P>


<P>The general rule is, refactor your code so that the &lt;h1&gt; is immediately after the &lt;body&gt;.&nbsp; I know, this is near impossible.&nbsp; Especially with ASP.NET Formsâ inline javascript and script references just after the &lt;form&gt; tag.&nbsp; Also, you may want some âRecent Postsâ or something above the &lt;h1&gt; location.</P>


<P>It basically boils down to, refactor your code to push the H1 as the first text.&nbsp; If you cannot, your fall down in rankings.&nbsp; Something so trivial, I know.&nbsp; But every SEO provider we looked into was hard pressed about this priority.&nbsp; So, I am stressing it here with you.</P>


<H2>3. Use all H1 through H6, on every page.</H2>


<P>Search engines love these âheaderâ tags.&nbsp; They are perfect for pointing them to your relevant content.&nbsp; So, you should encapsulate as much text as possible with H tags.&nbsp; Just one sticky point, generally you should use all tags, but do not use the H1 tag more than once.&nbsp; Google will even give you errors for pages that use the same H1 title â it must be unique for each page of your entire site.</P>


<P>This is a bit difficult for me to follow in designing blogs.&nbsp; But, it can be done.&nbsp; Let me point you to a few ways you can use all H1 tags on your blog:</P>


<UL>
<LI>H1 for the Title of your blog post 
<LI>H2 for post headers/highlights.&nbsp; Like I am doing in this post, in bold. 
<LI>H3 for each Tag for your blog post 
<LI>H4 for sub-titles or sub-topics 
<LI>H5 for related posts 
<LI>H6 for each navbar element (i.e., mine are additional tags or group tags)</LI></UL>


<P>Yeah, a lot to break down for each post.&nbsp; But, every time you do will score higher with search engines.</P>


<H2>4. Concentrate on what content goes into those H tags.</H2>


<P>Now this is when you concentrate on what âtermâ you want to brand for your website.&nbsp; You really get only one shot at this, per search engine crawl.&nbsp; You can change it for the next time, but it will change your rankings.</P>


<P>Now is the time to pause and go use some of these SEO tools to find what phrase you can target.&nbsp; Look for something with a ranking that you can break into.&nbsp; Obviously, âTop Blogâ is going to be out of touch for your small site, with 10,000+ links to some of the worlds top blogs.&nbsp; Instead, focus on something more tangible.&nbsp; Like, âAtlanta Bakeryâ or âNYC Wireless Cafeâ.</P>


<P>The H1 on your homepage is the most important text on your entire site.&nbsp; Higher than metadata, higher than its content, and so on.&nbsp; This is your chance to focus on a word or phrase you want your users to search, and find you!&nbsp; So, insert your phrase you want to focus on for your site here in the H1, without variation, as is.&nbsp; You can also use little tricks with CSS to pull over something more meaningful to your users, while getting the H1 hit.</P>


<PRE><CODE>&lt;h1 class=ânolinebreakâ&gt;NYC Wireless Cafe&lt;/h1&gt;&lt;span class=âh1-likeâ&gt;s in NoHo&lt;/span&gt;</CODE></PRE>


<P>Letâs take my blog for example.&nbsp; I want to focus on âEric Duncanâ and I want people to search on that, and find me.&nbsp; Right now, I am battling an AAA baseball player for rankings on my name.&nbsp; Since Google ranks pages higher on links and ESPN and 100s of sites link to this baseball player, I am down to like 6 or 7.&nbsp; But on Bing, that looks at the actual content, I am number 2.&nbsp; Woot!&nbsp; </P>


<P>Now, technically you are to pick that one phrase, and implement it throughout your site with other H tags.&nbsp; For example, if I was hardcore I would want to update my tags to be H3 and worded something like:</P>


<UL>
<LI>Personal <STRONG>Duncan</STRONG> 
<LI><STRONG>Duncanâs</STRONG> Automotive 
<LI><STRONG>Eric</STRONG> on Geek Stuff</LI></UL>


<P>Or, going back to the wireless cafe above:</P>


<UL>
<LI><STRONG>Cafe</STRONG> Drinks 
<LI><STRONG>NYC</STRONG> Favorites 
<LI><STRONG>Wireless</STRONG> Hours</LI></UL>


<P>Notice how I am working in parts of the target H1 in each tag?&nbsp; This is what gets ranked very very well.&nbsp; Before, the cafe would have had âDrinks â Favorites â Hoursâ as tags or navbar elements.&nbsp; But, by adding in parts of the target phrase for the H1 on the homepage, and making each navbar element an H tag, you now have much more ranking power.&nbsp; </P>


<P>Say if you have âBestâ in your homepage H1, such as âBest NYC Cafeâ, you would want to use âBestâ in just about every H2 on&nbsp; your site going forward.&nbsp; âBest Dinnersâ, âBest Drinksâ, âBest Menuâ, etc.</P>


<H2>5. H1 â&gt; Title â&gt; Metadata â&gt; H2-H6 â&gt; url text</H2>


<P>That is the secret formula, that about 3/5ths of seo firms agreed on.&nbsp; Several of them gave variations.&nbsp; But more or less, that is what they say.</P>


<P>So, by those rankings, you should now focus on your &lt;title&gt; tag in the header.&nbsp; The rule is, the H1 should exactly match your Title.&nbsp; So, on your blog post page, your &lt;h1&gt; is the title of your post.&nbsp; Well, your &lt;title&gt; should exactly match that as well.&nbsp; It should NOT be prefixed with your site name.&nbsp; This is the mistake people tend to miss.&nbsp; âI want the site name in every &lt;title&gt;, so when it is bookmarkedâ¦â&nbsp; Well, that is the problem.&nbsp; If the H1 is different than your Title, then it isnât a match.&nbsp; </P>


<P>Now some said you can suffix the title with your siteâs short-name (just a little text).&nbsp; But there was debates to rather even this was acceptable.&nbsp; I would change my site here for it, but CS is limited in that regard.</P>


<P>Next is the Metadata.&nbsp; Yep, that thing that we were all taught back in the 90s was the âkeyâ to searching.&nbsp; Well, it still is to a point.&nbsp; It canât contain more than 10 keywords (or might get ignored completely).</P>


<H2>6. Friendly Urls or SEO Urls</H2>


<P>This is what a lot of people think gets ranked high.&nbsp; âConverting my post.aspx?PostID=523 to /archive/2009/09/20/my-cool-post/ is the best thing you can do!â&nbsp; Well, no.&nbsp; That is why it is #6.&nbsp; It is of a lower priority than the rest above, because as mentioned in #5, it goes H1 â&gt; Title â&gt; Metadata â&gt; H2-H6.&nbsp; And THEN it gets to Url.</P>


<P>And for those that donât know, âSEO Friendly Urlsâ does not mean removing the querystring.&nbsp; Search engines are smart enough to analyze the querystrings and follow them.&nbsp; Google even found the ?p= and logged it as a âPage Indexâ variable on my site.&nbsp; </P>


<P>No, SEO Friend Urls mean removing the integer from the PostID= and making it something legible, and indexable.&nbsp; Like, the post title.&nbsp; </P>


<P>This works well for Wordpress blogs that want an SEO url, but does not have access to mod_rewrite.&nbsp; Just change the url to be http://domain.com/?p=%postname% and you should be SEO friendly going forward, without mod_rewrite.</P>


<H2>7. XHTML Compliancy</H2>


<P>It may seem frivolous, but search engines really are just computer programs with 100s of rules to follow when reading your page.&nbsp; One of those is it attempt to select these H* tags from your page and process them.&nbsp; If you have some funky text, broken html tags, and just general messy html, several of their rules will fail â and you fail to rank higher.&nbsp; </P>


<P>Go hit-up a validator to see how your site does: <A title=http://validator.w3.org/ href="http://validator.w3.org/" mce_href="http://validator.w3.org/">http://validator.w3.org/</A></P>


<H2>8. Off-page SEO</H2>


<P>Everything else above covers what we call âon-pageâ SEO, which is the SEO you can control from your siteâs markup.&nbsp; Off-page SEO is what Googleâs entire ranking system is based on â <EM>how many websites link to your website</EM>.&nbsp; So, commission a dozen college students to go out and talk about your site on a few hundred websites to get those âoff-page seoâ links.&nbsp; Yeah, this is shady and is what causes those, âOh man, cool post!&nbsp; Check out similar similar here atâ¦â comments and forum posts you see.&nbsp; This is generating off-page SEO for those websites with spam comments.&nbsp; But, itâs what they do â and Google rewards them for it.</P>


<H2>Summary</H2>


<P>To sum things up, SEO is more than just a pretty url.&nbsp; It is about changing your markup and thinking before you do things.&nbsp; </P>


<P>Also, this is what the rules are as of 2009.&nbsp; In 1999, it was all about metadata.&nbsp; Who knows what it will be in 2019.&nbsp; Maybe it will be what images are being shown and how often you should images in each post (I get an image in each one for me).&nbsp; </P>


<P>Good luck!</P>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Truth About 802.11n, 2.4Ghz and 5.8Ghz]]></title>
    <link href="http://eduncan911.com/blog/archives/the-truth-about-802-11n.html"/>
    <updated>2009-09-20T03:10:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/the-truth-about-802-11n</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><a href="http://eduncan911.com/blog/archives/images/Thetruthabout802.11n5Ghzvs2.4Ghz_8309/wirelessnetworkingtips1.jpg" mce_href="/blog/archives/images/Thetruthabout802.11n5Ghzvs2.4Ghz_8309/wirelessnetworkingtips1.jpg"><img style="border-right-width: 0px; margin: 0px 20px 0px 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="wireless-networking-tips[1]" border="0" alt="wireless-networking-tips[1]" align="left" src="http://eduncan911.com/blog/archives/images/Thetruthabout802.11n5Ghzvs2.4Ghz_8309/wirelessnetworkingtips1_thumb.jpg" width="232" height="244" mce_src="/blog/archives/images/Thetruthabout802.11n5Ghzvs2.4Ghz_8309/wirelessnetworkingtips1_thumb.jpg" /></a> The odds are that your brand new 802.11n Draft N wireless router may get the same or worse signal than your previous &quot;G&quot; or even &quot;B&quot; setup.&#160; The odds are you are not getting a 5Ghz device, even though you see âDual Bandâ and 802.11N plastered all over the box.&#160; So let me take a few minutes to explain the truth behind all of this Wireless 802.11n buzz and why most consumers are not exactly getting what they paid for; but, with a little careful planning ahead of time and some special configurations you can make the most out of the hardware you acquired.&#160; I apologize for sitting on this knowledge for years and not blogging about it earlier, so let me make the wait worth while.</p>


<p>  <h2>802.11n Dual Radio</h2>  <p>For those that want and answer right away, you will want to invest $200 into a âDual Radioâ 802.11n router and not a âDual Bandâ.&#160; Dual Radio means your router can operate up, away from the interference, in the 5.8Ghz frequency.&#160; There are dozens of âdual bandâ 802.11n routers out there, but only a select few of dual radio.</p>  <h2>What is the truth behind 2.4Ghz and 5.8Ghz, besides radio bands?</h2>  <p>To quickly sum up, this 802.11b/g 2.4Ghz frequency is flooded from all sorts of cordless device.&#160; From microwaves to cordless phones.&#160; But note that 802.11a over 5.8ghz was golden from day one without any of this fuss.&#160; Now that I have teased you with the interference and bands, let us drive into why all of this matters with 802.11n.</p>  <p>With the mass proliferation of consumer electronics (cordless phones, remote control devices, etc), the FCC approved the radio frequency of 2.4Ghz for up to 1000Mbps to be opened up to consumer-grade electronics in the 90s, across a wide range of bandwidths.&#160; I followed the <strong>HomeRF Working Group</strong> talks (now disbanded though) when they were creating the specifications for home networking across a local area network (LAN), wirelessly, in the 90s.&#160; Their standard basically outlined a &quot;Frequency Hopping&quot; protocol that would allow a device to operate on multiple channels, similar to how cordless phones work and how they can &quot;change channels&quot; when there is interference.&#160; They were responsible for your 802.11b (2.4Ghz) and 802.11a (5Ghz) standards.</p>  <p>In September 2000 the FCC ruled to approve HomeRF requests to increase the bandwidth of 802.11b devices over the 2.4Ghz RF band spectrum to 5Mhz, but with a very limited number of 15 channels and only a maximum of 11Mbps.&#160; I believe the FCC did this because of Bluetooth&rsquo;s (and many other company&rsquo;s) arguments that allowing 802.11b devices to utilize a higher bandwidth would cause massive interference amongst other consumer devices.&#160; </p>  <h2>802.11a/b/g/n differences</h2>  <p>Here is a quick summery of the history of the IEEE 802.11 standards we have had available at this point.&#160; </p>  <ul>   <li>802.11b &ndash; Rated at 11mbps over a 2.4Ghz frequency for the 1Mhz and 5Mhz spectrums, it was the first widely adopted standard. </li>    <li>802.11a &ndash; The need for more speed drove the 802.11a standard at the much higher 5.8Ghz frequency.&#160; </li>    <li>802.11g &ndash; The one we mostly know these days operating in the 2.4Ghz frequency with additional channels over 802.11b. </li>    <li>802.11n &ndash; Operates at both 2.4Ghz and 5.8Ghz.&#160; <em><strong>The new Draft 2.0 forced operation at 2.4Ghz by &lsquo;default&rsquo;.&#160; More on this later.</strong></em> </li> </ul>  <p>Note that there an 802.11y specification floating around which operates at 3.7Ghz.&#160; The advantage of this specification is its massive range &ndash; over 5000 Meters (about 3 miles!).&#160; You may hear more about this later on in the news.</p>  <h2>Why you should care about 802.11-<em>whatever</em> and their differences.</h2>  <p>You see, we have had the technology for 802.11n for a while with 802.11a.&#160; Why did it not succeed?&#160; The 802.11b devices at 2.4Ghz were massively produced, and were cheap. 802.11a devices, while about the same price, operated only at 5.8Ghz and came to the market too late because everyone else had 802.11b in their laptops, homes, and offices.&#160; If you had an &quot;A&quot;, you couldn&rsquo;t connect to &quot;B&quot;.&#160; And vice versa.&#160; This is why &quot;A&quot; died out, even though it was a better technology.</p>  <p>The 802.11g 2.4Ghz standard in 2003 fixed the interference issues with more channels, hoping to get out of the range of other consumer electronics while staying in the cheaper-to-produce-products 2.4Ghz range.&#160; But sadly this is not the case any longer since 1000s of wireless devices now use this âwide openâ 2.4Ghz frequency and 1 Mhz and 5 Mhz spectrums.</p>  <p>The 802.11n specification had a great opportunity to fix this interference by going up to 5.8Ghz, once and for all.&#160; All the while allowing for backwards compatibility, which is important for products to succeed.&#160; In a way they did, but for double the cost.</p>  <h2>The reason you get low signals with &quot;G&quot; and now &quot;N&quot; these days.</h2>  <p>Note that if you live out in open rural or large lands, you will not see the problems.&#160; But the vast majority of us have a neighbor within 100 feet of our home (or dozens in an urban environment).</p>  <p>With population comes more wifi devices.&#160; Since there are only 11 channels available in âGâ, and there are dozens of wifi devices near you, how much will you bet that there will be a high level of interferance?&#160; A lot as it turns out.</p>  <p>I myself had to deal with this recently with our loft in downtown Dallas.&#160; Opening a wifi scanner, I saw 31 wireless networks, and I could hardly ever use 802.11g in my open home.&#160; Asking the neighbors, they all had issues âgetting a router that works, they are all junk.â&#160; Well, it wasnât the router.&#160; But instead, just the large number of wireless networks near by.</p>  <p>Once I upgraded to the Linksys WRT600N (with dual radios), I was solid! </p>  <h2>Dual Radios vs Dual Channel vs Dual Mode vs Dual Band vs MIMO (The Marketing buzz-words)</h2>  <p>Finally, the nit-n-gritty of this post.&#160; I will say it loud and clear: </p>  <blockquote>   <p><em><strong>Stay away from dual channel devices and only get a two radio device!</strong></em></p> </blockquote>  <p>What is dual-two-huh?&#160; It is simple: To operate a device at a frequency of, say, 2.4Ghz, you need a RF radio to broadcast and receive at that frequency.&#160; To operate at 5.8Ghz, you need a RF radio as well.&#160; To operate at both frequencies (sometimes called Dual Channel or Dual Mode), your radio switches from 2.4Ghz to 5Ghz.&#160; But the limiting factor here is a RF radio can only operate in one mode or the other.&#160; Not both at the same time.&#160; These dual channel/dual mode devices have a history of âcutting outâ when mixed G and N devices are connected.&#160; It is better to operate them at 2.4Ghz at all times.</p>  <p>How do you operate at both channels?&#160; Simple, you have two radios: one at 2.4Ghz and the other at 5.8Ghz.</p>  <p>The biggest buzz is that 802.11n specifications allow it to operate at either 2.4Ghz or 5.8Ghz.&#160; This allows you to run at 2.4Ghz and connect all of your 802.11g devices as well as 802.11n devices.&#160; </p>  <h2>Why do I need to operate at both channels or even 2.4Ghz?&#160; Can&rsquo;t I just use 5.8Ghz?</h2>  <p>Good question and this is where a little preparation of selecting the right devices comes into play.&#160; If your home has all 802.11n devices (laptops, Xbox/PS3 wifi adapters, desktop, friends and family visiting over Christmas, etc), then yes you can get one of the cheaper 802.11n routers with &quot;Dual Channels&quot; and setup your 802.11n network for strict 5.8Ghz mode.</p>  <p>Unfortunately, most homes will need 802.11g backwards compatibility.&#160; Your son&rsquo;s friend might stop by with his 802.11g laptop.&#160; Xbox only has an 802.11g wifi adapter (that I know of).&#160; And 100s of other reasons of why you still need 802.11g backwards compatibility.</p>  <p>These cheap &quot;dual mode&quot; or &quot;dual channel&quot; 802.11n devices is what will hurt you.&#160; You will be forced to operate at only the 2.4Ghz band for 802.11n to allow other 802.11g devices to connect, which opens you up to interference from all other consumer electronics on your area.</p>  <h2>And now why you want to pay the extra $80 for a dual radio 802.11n device.</h2>  <p>It allows you to connect your laptops and other devices at 802.11a/n over one radio configured at 5.8Ghz, while supplying the 802.11g/n channel over the more interference-prone 2.4Ghz radio.&#160; That is it.&#160; It simply isolates you at one radio.&#160; This allows your visitors to connect at 2.4Ghz, given not a stable connection in urban America but better than nothing.</p>  <h2>The downside to 5.8Ghz, objects.</h2>  <p>There is always a catch, right?&#160; The 5.8Ghz range of 802.11a and 802.11n are more susceptible to solid devices (i.e. walls, floors, etc).&#160; Even though the 802.11a/n standard allows for further range, the 5.8Ghz frequency is quickly blocked by solid objects, severely cutting down your range.&#160; </p>  <p>As a comparison, take a loud car stereo.&#160; The bass blasting from a neighborâs car stereo next door, or in the car next to you.&#160; How come you hear the thump thump thump of the subwoofer, but you do not hear the 500W he is pushing to his vocals through your windows or walls (or, they are severely muffled)?&#160; Simple, the sound waves of low frequencies are much longer/further apart and usually carry more power.&#160; This allows for the sound wave to move through solid devices, where higher frequencies are blocked because of the very short and quick sound waves and lower power.&#160; Same applies to the 5.8Ghz range of 802.11a and 802.11n devices.</p>  <p>If you have a 3 level home (like we do), placing the 5.8Ghz device on the middle floor is usually best.&#160; But, could still cause problems just a short distance away, on another floor.&#160; This is where 2.4Ghz might actually be your best bet in your house.</p>  <h2>Optimizing your 802.11n Router</h2>  <p>For those that remain with the dual-band router, or decide that 2.4 Ghz is the best choice due to interference of objects, or want to tweak that 2.4 Ghz channel, you can make sure to optimize the settings to get the most out of the router &ndash; as most router&rsquo;s defaults are &quot;fail safe&quot;, and not optimum.</p>  <p>802.11n includes a protocol for &quot;Wide&quot; channels.&#160; The default freq and speed for 802.11n is 20 Mhz and 130 Mbps.&#160; While a major increase over the previous 54 Mbps cap of 802.11g, it&rsquo;s only half of what the router can actually do.&#160; Switching to &quot;40 Mhz&quot;, otherwise known as &quot;Wide Channel&quot;, you double your speeds up to around 270 Mbps.</p>  <p>There&rsquo;s a catch though.&#160; Bluetooth devices usually operate in the 40 Mhz range of the 2.4 Ghz channel as it really is an unlicensed data range &ndash; this is why a lot of devices clash when you get &quot;out of spec.&quot;</p>  <p>So, in short, if you don&rsquo;t have any bluetooth devices, then set it to 40 Mhz and be happy.&#160; Your older 802.11g devices should still work as well.&#160; But, to each his own &ndash; it may take testing that Xbox or other wifi devices to make sure they can still connect at the older 20 Mhz freq when you have set 40 Mhz (the protocol allows for backwards compatibility).</p>  <h2>802.11n 5.8 Ghz Summary</h2>  <p>In closing, the FCC did a bad thing when it opened 2.4Ghz 1Mhz and 5Mhz spectrums to consumer devices â besides just routers.&#160; This has caused great interference and frustration of thousands of people world wide (cause most of the world adopted the same standards).&#160; So our beloved 802.11g routers are now being lost in the noise, literally!&#160; </p>  <p>So, look for those 802.11a/n/g dual-<strong>radio</strong> devices, and not a dual-band, dual-channel, dual-mode.&#160; </p>  <p>Personally, I run my 2.4 Ghz and 5.8 Ghz radios at 40 Mhz and with different SSIDs (the wifi &quot;name&quot; or identifier), so I know which one I am connected to.&#160; I also have a separate 802.11g device to power those older wifi devices on a 3rd SSID (good ol&#8217; Linksys WRT54G running the <a href="http://www.polarcloud.com/tomato" target="_blank">Tomato</a> firmware) .</p>  <p>Please leave feedback about any issues or questions.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thirty Posts in Thirty Days]]></title>
    <link href="http://eduncan911.com/blog/archives/thirty-posts-in-thirty-days.html"/>
    <updated>2009-09-20T03:07:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/thirty-posts-in-thirty-days</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blog/archives/images/Thirtypostsinthirtydays_14530/cartoon.jpg" mce_href="/blog/archives/images/Thirtypostsinthirtydays_14530/cartoon.jpg"><IMG style="BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px 20px 0px 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; BORDER-LEFT-WIDTH: 0px" title=cartoon border=0 alt=cartoon align=left src="http://eduncan911.com/blog/archives/images/Thirtypostsinthirtydays_14530/cartoon_thumb.jpg" width=179 height=203 mce_src="/blog/archives/images/Thirtypostsinthirtydays_14530/cartoon_thumb.jpg"></A> Happy one year anniversary!&nbsp; As <A href="http://christoc.com/" mce_href="http://christoc.com">Chris Hammond</A> pointed out this week, it has been exactly one year since I last made a post to my blog â this blog!</P>


<P>It is not for a lack of content.&nbsp; I have well over 100 of âshould have, will do, todos, blog thisâ of bookmarks, code snippets, and more.&nbsp; It didnât ring a bell until christoc actually pinged me this week to tell me.&nbsp; </P>


<P>So, today I start a new goal: Thirty posts in thirty days.&nbsp; Now, there may be several posts in one day in succession, and other empty days.&nbsp; But, there will be at least 30.&nbsp; :)</P>

]]></content>
  </entry>
  
</feed>
