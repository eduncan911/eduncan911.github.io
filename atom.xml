<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Eric Duncan]]></title>
  <link href="http://eduncan911.com/atom.xml" rel="self"/>
  <link href="http://eduncan911.com/"/>
  <updated>2014-05-08T11:34:32-04:00</updated>
  <id>http://eduncan911.com/</id>
  <author>
    <name><![CDATA[Eric Duncan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Look Up]]></title>
    <link href="http://eduncan911.com/technology/look-up.html"/>
    <updated>2014-05-08T09:10:30-04:00</updated>
    <id>http://eduncan911.com/technology/look-up</id>
    <content type="html"><![CDATA[<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Z7dLU6fk9QY "></iframe></div>




<blockquote><p>It&#8217;s not very likely you&#8217;ll make &#8220;World&#8217;s Greatest Dad&#8221;<br/>If you can&#8217;t entertain a child without using an iPad.</p><p>When I was a child I&#8217;d never be home.  <br/>Be out with my friends on our bikes and we&#8217;d roam.<br/>And wear holes in my trainers and graze up my knees<br/>And build our own clubhouse high up in the trees.</p><p>Now the park is so quiet it gives me a chill.<br/>See no children outside and the swings hanging still.<br/>There&#8217;s no skipping, no hopscotch, no church and no steeple.<br/>We&#8217;re a generation of idiots, smartphones and dumb people.</p><footer><strong>Gary Turk</strong> <cite><a href='https://www.youtube.com/watch?v=Z7dLU6fk9QY'>www.youtube.com/&hellip;</a></cite></footer></blockquote>


<p>I remember an NPR segment from around ~2008 when I moved to New York hot on the heels of the 2nd generation iPhone, the 3G.  It talked about our society was already significantly affected by the 1st gen iPhone in that we were becoming a race of robots, always starring down at our smartphone.</p>

<p>It went as far as to say how rude it is to look down at your phone at dinner, or while someone was talking to you.  It made a good case about social interactions > your email, to the point of branding you a jackass if you did it.</p>

<p>That segment (sorry, can&rsquo;t find it) changed my view entirely on social interactions and made me overly conscience on my &ldquo;mobile use&rdquo;, along with observing others and their &ldquo;mobile habits.&rdquo;</p>

<p>I tried not to be the asshole that said, &ldquo;Hey, put down your phone and look at me.&rdquo;  Instead, I used other hints that were in the NPR segment such as when noticing someone is paying attention to their mobile device and not looking at you while you are talking, just pause your sentence.  You&rsquo;ll find out that on average 5 seconds go by until they &ldquo;Look Up.&rdquo; Or, you could simply offer a visual clue that they have to focus on.</p>

<p>I am happy to report that after 6 years of this, I find myself placing my smartphone on the table yes; but, I do not do this to monitor it or look at it.  I do this to get the huge 5&#8221; screen bulk + bumper cover out of my pocket so I can sit down.  I place it face down so not to disturb me and to give complete focus to the person(s) I am sitting with.  I am happy to report that some even have had taken notice and started to do the same, even coming back to report to me how it changed their social interactions.</p>

<p>Fast forward to my nearly 3 year old daughter I have now, and this video.  I&rsquo;ve reviewed the results of quite a lot of studies on child raising and these tablets and smartphones.  It basically came down to one thing:</p>

<blockquote><p>Make it a learning experience for the child and learn together with them.  Do not use as an entertainment device and do not leave them alone with it.</p></blockquote>


<p>In addition, I take my daughter to the playground in the park often.  The vast majority of the time, there are no kids &ndash; we are the only ones there.  We experience <em>the swings hanging still</em> all too often &ndash; until we jump into them.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Responsive Design Begins With the URL]]></title>
    <link href="http://eduncan911.com/software/design/responsive-design-begins-with-the-url.html"/>
    <updated>2014-05-07T11:27:36-04:00</updated>
    <id>http://eduncan911.com/software/design/responsive-design-begins-with-the-url</id>
    <content type="html"><![CDATA[<p><a href="http://www.smashingmagazine.com/2014/05/02/responsive-design-begins-with-the-url/">Responsive Design Begins with the URL</a></p>

<blockquote><p><img src="http://eduncan911.com/blog/images/responsive-design-url-schema.jpg" title="&#34;Responsive Design URL Schema&#34;" alt="&#34;Responsive Design URL Schema&#34;"></p><p>The core principle in creating a potentially enormous website that will last forever is to get the information architecture right in the first place. This involves knowing your data objects and how they fit together. It should also determine the URL structure, which for Programmes is the most important aspect. Take the URL for Top Gear’s home page:</p><p>http://www.bbc.co.uk/programmes/b006mj59</p><p>After the domain name comes the word “programmes,” which is a simple, unchanging English word. It is intended to describe the object, and is not a brand or product name. Plurals are used so that the URL can be hacked backwards to retrieve an index.</p><p>Next is the programme identifier. Note the lack of hierarchy and the lack of a title. Titles change over time, and many programmes do not have a unique title, which would cause a clash. Hierarchies also change — a one-off pilot could be commissioned for a full series. Understanding your objects allows you to recognize what is permanent. In this case, nothing is particularly guaranteed to be permanent, so a simple ID is used instead. Users aren’t expected to type these URLs, though. They will usually arrive through a search engine or by typing in a friendly redirect that has been read out on air, such as bbc.co.uk/topgear. But the key principle of a permanent URL is that inward links are trusted to be shareable and work forever. Cool URIs don’t change.</p><p>A clear information architecture defines the URL scheme. A piece of content is given a clear canonical home, where appropriate. Links and aggregations between them then clearly appear.</p><footer><strong>David Marland</strong> <cite><a href='http://www.smashingmagazine.com/2014/05/02/responsive-design-begins-with-the-url'>Responsive Design Begins With the URL</a></cite></footer></blockquote>


<p>For a decade I have spent a considerable amount of time getting the URLs <em>right</em> for what the user was looking at.  I must have gone through 20 different iterations over the years trying out all sorts of designs, deep linking, &ldquo;walk the url backwards&rdquo; and so on.</p>

<p>You can see on my static site blog here that I paid close attention as well, trying out yet another theme.  I am on my 4th iteration of a url schema for my blog and it has become a PITA when having to keep redirects working of old urls, especially on <a href="https://github.com/eduncan911/eduncan911.github.io/tree/master/blog">this static site with no URL rewrite module</a>.</p>

<p>I almost went the <em>post_id</em> route here on this iteration; but, Jekyll (and therefore Octopress) makes the title url-safe already so I kept it.  Besides that, I agree that urls should play a role in your web architecture.</p>

<p>As long as we are talking about it, ASP.NET MVC&rsquo;s default <code>/Controller/Action/Id</code> has always pissed me off since I first started using it back in 2007.  Coming from a pure-RESTful background, the pure REST urls are more similar to <code>/Controller/Id/Action</code> so you end up with urls like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/product/2832/
</span><span class='line'>/product/2832/edit
</span><span class='line'>/product/2832/clips
</span><span class='line'>/product/2832/videos</span></code></pre></td></tr></table></div></figure>


<p>And so on.  Which, actually, falls inline with what the BBC article above was saying.</p>

<p><em>HatTip ForgetFoo</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Glass Distracting Drivers]]></title>
    <link href="http://eduncan911.com/technology/google-glass-distracting-drivers.html"/>
    <updated>2014-05-05T11:34:09-04:00</updated>
    <id>http://eduncan911.com/technology/google-glass-distracting-drivers</id>
    <content type="html"><![CDATA[<p><a href="http://www.npr.org/blogs/alltechconsidered/2014/03/24/289802359/does-google-glass-distract-drivers-the-debate-is-on">Does Google Glass Distract Drivers? The Debate Is On</a></p>

<p><img src="http://eduncan911.com/blog/images/Google_Glass_Distracting_While_Driving.jpg" title="Google Glass Driving" ></p>

<p>I have several friends, CEOs, CTOs and even strangers tell me they can talk and drive, they can text and drive, they are good drivers, etc.</p>

<p>I&rsquo;ve always rebuttaled that the human brain can only focus on a single context, at any given time.</p>

<p><audio preload="none" data-mins="04" data-secs="42" data-title="NPR: Does Google Glass Distract Drivers?">
<source src="http://pd.npr.org/anon.npr-mp3/npr/atc/2014/03/20140324_atc_does_google_glass_distract_drivers_the_debate_is_on.mp3" type="audio/mpeg">
Audio player not available in your browser. Please try a newer browser.
</audio></p>

<p>A quote in this story summed it up quite well:</p>

<blockquote><p>Earl Miller, a professor of neuroscience at MIT who specializes in multitasking, says this sounds like wishful thinking.</p><p>&#8220;You think you&#8217;re monitoring the road at the same time, when actually what you&#8217;re doing [is] you&#8217;re relying on your brain&#8217;s prediction that nothing was there before, half a second ago — that nothing is there now,&#8221; he says. &#8220;But that&#8217;s an illusion. It can often lead to disastrous results.&#8221;</p><p>In other words, the brain fills in the gaps in what you see with memories of what you saw a half-second ago. Among scientists, that statement is not controversial. The politics of Google Glass — and where it&#8217;s worn — clearly is.</p><footer><strong>Does Google Glass Distract Drivers? The Debate Is On</strong> <cite><a href='http://www.npr.org/blogs/alltechconsidered/2014/03/24/289802359/does-google-glass-distract-drivers-the-debate-is-on'>www.npr.org/blogs/2014/03/24/&hellip;</a></cite></footer></blockquote>


<p>Bingo.  And this includes &ldquo;hands-free&rdquo; conversations as well as GPS.</p>

<p>Then again, in 30 years we may evolve to actually have our brains multi-task.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Avocode]]></title>
    <link href="http://eduncan911.com/software/avocode.html"/>
    <updated>2014-05-04T19:24:04-04:00</updated>
    <id>http://eduncan911.com/software/avocode</id>
    <content type="html"><![CDATA[<p><a href="http://avocode.com/">The bridge between designers and developers</a></p>

<blockquote><p><div class="embed-video-container"><iframe src="http://player.vimeo.com/video/93386152 "></iframe></div></p><p>ALWAYS BE IN SYNC<br/>Share with a link and instantly get updates from your designer.<br/>No more e-mail attachments or huge PSD uploads.</p><p>WEB & NATIVE APP<br/>Preview and inspect PSDs on the web or use the native app<br/>on any platform - Mac, Windows or even Linux.</p><p>EVERYTHING FROM A PSD<br/>Choose anything from a PSD and get exactly what<br/>you need – CSS, SVG, images, fonts or colors…</p></blockquote>


<p>You know, I am starting to get that &ldquo;designer&rdquo; itch again.  I am not a designer; but, I can pull
something outta my ass every once in a while.  Going to try to get a private beta to see if
I can use this for some projects as well.</p>

<p><em>HatTip ForgetFoo</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bitcoin's IRS-blocking 'Dark Wallet' Launched Today]]></title>
    <link href="http://eduncan911.com/technology/bitcoins-dark-wallet-launched-today.html"/>
    <updated>2014-05-01T14:38:13-04:00</updated>
    <id>http://eduncan911.com/technology/bitcoins-dark-wallet-launched-today</id>
    <content type="html"><![CDATA[<p><a href="http://www.coindesk.com/hyper-anonymising-bitcoin-service-dark-wallet-launches-today/">Hyper-Anonymising Bitcoin Service ‘Dark Wallet’ Launches Today</a></p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/Ouo7Q6Cf_yc "></iframe></div>


<p>I first heard about this Dark Wallet protocol a few months ago when <a href="http://pando.com/2014/03/12/moving-on-up-bitcoin-gets-a-boost-as-new-york-opens-applications-for-virtual-currency-exchange-licenses/">New York state</a> announced they are regulating Bitcoin.  And recently when the <a href="http://www.breitbart.com/Big-Government/2014/04/03/IRS-Retroactively-Taxes-Bitcoin">IRS announced it is retroactively taxing Bitcoin as property</a>, the community brought up the Dark Wallet system again.</p>

<p>I have bitcoin and do not plan on paying any tax on it.  I didn&rsquo;t &ldquo;buy&rdquo; any amount using taxable USD, and don&rsquo;t see a need for &ldquo;regulation.&rdquo;  Trying to tax my Bitcoin is basically using a gun to say I need to pay a tax on the open-source software I write: it has value to a select few, and is completely useless to most.</p>

<blockquote><p><img src="http://media.coindesk.com/2014/05/dark.jpg" title="'Bitcoin Dark Wallet'" ></p><p>The alpha version of Dark Wallet – the hyper-anonymising bitcoin wallet – goes live today.</p><p>Created by Amir Taaki and Cody Wilson, Dark Wallet provides new tools for financial privacy, including in-built coin mixing and ‘stealth’ wallet addresses.</p><p>As well as making it easier for people to disguise their transactions from the government, Dark Wallet is also a torpedo aimed at those in the bitcoin community who have embraced co-operation with regulators.</p><p>Conceived last year and partly funded by $50,000 raised on Indiegogo, the wallet was developed by unSystem, a collective of anarchist bitcoin developers. It represents an ethos that has been largely excluded from the mainstream discourse around bitcoin.</p><p>In January of this year, Circle CEO Jeremy Allaire told CoinDesk that bitcoin was “absolutely” moving away from its libertarian roots, and described attempts to avoid the regulation of bitcoin as playing into the hands of “anarchists and criminals”.</p><footer><strong>Hyper-Anonymising Bitcoin Service ‘Dark Wallet’ Launches Today</strong> <cite><a href='http://www.coindesk.com/hyper-anonymising-bitcoin-service-dark-wallet-launches-today/'>www.coindesk.com/&hellip;</a></cite></footer></blockquote>


<p>And I personally liked this little nugget from the related article&hellip;</p>

<blockquote><p>If your goals are to create a sort of shadow financial system that runs in offshore jurisdictions and is attractive for anarchists and criminals, then maybe [regulation] is not important.</p><footer><strong>Jeremy Allaire via CoinDesk</strong> <cite><a href='http://www.coindesk.com/bitcoin-abandons-anti-establishment-wall-street/'>www.coindesk.com/&hellip;</a></cite></footer></blockquote>


<p>The power to tax involves the power to destroy.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Static Blog Boom]]></title>
    <link href="http://eduncan911.com/software/the-static-blog-boom.html"/>
    <updated>2014-05-01T13:58:40-04:00</updated>
    <id>http://eduncan911.com/software/the-static-blog-boom</id>
    <content type="html"><![CDATA[<p>There is a new movement taking place in web development over the last few years.
It is called <code>static sites</code>. Just as it sounds, it is simply a collection of <code>.html</code>, <code>.css</code>, <code>.js</code> and images that serves up a complete site. What you may not know is that there are literately 100s of frameworks out there that generate these static sites for you from a single common theme/template.</p>

<h2>Static Site Generators</h2>

<p>I stumbled upon a collection of these frameworks here:</p>

<p><a href="http://staticsitegenerators.net/">http://staticsitegenerators.net/</a></p>

<p>This is pure opinion, but it would seem that most of these frameworks came
out of the Linux/OSX world from developers that needed to generate a static site for this or that.  Those that did it often, needed a way to regenerate a whole static site by just changing, say, the header area.</p>

<p>I know that after my recent conversion to <a href="http://octopress.org">Octopress</a> (aka Jekyll) I have been brainstorming about my own static site generator.  As you can see in the link above, I am not the only one that had a similar thought.</p>

<h2>Advantages to Static Sites</h2>

<p>If you sit back and think about it, there are a number of advantages for running a static site.</p>

<h3>Hosting costs</h3>

<p>Can you really get any cheaper than free?  GitHub pages can host your static site for free.  If you really want to pay for something, then upload your static site files to Amazon S3 file storage and serve your site from there &ndash; for about $0.25/mo for 1000 uniques.</p>

<h3>Security</h3>

<p>You never have to worry about someone hacking your site.  No SQL injection, XSS, CSRF attacks.</p>

<p>Even if someone was to gain access to your hosting account, there is no database or code to hide backdoors in.</p>

<h3>Defacing</h3>

<p>If someone gains access to where you are storing the files and defaces the site, just redeploy &ndash; which overwrites everything.</p>

<h3>Simplicity (aka Serenity)</h3>

<p>It is just a bunch of html, images, css and js files.  You really can&rsquo;t get any simpler than that.</p>

<h2>How a static site becomes dynamic</h2>

<p>The real power behind these static sites is the interactions that the end user have on your site using 3rd party remote widgets.  It makes your site seem fairly dynamic by giving recent information. Just to give you an idea, here are a few widgets built into most of these frameworks:</p>

<ul>
<li>Flickr photo albums, single photos</li>
<li>Disqus commenting system</li>
<li>Google Forms/Surveys (aka Contact Us, product support, etc)</li>
<li>Stackexchange Profile</li>
<li>GitHub Profile</li>
<li>GitHub Repo browser</li>
<li>Twitter feed, single quotes</li>
<li>Sitemap generators</li>
</ul>


<p>&hellip;and a lot more.  By using these widgets, and carefully skinned to look like your site, it creates a dynamic site of sorts that continually updates even it really is a static site.</p>

<p>I use Google Forms here on my site as an example for my <a href="http://eduncan911.com/contact">Contact page</a>.  It looks and feels like I actually did something on the backend to send me an email &ndash; I didn&rsquo;t.</p>

<h2>Customizing the generated output</h2>

<p>Almost all of these frameworks support plugins and extensions allowing for customizing the generated site to your preferences.  Basically these plugins work like this.</p>

<ul>
<li>Parse article/post content, usually on some plain-text form like Markdown</li>
<li>Process categories and tags</li>
<li>Redirects by creating <code>/old-url/index.html</code> kind of pages</li>
<li>Code highlighting</li>
<li>Pagination</li>
</ul>


<p>And so on.  Perhaps an indicator of the quality of the framework is the article/post/page parser with its extensions built into it, and how extensible it is.  Take Octopress for example, it has butt load:</p>

<ul>
<li>blockquote</li>
<li>code</li>
<li>date</li>
<li>GitHub gist</li>
<li>img</li>
<li>pullquote</li>
<li>video</li>
</ul>


<p>Creating your own tag is fairly straight forward using a well documented Liquid Template parser for ruby.</p>

<h2>Speeding up writing is key (for me at least)</h2>

<p>I am now free to write my thoughts in any place I can write notepad.  I insert things like <code>{% blockquote %}</code> and write a small blurb and I&rsquo;m done.  I&rsquo;ve been wanting to switch to Markdown since I started using it with Unfuddle many many years ago, and now I can.</p>

<p>If this post made you think about making more sites static, drop me a line in the comments below.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ting's Drop Your Data Challenge]]></title>
    <link href="http://eduncan911.com/misc/tings-drop-your-data-challenge.html"/>
    <updated>2014-05-01T13:29:13-04:00</updated>
    <id>http://eduncan911.com/misc/tings-drop-your-data-challenge</id>
    <content type="html"><![CDATA[<p><a href="https://ting.com/blog/drop-your-data-challenge-get-ready/">Ting tries to bring your mobile data into focus</a></p>

<blockquote><p><img src="https://ting.com/wp-content/uploads/image_dropdata.png" title="&#34;Ting Drop Your Data&#34;" alt="&#34;Ting Drop Your Data&#34;"></p><p>On May 5 we’re launching a “Drop your Data” contest and challenging you to use as little mobile data as you possibly can. While we want you to think about reducing your data usage, we don’t mean using your smartphone less – there are many ways to conserve data without sacrificing your mobile phone experience. Take simple steps like connecting to Wi-Fi at home and at work, downloading your favorite audio and video podcasts automatically on Wi-Fi and so on.</p><p>The contest will be set up in two, week-long intervals and will utilize Onavo Count (Android/iPhone), a nifty data reporting app. The first week, you’ll use your smartphone as you normally would, and then for the second week, work on cutting down your mobile data usage! Open to customers and non-customers alike, all participants will be entered in a random draw to win $1,000 cash or one of three $150 Ting credits!</p><p>Don’t want to use Onavo Count? That’s fine. You can use the native data counting options on your phone or another counting method. Just ensure that the screenshots you submit clearly show the time period and your mobile data use (not Wi-Fi or Wi-Fi plus mobile data) for the time period.</p><p>If you’re not currently a Ting customer, you’ll also receive service credit for your percentage of data savings from the first week to the second. In other words, if you cut your mobile data use by 74%, you’ll receive a $74 Ting credit.</p><p><img src="https://ting.com/wp-content/uploads/datasaving.png" title="&#34;save mobile data&#34;" alt="&#34;save mobile data&#34;"></p><p>Stay tuned for complete details inside this blog post on Monday, May 5.</p></blockquote>


<p>Even though I&rsquo;ve carefully been monitoring my data usage for years because I value battery life
over &ldquo;always connected&rdquo; distractions, I&rsquo;ll be entering this contest to see if I can drop it even
further.  Challenge accepted.</p>

<p>I&rsquo;ve been a Ting user for nearly 1 year now, have saved over $1000 (which already paid for our new phones,
canceling our contracts, and then some) and cannot live without the real-time stats and alerts they
have.</p>

<p>I like how they invite people that are not Ting users to enter the contest as well.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is Microsoft Still Building Their Own CPU?]]></title>
    <link href="http://eduncan911.com/technology/is-microsoft-still-building-their-own-cpu.html"/>
    <updated>2014-04-30T13:40:08-04:00</updated>
    <id>http://eduncan911.com/technology/is-microsoft-still-building-their-own-cpu</id>
    <content type="html"><![CDATA[<p>I was going through some old posts during my import and found where I mentioned that
<a href="http://eduncan911.com/blog/archives/microsoft-to-build-its-own-cpus.html">Microsoft was to build their own CPUs</a>
for the next-gen Xbox after the 360 &ndash; nearly 8 years ago (yes, the
<a href="http://en.wikipedia.org/wiki/Xbox_360">Xbox 360 is almost 9 years old</a>).</p>

<blockquote><p>The Xbox One&#8217;s CPU component brings Microsoft’s architecture of choice back to x86, just like the first-generation Xbox. This time, the company kicked IBM to the curb and opted not to jump into another Intel/Nvidia love triangle. Instead, it put a ring on AMD&#8217;s finger, tapping the same source for general-purpose and graphics computing IP. At the same time, Sony was courting AMD&#8217;s semi-custom division as well. Both competitors ended up sharing a bed, but due to NDAs was never caught laying down.</p><footer><strong>Tomshardware</strong> <cite><a href='http://www.tomshardware.com/reviews/microsoft-xbox-one-console-review,3681-3.html'>Xbox One Review: Unifying Your Living Room Experience</a></cite></footer></blockquote>


<p>Microsoft had Intel for Xbox 1st gen.  Then IBM for the 2nd gen.  For the 3rd gen Xbox One and PS4, we
all know <a href="http://www.anandtech.com/show/6976/amds-jaguar-architecture-the-cpu-powering-xbox-one-playstation-4-kabini-temash">they went with AMD now</a>.</p>

<p>So this got me thinking&hellip; <a href="http://research.microsoft.com/en-us/people/cthacker/">Chuck Thacker is still at Microsoft</a>.  It does take a while to design and produce your CPU.  I wonder if Microsoft will drop that bomb in the next decade.</p>

<p>It&rsquo;s sad because after the Zune fiasco, with Zune software no longer compatible with
the Zune players, I&rsquo;m left with $600 in media players that are worthless and useless
cause I can&rsquo;t sync any music to them.  So I don&rsquo;t think I&rsquo;ll ever go back to
Microsoft products after that.  It was one too many low blows over the last decade.</p>

<p>In related news, a buddy of mine sums up how the Xbox One vs PS4 has played out over the last 6 months:</p>

<blockquote class="twitter-tweet" lang="en"><p>Every time I go to look at new Xbox One releases I regret not buying a PS4 instead.</p>&mdash; Jason Alexander (@jasona) <a href="https://twitter.com/jasona/statuses/460530041789480960">April 27, 2014</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Please Put Your Blog Under Source Control]]></title>
    <link href="http://eduncan911.com/software/please-put-your-blog-under-source-control.html"/>
    <updated>2014-04-07T10:37:08-04:00</updated>
    <id>http://eduncan911.com/software/please-put-your-blog-under-source-control</id>
    <content type="html"><![CDATA[<p>There are many benefits to both your readers and yourself if you were to put your
blog under source revisions.  I would go as far to say that you own it to the community
to publish all revisions of your blog that was ever public for pure archiving reasons.</p>

<!-- more -->


<h2>Revision those files you linked to</h2>

<p>Recently I setup <a href="http://eduncan911.com/software/my-hackers-blog.html">my hacker&rsquo;s blog</a>
and I had a need to import my old blog posts from CommunityServer.  The steps were a bit
hackery itself as I had to get data out of CS and into a format that one of the common
importers of Jekyll/Octopress could read from.  I chose BlogML to export as that seemed
to have the oldest support (my CS blog was 9 years old).</p>

<h2>Finding that old file that no one cares about any longer</h2>

<p>After spending a few days off and on tweaking the exported BlogML data, I basically found only
a single BlogML importer for Jekyll.  This is why I chose this route to begin with.  So, when
it came time to perform the import guess what?  The blogml.rb ruby script links were all broken!</p>

<p>Then I had a thought: if the author of the script was running Jekyll/Octopress, especially on
GitHub pages, then perhaps there is a revision history.</p>

<p>I had to dig through about 2 years of commits; but, I found it!</p>

<p><a href="https://github.com/philippkueng/philippkueng.github.com/blob/30ef1570f06d33938b18d5eee7767d6641b9a779/source/_import/blogml.rb">Commit 30ef1570f0 for blogml.rb from author</a></p>

<p>You can even backup a folder and see his entire snapshot of his blog during the import process.</p>

<p>Thank you Philipp Küng for revisioning your blog.</p>

<h2>Changing blogging platforms</h2>

<p>What if you are switch blogging software every 5 years?  Keep old snapshots and revisions of your old site
in tags and refer to them in your change revisions.  Even if you don&rsquo;t keep the same technology,
having an old copy around for public reference can be useful to the community.</p>

<h2>Domain expiration, hosting company goes under, etc</h2>

<p>So your domain expires or got snatched up by a squatter?  Or your hosting company pulls the plug?
At least having a revision available will allow you the flexibility, even if you don&rsquo;t continue
a blog any longer.</p>

<h2>Updates, changes and redactions</h2>

<p>Opinions online can be heated and made in jest.  You may have published something that you wish you
didn&rsquo;t.  Or after some nice comments are posted, you update the post.  Maybe a DMCA takedown request
forced you to remove a piece of content.  Wouldn&rsquo;t it be nice to know and show the revision history of your post?</p>

<p>I know that me for one is going to stop with the dozen tiny edits for spelling and grammar because
of this.  Who knows, it may cause me to actually <em>think</em> before publishing.</p>

<p>And FYI, you can see each revision of each post and page I make to my site here.</p>

<h2>Backups</h2>

<p>Similar to the above, having a full backup you can take with you can be advantageous.</p>

<p>Personally, I not only publish my source code here at GitHub; but, I also have an additional
remote added for BitBucket and always do the following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; git add .
</span><span class='line'>&gt; git commit -m <span class="s2">&quot;fixed spelling and corrected a quote&quot;</span>
</span><span class='line'>&gt; git push backup <span class="nb">source</span>
</span><span class='line'>&gt; git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, you can do this for any source code sure.  It&rsquo;s these next steps that make it viable.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; rake deploy
</span><span class='line'>    ^- this publishes the live site to GitHub pages
</span><span class='line'>&gt; <span class="nb">cd</span> ./_deploy
</span><span class='line'>&gt; git push backup master
</span></code></pre></td></tr></table></div></figure>


<p>Yep, I also deploy a 2nd copy to my BitBucket account.  Even though it will never be used as a real
site, it&rsquo;s a full backup of the live site in the master branch.</p>

<p>The Optopress command <code>rake deploy</code> also pushed it up to GitHub pages on master &ndash; that&rsquo;s how it
&ldquo;publishes.&rdquo;  So all I have to do is make a quick backup.  What&rsquo;s even nice is the script does
a pull request as well, to keep the _deploy folder in sync so when I do perform a backup, it&rsquo;s all there.
I am new to git branch tracking; so, I may have to tweak that last command by forcing <code>-f</code> up the
push to backup if it gets out of sync or something.</p>

<p>Finally, having multiple copies of your repo online and publicly accessible can help with&hellip;</p>

<h2>Government seizers</h2>

<p>All too often, governments are taking domains and peoples&#8217; hosting accounts in the name of DMCA and
copyright infringements.  Oh, and free speech as well.</p>

<p>Why not publish your blog open source?</p>

<p>The last step to further solidify your published site and source would be automate a bittorrent release
for every deployment.  Doesn&rsquo;t seem to far out of reach with these snapshots readily available.</p>

<h2>Death</h2>

<p>What if you were to pass away?  Would your annual payment to your domains continue for decades? What
about the fee you pay your hosting company?  Same as the previous reason, publishing it may very well
keep it going for a long time even if the domain is gone, people can still get to the source.</p>

<p>Especially at a place like GitHub pages.</p>

<h2>Why not?</h2>

<p>I hope I sparked some food for thought and I would like your opinions on the matter.</p>

<p>I cannot come up with solid reasons for not to publish your blog open source.  I know at first I
wrestled with the idea that:</p>

<blockquote><p>Wait, my database connection strings would be publicly visible.  I can&#8217;t do that.</p></blockquote>


<p>Then it hit me that Octopress/Jekyll is completely static &ndash; there are no database connection strings.
Q</p>

<blockquote><p>My secret keys for my 3rd party integrations may be exposed.</p></blockquote>


<p>Actually not.  Twitter, Disqus, LinkedIn and so on all use public kesy/ids to identify you with their
widgets.  Even Flickr allows for a vast array of public apis.</p>

<p>You would only need private keys on your site if you were programatically pushing or changing content
elsewhere in a write-permission need.  But again, this was planned as a static site &ndash; no problem here.</p>

<blockquote><p>I have private downloads I don&#8217;t want others to see.</p></blockquote>


<p>Ok, this one did get me.  I do have private downloads of password-protected files on my old site.</p>

<p>I have to think back to the longevity of my blog &ndash; do I want the downloads archived forever?  Short
answer, no.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Old Pics Have Moved]]></title>
    <link href="http://eduncan911.com/misc/old-pics-have-moved.html"/>
    <updated>2014-04-06T21:54:32-04:00</updated>
    <id>http://eduncan911.com/misc/old-pics-have-moved</id>
    <content type="html"><![CDATA[<p>If you are reading this, then I get to say this:</p>

<blockquote><p>I moved my blog, and the photos didn&#8217;t go with it.</p></blockquote>


<p>You can try browsing the images in <a href="https://www.flickr.com/photos/eduncan911/sets/72157600808141363/">my Flickr set called Blogs</a>
for the one you were looking for; but alas, I didn&rsquo;t upload all photos (sorry Venna White fans).</p>

<p>Fret not.  If you really need that photo, just use the contact button at in the header and/or footer
of this site and send me the link you want the photo(s) for.</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Wacom Intuos3/4 Is Incompatible With the Lenovo Helix]]></title>
    <link href="http://eduncan911.com/hardware/the-wacom-intuos3-slash-4-is-incompatible-with-the-lenovo-helix.html"/>
    <updated>2014-04-04T10:37:08-04:00</updated>
    <id>http://eduncan911.com/hardware/the-wacom-intuos3-slash-4-is-incompatible-with-the-lenovo-helix</id>
    <content type="html"><![CDATA[<p>I recently abandoned my 14 year dedication to Dell laptops in favor of the
Lenovo Helix ultrabook/tablet.  In doing so, I needed a stylus for the active
digitizer as the one that came with the Helix just isn&rsquo;t going to work for
diagramming and sketching.</p>

<!-- more -->


<h2>Research: Styluses for the Lenovo Helix</h2>

<p>I had a problem: I was obsessed for days reading every blog, review and comment
and watching every video I could find online to figure out what stylus would work
with the Wacom Active Digitizer that is built into the Helix.</p>

<p>Sadly, I couldn&rsquo;t find a straight answer.</p>

<h2>Wacom ZP501ESE Intuos3 Special Edition Grip Pen</h2>

<p>This is the pen I decided on.  It arrived today and I immediately ripped it open
only to find out it didn&rsquo;t work.  And yes, I removed the OEM stylus cause there is
a switch that disables the digitizer when the pen is inserted to save battery.</p>

<h2>So which one?</h2>

<p>Now that I am armed with new search queries <em>e.g. Lenovo Helix Intuos3 doesn&rsquo;t work</em>,
I&rsquo;ve found new pages with additional info that I wish I&rsquo;d found in the first place.</p>

<p>Usually I am diligent enough to find these errors ahead of time.  But, I failed this
time around and I&rsquo;m having fun writing on my new Octopress blog &ndash; so, why not whip
up a quick post to let others know.</p>

<p>I found <a href="http://forums.lenovo.com/t5/X-Series-Tablet-ThinkPad-Laptops/Wacom-Intuos-4-pen-doesn-t-work-on-Helix/td-p/1153403/page/2">this thread</a>
that was the most helpful in figuring out which stylus to get.  Specifically, this post:</p>

<blockquote><p>FYI, the Wacom Penabled Digitizer system is not compatible with Intuos, Cintiq, and Bamboo Tablet pens.<br/> <br/>Any other Wacom Penabled Tablet PC Pen will work (as mentioned, Series 7 slate, Asus EP121, Lenovo ThinkPad Tablet 2, Lenovo X61 - X230T series, Fujitsu T900 series, Motion F5t, Wacom Bamboo Feel pens to name just a few).<br/> <br/>Additionally the Wacom Pen Display Pens will work (eg DTU- series).<br/> <br/>These pens come in different shapes, sizes and button configurations, but the pen must match up with the digitizer system that is built into the tablet and many people aren&#8217;t aware that Wacom have different systems.<br/> <br/>The Penabled system is not as advanced as the Intuos or Cintiq unfortunately (fewer pressure degrees, no tilt angles etc), but still very impressive and useful.</p><footer><strong>Brett Gilbertson - Microsoft Tablet and Touch MVP</strong> <cite><a href='http://forums.lenovo.com/t5/X-Series-Tablet-ThinkPad-Laptops/Wacom-Intuos-4-pen-doesn-t-work-on-Helix/td-p/1153403/page/2'>Wacom Intuos 4 Pen Doesn&#8217;t Work on Helix</a></cite></footer></blockquote>


<p>Well, there we have it.  NewEgg, a return is coming!</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress and Posh-Git - Oh My]]></title>
    <link href="http://eduncan911.com/software/octopress-powershell-and-posh-git-oh-my.html"/>
    <updated>2014-04-03T16:11:01-04:00</updated>
    <id>http://eduncan911.com/software/octopress-powershell-and-posh-git-oh-my</id>
    <content type="html"><![CDATA[<p>As announced previously, I&rsquo;ve recently <a href="http://eduncan911.com/software/my-hackers-blog.html">converted my blog over to Octopress</a>.
This was not without a few stumbling blocks on Windows using Posh-Git.  I&rsquo;ve also recently started to suspect some issues
with <a href="https://github.com/dahlbyk/posh-git">Posh-Git</a> now that I am using it on a daily basis.</p>

<p>In this post, I am documenting the procedure for future installs on Windows; and, maybe I can help someone else who runs across the
same issues.</p>

<!-- more -->


<h2>Ruby on Windows? No, Yari on Windows</h2>

<p>This is my first exposure to Ruby.  I know, I&rsquo;ve been closed off to anything non-.NET since, well, .NET in 2002.  With that the first
steps to getting ruby installed.  A few quick searches yielded some issues with Windows and Ruby and Octopress, until I ran across
<a href="http://blog.zerosharp.com/setting-up-octopress-on-windows-again/">Robert Anderson&rsquo;s Octopress install</a>.</p>

<p>They key point to this type of installing is this golden snippet:</p>

<blockquote><p>Use yari instead of RVM/rbenv</p><p>Scott Muc has written yari which lets you switch between Windows Ruby versions.</p><footer><strong>Robert Anderson</strong> <cite><a href='http://blog.zerosharp.com/setting-up-octopress-on-windows-again/'>Setting Up Octopress on Windows Again</a></cite></footer></blockquote>




<!-- TODO: Unfortunately this didn't work for me out right.  I had some issues with the `gem install bundler` command that generated a lot of missing
dependencies. -->


<p>Once all dependencies are fixed up, it&rsquo;s onto following the setup guide over at Octopress:</p>

<p><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></p>

<h2><code>&gt; rake setup_github_pages</code></h2>

<p>Now, I am going to use GitHub Pages for my static blog hosting.  Those are the instructions I am going to focus on here and below.</p>

<p>The next step is to call the task to setup your repo for GitHub deployments.  Just take a quick gander a what it does,
as listed on the Octopress install guide:</p>

<ol>
<li>Ask for and store your Github Pages repository url.</li>
<li>Rename the remote pointing to imathis/octopress from &lsquo;origin&rsquo; to &lsquo;octopress&rsquo;</li>
<li>Add your Github Pages repository as the default origin remote.</li>
<li>Switch the active branch from master to source.</li>
<li>Configure your blog&rsquo;s url according to your repository.</li>
<li>Setup a master branch in the _deploy directory for deployment.</li>
</ol>


<p>If that sounds like a lot, wait until you see what actually does happen below.  So, we&rsquo;ll run it and look at the output:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [master +2 ~1 -0 !]&gt; rake setup_github_pages
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.io.git)
</span><span class='line'>           or 'https://github.com/your_username/your_username.github.io')
</span><span class='line'>Repository url: git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>Added remote git@github.com:eduncan911/eduncan911.github.io.git as origin
</span><span class='line'>Set origin as default remote
</span><span class='line'>Master branch renamed to 'source' for committing your blog source files
</span><span class='line'>rm -rf _deploy
</span><span class='line'>mkdir _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>Initialized empty Git repository in C:/gd/code/eduncan911/_deploy/.git/
</span><span class='line'>'My Octopress Page is coming soon
</span><span class='line'>'hellip' is not recognized as an internal or external command, operable program or batch file.
</span><span class='line'>[master (root-commit) f1e0e3f] Octopress init
</span><span class='line'> 1 file changed, 0 insertions(+), 0 deletions(-)
</span><span class='line'> create mode 100644 index.html
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>cd -
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'>## Now you can deploy to git@github.com:eduncan911/eduncan911.github.io.git with `rake deploy` ##
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Btw, kudos to the developers of Octopress to put this much output in the build processes &ndash; makes
things much easier to debug than the vast majority of scripts you run.</p>

<p>But doh!  We have our first stumbling blocks.  We have a number of errors to work out here, three exactly.</p>

<p>Fortunately, <code>line 7</code> is an extremely common problem when working git.  Unfortunately though,
the common fixes doesn&rsquo;t seem to work with any Posh-Git install I&rsquo;ve used to date.</p>

<p>Before we get to that though, let&rsquo;s take a look at the ruby task to see exactly what is going on
before we jump to any conclusions.</p>

<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Set up _deploy folder and deploy branch for Github Pages deployment&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:setup_github_pages</span><span class="p">,</span> <span class="ss">:repo</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="p">,</span> <span class="n">args</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">repo</span>
</span><span class='line'>    <span class="n">repo_url</span> <span class="o">=</span> <span class="n">args</span><span class="o">.</span><span class="n">repo</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Enter the read/write url for your repository&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;(For example, &#39;git@github.com:your_username/your_username.github.io.git)&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;           or &#39;https://github.com/your_username/your_username.github.io&#39;)&quot;</span>
</span><span class='line'>    <span class="n">repo_url</span> <span class="o">=</span> <span class="n">get_stdin</span><span class="p">(</span><span class="s2">&quot;Repository url: &quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">protocol</span> <span class="o">=</span> <span class="p">(</span><span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/(^git)@/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;https&#39;</span> <span class="p">:</span> <span class="s1">&#39;git&#39;</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">protocol</span> <span class="o">==</span> <span class="s1">&#39;git&#39;</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/:([^\/]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">user</span> <span class="o">=</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/github\.com\/([^\/]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">branch</span> <span class="o">=</span> <span class="p">(</span><span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\/[\w-]+\.github\.(?:io|com)/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span><span class="p">)</span> <span class="p">?</span> <span class="s1">&#39;gh-pages&#39;</span> <span class="p">:</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>  <span class="n">project</span> <span class="o">=</span> <span class="p">(</span><span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;gh-pages&#39;</span><span class="p">)</span> <span class="p">?</span> <span class="n">repo_url</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/\/([^\.]+)/</span><span class="p">)</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>  <span class="k">unless</span> <span class="p">(</span><span class="sb">`git remote -v`</span> <span class="o">=~</span> <span class="sr">/origin.+?octopress(?:\.git)?/</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="c1"># If octopress is still the origin remote (from cloning) rename it to octopress</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git remote rename origin octopress&quot;</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>      <span class="c1"># If this is a user/organization pages repository, add the correct origin remote</span>
</span><span class='line'>      <span class="c1"># and checkout the source branch for committing changes to the blog source.</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Added remote </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> as origin&quot;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git config branch.master.remote origin&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Set origin as default remote&quot;</span>
</span><span class='line'>      <span class="nb">system</span> <span class="s2">&quot;git branch -m master source&quot;</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;Master branch renamed to &#39;source&#39; for committing your blog source files&quot;</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">unless</span> <span class="o">!</span><span class="n">public_dir</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>        <span class="nb">system</span> <span class="s2">&quot;rake set_root_dir[</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">]&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">jekyll_config</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jekyll_config</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^url:.*$/</span><span class="p">,</span> <span class="s2">&quot;url: </span><span class="si">#{</span><span class="n">blog_url</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">project</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">jekyll_config</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">rm_rf</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">mkdir</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git init&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;echo &#39;My Octopress Page is coming soon &amp;hellip;&#39; &gt; index.html&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="s2">Octopress init</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git branch -m gh-pages&quot;</span> <span class="k">unless</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">rakefile</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_branch(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_branch</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3</span><span class="si">#{</span><span class="n">branch</span><span class="si">}</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_default(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_default</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3push</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>      <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">rakefile</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">---</span><span class="se">\n</span><span class="s2">## Now you can deploy to </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> with `rake deploy` ##&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s step through what this task does to our repo:</p>

<!-- start:20 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># If octopress is still the origin remote (from cloning) rename it to octopress</span>
</span><span class='line'><span class="nb">system</span> <span class="s2">&quot;git remote rename origin octopress&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, no problem.  We are renaming origin.  But what you don&rsquo;t know is with Posh-Git, when
you rename origin, it seems creates an empty origin!  So, when the next system command executes:</p>

<!-- start:22 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'>  <span class="c1"># If this is a user/organization pages repository, add the correct origin remote</span>
</span><span class='line'>  <span class="c1"># and checkout the source branch for committing changes to the blog source.</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We get our first error, <code>fatal: remote origin already exists.</code></p>

<p>Ok, back on task of what the <code>RakeFile</code> is doing to move forward.</p>

<!--  start:26 mark:27,29 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Added remote </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> as origin&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git config branch.master.remote origin&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Set origin as default remote&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git branch -m master source&quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Master branch renamed to &#39;source&#39; for committing your blog source files&quot;</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="k">unless</span> <span class="o">!</span><span class="n">public_dir</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;rake set_root_dir[</span><span class="si">#{</span><span class="n">project</span><span class="si">}</span><span class="s2">]&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Interesting.  I haven&rsquo;t seen this in my git-ninja code before.  A quick Google and we come up
with this SO answer on how to setup master to track a remote branch:</p>

<blockquote><p>You can do the following (assuming you are checked out on master and want to push to a remote branch master):</p><p>Set up the &#8216;remote&#8217; if you don&#8217;t have it already</p><p># git remote add origin ssh://&#8230;<br/>Now configure master to know to track:</p><p># git config branch.master.remote origin<br/># git config branch.master.merge refs/heads/master<br/>And push:</p><p># git push origin master</p><footer><strong>Paul Hedderly</strong> <cite><a href='http://stackoverflow.com/a/625460/56693'>stackoverflow.com/a/625460/&hellip;</a></cite></footer></blockquote>


<p>So now we have master tracking a remote branch and on <code>line 29</code>, we&rsquo;ve renamed master to a new branch
called <code>source</code> (which also switches us to <code>source</code> for future commands).</p>

<p>Continuing&hellip;</p>

<!--  start:37 mark:45-48 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">jekyll_config</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jekyll_config</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/^url:.*$/</span><span class="p">,</span> <span class="s2">&quot;url: </span><span class="si">#{</span><span class="n">blog_url</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">project</span><span class="p">)</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s1">&#39;_config.yml&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>    <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">jekyll_config</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">rm_rf</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">mkdir</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git init&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;echo &#39;My Octopress Page is coming soon &amp;hellip;&#39; &gt; index.html&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="s2">Octopress init</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ah, we are create a new directory (<code>_deploy</code> by default Octopress config) and by calling
<code>git init</code> we create a new bank repo!  This was not clear to me as to why at first, until I got things
working.  You&rsquo;ll see why in a bit.</p>

<p>And look here, on <code>line 46</code>, we have our 2nd error in the output.  It would seem this
is a parsing typo on Windows machines.  So, we never get this index.html file!  No biggie,
we&rsquo;ll be replacing that very shortly anyways.</p>

<p>Let&rsquo;s move forward.</p>

<!-- start:49 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">system</span> <span class="s2">&quot;git branch -m gh-pages&quot;</span> <span class="k">unless</span> <span class="n">branch</span> <span class="o">==</span> <span class="s1">&#39;master&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This is my first Ruby playground, so I am not exactly sure what this line does.  I would say we create
a branch called gh-pages, but that is for GitHub Projects (for corporate accounts), not our
GitHub Pages that we using here.</p>

<p>I suspect the <code>unless branch == 'master'</code> is what prevents this line from running on my installation.</p>

<!-- start:50 mark:50 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">system</span> <span class="s2">&quot;git remote add origin </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">rakefile</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_branch(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_branch</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3</span><span class="si">#{</span><span class="n">branch</span><span class="si">}</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">rakefile</span><span class="o">.</span><span class="n">sub!</span><span class="p">(</span><span class="sr">/deploy_default(\s*)=(\s*)([&quot;&#39;])[\w-]*[&quot;&#39;]/</span><span class="p">,</span> <span class="s2">&quot;deploy_default</span><span class="se">\\</span><span class="s2">1=</span><span class="se">\\</span><span class="s2">2</span><span class="se">\\</span><span class="s2">3push</span><span class="se">\\</span><span class="s2">3&quot;</span><span class="p">)</span>
</span><span class='line'><span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="n">f</span><span class="o">.</span><span class="n">write</span> <span class="n">rakefile</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">---</span><span class="se">\n</span><span class="s2">## Now you can deploy to </span><span class="si">#{</span><span class="n">repo_url</span><span class="si">}</span><span class="s2"> with `rake deploy` ##&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally we are at the end.  Let&rsquo;s see, back on <code>line 48</code> we are sitting in a new directory
called <code>_deploy</code> with a new clean <code>git init</code>.  So, on <code>line 50</code> we add a remote for origin&hellip;</p>

<p>And get our 3rd and final error, that we have already seen before.</p>

<h3>fatal: remote origin already exists</h3>

<p>As I mentioned earlier, this is most likely because Posh-Git already creates an origin and never
leaves an empty remote.</p>

<p>I&rsquo;ve seen this <a href="https://www.google.com/search?q=fatal%3A+remote+origin+already+exists&amp;oq=fatal%3A+remote+origin+already+exists&amp;aqs=chrome..69i57j69i58.840j0j7&amp;sourceid=chrome&amp;espv=210&amp;es_sm=122&amp;ie=UTF-8">fatal: remote origin already exists</a>
error all too often and it usually means you already have an origin and cannot add another one.  Usually <code>git</code> on Linux allows you to fix with a set of simple and meaningful commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># pseudo code, not actually used during this install guide</span>
</span><span class='line'><span class="nv">$ </span>git remote add temp user@my-url.com/repo.git
</span><span class='line'><span class="nv">$ </span>git remote rm origin
</span><span class='line'><span class="nv">$ </span>git remote add origin user@my-url.com/repo.git
</span><span class='line'><span class="nv">$ </span>git remote rm temp
</span></code></pre></td></tr></table></div></figure>


<p>But this has never worked for me using Posh-Git.  When trying to remove origin with Posh-Git, you get a new and blocking
error:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote rm origin
</span><span class='line'>error: Could not remove config section 'remote.origin'</span></code></pre></td></tr></table></div></figure>


<p>Searching online basically leads you to a dead end in that this normally works using other versions of git.  I did stumble upon
a related SO question about remotes using <code>set-url</code>, which <a href="http://stackoverflow.com/a/22826225/56693">lead me to come up with this solution</a>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote -v
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (fetch)
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (push)
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the <code>rake setup_github_pages</code> has renamed our origin to octopress.  But Posh-Git seemed to have created
another empty origin and it won&rsquo;t the script add one.  Let&rsquo;s fix that:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; git remote -v
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (fetch)
</span><span class='line'>octopress       git://github.com/imathis/octopress.git (push)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)</span></code></pre></td></tr></table></div></figure>


<p>There we go.  Let&rsquo;s <code>rake</code> that <code>setup_github_pages</code> script again, shall we?</p>

<!-- mark:17 -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake setup_github_pages
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.io.git)
</span><span class='line'>           or 'https://github.com/your_username/your_username.github.io')
</span><span class='line'>Repository url: git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>rm -rf _deploy
</span><span class='line'>mkdir _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>Initialized empty Git repository in C:/gd/code/eduncan911/_deploy/.git/
</span><span class='line'>'My Octopress Page is coming soon
</span><span class='line'>'hellip' is not recognized as an internal or external command,
</span><span class='line'>operable program or batch file.
</span><span class='line'>[master (root-commit) 27d2dd5] Octopress init
</span><span class='line'> 1 file changed, 0 insertions(+), 0 deletions(-)
</span><span class='line'> create mode 100644 index.html
</span><span class='line'>fatal: remote origin already exists.
</span><span class='line'>cd -
</span><span class='line'>
</span><span class='line'>---
</span><span class='line'>## Now you can deploy to git@github.com:eduncan911/eduncan911.github.io.git with `rake deploy` ##</span></code></pre></td></tr></table></div></figure>


<p>Well crap. We still get that <code>fatal: remote origin already exists</code> on <code>line 17</code> error after all we did!</p>

<p>Ah, but remember what I said earlier about a directory called <code>_deploy</code>?  They are making a new repo
and setting up the <code>origin</code> manually.</p>

<p>So, we have to set that <code>origin</code> ourselves again.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; cd .\_deploy
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>This is just checking to see what was there and as we suspected the <code>git remote add origin</code> command in the task did not work.</p>

<p>You may also notice that when you change directories to the <code>_deploy</code> new repo, we are on <code>master</code> now of a different repo.
We were previously on `source&#8217; branch of the root repo from the previous scripts.</p>

<p>So let&rsquo;s fix that up.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; cd ..
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; </span></code></pre></td></tr></table></div></figure>


<p>There we go.  All fixed up and ready to continue.  Make sure to change directories <code>cd ..</code> to backup to where you were
before continuing.</p>

<p>At this point, it is not necessary to run the <code>rake setup_github_pages</code> again because the script continues even with
errors, as we&rsquo;ve seen above.  The last part of the script seems to modify the <code>RakeFile</code>.  We&rsquo;ll leave that for another
topic as we want to keep hacking on our new blog to get it up.</p>

<p class='info ' data-title=''>To the keen observer, you may notice that we have two branches of the same repo:</p>


<p>git@github.com:eduncan911/eduncan911.github.io.git<br/># master<br/># source</p>


<p>The first part of Octopress&#8217; instructions for github actually branches what you cloned from Octopress&#8217; github<br/>into a source branch.  Ok, check.</p>


<p>But recall that we created a sub-directory called _deploy and we git init a new clean repo there.  It was<br/>already set to master, and finally we made its origin the same as our original source.</p>


<p>What this means is now you will have two branches with completely different code.  Your source branch is what<br/>you will work from, commit to and push up.  While the Octopress ruby framework will handle the generation of the<br/>static site and deployments to the master branch.</p>


<p>The last piece to remember is that GitHub Pages will only use the master branch to serve your static site.</p>


<p>Sweet!  Our website (aka master branch) will be nice and clean based on this _deploy directory, whereas<br/>our source branch will be the work committed.</p>


<h2><code>rake generate</code></h2>

<p>This runs without issue.</p>

<h2><code>rake deploy</code></h2>

<p>Aw shit, it would seem we still have some issues because this task generates errors:</p>

<!-- mark:6-7,24-28 -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake deploy
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>## Deploying branch to Github Pages
</span><span class='line'>## Pulling any updates from Github Pages
</span><span class='line'>cd _deploy
</span><span class='line'>fatal: No remote repository specified.  Please, specify either a URL or a
</span><span class='line'>remote name from which new revisions should be fetched.
</span><span class='line'>cd -
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>
</span><span class='line'>## Copying public to _deploy
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>
</span><span class='line'>## Committing: Site updated at 2014-04-03 22:58:56 UTC
</span><span class='line'>[master 5257cf9] Site updated at 2014-04-03 22:58:56 UTC
</span><span class='line'> 61 files changed, 1118 insertions(+)
</span><span class='line'> create mode 100644 assets/jwplayer/glow/controlbar/background.png
</span><span class='line'> ...(snip)...
</span><span class='line'> create mode 100644 sitemap.xml
</span><span class='line'> create mode 100644 stylesheets/screen.css
</span><span class='line'>
</span><span class='line'>## Pushing generated _deploy website
</span><span class='line'>fatal: 'origin' does not appear to be a git repository
</span><span class='line'>fatal: Could not read from remote repository.
</span><span class='line'>
</span><span class='line'>Please make sure you have the correct access rights
</span><span class='line'>and the repository exists.
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>We got two errors to sort out.  Let&rsquo;s take a look at the first one.</p>

<h3>fatal: No remote repository specified.  Please, specify either a URL or a remote name from which new revisions should be fetched.</h3>

<p>Humm, this sounds like a <code>git pull</code> was issued.  Let&rsquo;s take a look at the ruby commands for this.  Again, thanks to
the great output from the developers, a quick search in the <code>RakeFile</code> finds this code.</p>

<!--  mark:5-6,18 -->


<figure class='code'><figcaption><span>RakeFile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;deploy public directory to github pages&quot;</span>
</span><span class='line'><span class="n">multitask</span> <span class="ss">:push</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Deploying branch to Github Pages &quot;</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;## Pulling any updates from Github Pages &quot;</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git pull&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="p">(</span><span class="no">Dir</span><span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">/*&quot;</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">rm_rf</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:copydot</span><span class="o">].</span><span class="n">invoke</span><span class="p">(</span><span class="n">public_dir</span><span class="p">,</span> <span class="n">deploy_dir</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Copying </span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2"> to </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">cp_r</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">public_dir</span><span class="si">}</span><span class="s2">/.&quot;</span><span class="p">,</span> <span class="n">deploy_dir</span>
</span><span class='line'>  <span class="n">cd</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git add -A&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Committing: Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">message</span> <span class="o">=</span> <span class="s2">&quot;Site updated at </span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">utc</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git commit -m </span><span class="se">\&quot;</span><span class="si">#{</span><span class="n">message</span><span class="si">}</span><span class="se">\&quot;</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Pushing generated </span><span class="si">#{</span><span class="n">deploy_dir</span><span class="si">}</span><span class="s2"> website&quot;</span>
</span><span class='line'>    <span class="nb">system</span> <span class="s2">&quot;git push origin </span><span class="si">#{</span><span class="n">deploy_branch</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">## Github Pages deploy complete&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ah hah, there marked on lines 5 and 6 is the <code>git pull</code> for the <code>_deploy</code> directory.  Smart, they are pulling down any
changes you may have made manually to your static pages.  For example, using GitHub&rsquo;s edit file feature to edit a file
directly in the browser.</p>

<p>I wonder why that didn&rsquo;t work because as you recall, we setup the <code>origin</code> correctly.  Let&rsquo;s figure out why.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; cd .\_deploy
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin</span></code></pre></td></tr></table></div></figure>


<p>Wha&hellip;  We already set this before.  What happened?  Well, I can tell you that it is because I re-ran the
<code>rake setup_github_pages</code> a 2nd and 3rd time.  If you recall from the setup_github_pages take, it doesn&rsquo;t care if you have
an existing deployment directory or not &ndash; it blows out and creates it again!</p>

<p>So, just go add the origin again.  <em>facepalm</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote set-url --add origin git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (fetch)
</span><span class='line'>origin  git@github.com:eduncan911/eduncan911.github.io.git (push)
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; git remote -v
</span><span class='line'>C:\gd\code\eduncan911\_deploy [master]&gt; cd ..
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Before we continue, let&rsquo;s take a quick look at that second error.  Scrolling down to <code>line 18</code> in the same ruby
task above we see a <code>git push origin master</code> being executed.</p>

<p>Because we had no <code>origin</code> set correctly, this would cause yet another error.  We got that fixed already though with
the above <code>git remote set-url --add</code> command.</p>

<p>Let&rsquo;s try to deploy again now that we fixed the <code>_deploy</code> folder.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt; rake deploy
</span><span class='line'>## Set the codepage to 65001 for Windows machines
</span><span class='line'>## Deploying branch to Github Pages
</span><span class='line'>## Pulling any updates from Github Pages
</span><span class='line'>cd _deploy
</span><span class='line'>Warning: Permanently added 'github.com,192.30.252.131' (RSA) to the list of known hosts.
</span><span class='line'>There is no tracking information for the current branch.
</span><span class='line'>Please specify which branch you want to merge with.
</span><span class='line'>See git-pull(1) for details
</span><span class='line'>
</span><span class='line'>    git pull &lt;remote&gt; &lt;branch&gt;
</span><span class='line'>
</span><span class='line'>If you wish to set tracking information for this branch you can do so with:
</span><span class='line'>
</span><span class='line'>    git branch --set-upstream-to=origin/&lt;branch&gt; master
</span><span class='line'>
</span><span class='line'>cd -
</span><span class='line'>rm -rf _deploy/assets
</span><span class='line'>rm -rf _deploy/atom.xml
</span><span class='line'>rm -rf _deploy/blog
</span><span class='line'>rm -rf _deploy/favicon.png
</span><span class='line'>rm -rf _deploy/images
</span><span class='line'>rm -rf _deploy/index.html
</span><span class='line'>rm -rf _deploy/javascripts
</span><span class='line'>rm -rf _deploy/robots.txt
</span><span class='line'>rm -rf _deploy/sitemap.xml
</span><span class='line'>rm -rf _deploy/stylesheets
</span><span class='line'>
</span><span class='line'>## Copying public to _deploy
</span><span class='line'>cp -r public/. _deploy
</span><span class='line'>cd _deploy
</span><span class='line'>
</span><span class='line'>## Committing: Site updated at 2014-04-03 23:21:58 UTC
</span><span class='line'># On branch master
</span><span class='line'>nothing to commit, working directory clean
</span><span class='line'>
</span><span class='line'>## Pushing generated _deploy website
</span><span class='line'>Warning: Permanently added 'github.com,192.30.252.131' (RSA) to the list of known hosts.
</span><span class='line'>Counting objects: 79, done.
</span><span class='line'>Delta compression using up to 12 threads.
</span><span class='line'>Compressing objects: 100% (72/72), done.
</span><span class='line'>Writing objects: 100% (79/79), 186.45 KiB | 0 bytes/s, done.
</span><span class='line'>Total 79 (delta 1), reused 0 (delta 0)
</span><span class='line'>To git@github.com:eduncan911/eduncan911.github.io.git
</span><span class='line'> * [new branch]      master -&gt; master
</span><span class='line'>
</span><span class='line'>## Github Pages deploy complete
</span><span class='line'>cd -
</span><span class='line'>C:\gd\code\eduncan911 [source +2 ~3 -0 !]&gt;</span></code></pre></td></tr></table></div></figure>


<p>Humm, a few warnings about no tracking information for the remote branch, which we renamed to be <code>source</code> from <code>master</code>
if you recall from earlier.  I think this is normal because we haven&rsquo;t pushed <code>source</code> up yet.</p>

<h3>git push origin source</h3>

<p>Now, let&rsquo;s see if we can fix the tracking information for our <code>source</code> branch by pushing our changes up.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'initial commit of source branch'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>Seems like we are good here.</p>

<p>Let&rsquo;s head over to our GitHub Page and see what&rsquo;s there in the repo.  What&rsquo;s this?  My master is a nice and clean static
site?  Sweet!</p>

<p><a href="https://github.com/eduncan911/eduncan911.github.io/tree/master">github.com/eduncan911/eduncan911.github.io/tree/master</a></p>

<p>And lookie here, the <code>source</code> branch has the source!</p>

<p><a href="https://github.com/eduncan911/eduncan911.github.io/tree/source">github.com/eduncan911/eduncan911.github.io/tree/source</a></p>

<p>I&rsquo;m sticking a fork in her and calling it&hellip;  These may be normal warnings with the way the remote tracking is handled
as I don&rsquo;t have a lot of experience with that part of git.</p>

<h2>It&rsquo;s all downhill from here</h2>

<p>If you have stuck with me this long, I have some good news &ndash; you&rsquo;re done!  Time to start blogging!</p>

<p>You can read the rest of the deployment guide from here as they have some useful tips.  Also, make sure to commit
your work (they mention this too).</p>

<p>My last piece of advice after you get the hang of things and create a few test posts is to look into these commands.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate   <span class="c"># Generates posts and pages into the public directory</span>
</span><span class='line'>rake watch      <span class="c"># Watches source/ and sass/ for changes and regenerates</span>
</span><span class='line'>rake preview    <span class="c"># Watches, and mounts a webserver at http://localhost:4000</span>
</span></code></pre></td></tr></table></div></figure>


<p>You&rsquo;ve already run <code>rake generate</code>; but, take a look at the other two.</p>

<p><code>rake watch</code> is nice to auto-generate files as you change them.</p>

<p><code>rake preview</code> is even better!  It will watch for and auto-generate your site; but, more so it runs a very lightweight
tiny webserver (much less tiny than IIS!) in the background where you can open a browser and hit refresh to your heart&rsquo;s
content.</p>

<p>I advise everyone to do that to keep the number of commits down because once  you have a few 100 pages, that generate and
deploy is going to take a long while.  Might as well get into the habit early!</p>

<p>~E</p>

<p>PS: I am thinking of renting a <a href="http://technichi.com/">Macbook Pro</a> because of the time lost with stuff like this
under Windows.  Argh&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Hackers' Blog]]></title>
    <link href="http://eduncan911.com/software/my-hackers-blog.html"/>
    <updated>2014-04-02T23:25:01-04:00</updated>
    <id>http://eduncan911.com/software/my-hackers-blog</id>
    <content type="html"><![CDATA[<p>Three years, 11 months and 22 days&hellip; That&rsquo;s how long it has been since my last blog post.</p>

<p>When I originally launched this blog, I was using the software I originally wrote for CommunityServer back in
2004 and 2005.  Ever since then I have dreamed of grand visions of new blogging software.  Tinkering with new
design patterns, following <a href="http://invalidlogic.com/2008/12/22/blogging-apps-are-the-new-hello-world/">Ken Robertson&rsquo;s advice of trying out new frameworks with the concept of an Hello Blog</a>,
where you create a blog using whatever language you want.  While that was all said and good, I never got around to
finishing any of them good enough to launch them live.</p>

<h3>Enter <a href="http://octopress.org/">Octopress</a>: A blogging framework for hackers</h3>

<p>For those that haven&rsquo;t heard about it, go <a href="http://octopress.org/">read about it</a>.  In short, it uses Ruby to create a static blog for
you to upload anywhere.  Yes, just raw .html files and css/js/image files.  And, that&rsquo;s about it.</p>

<!-- more -->




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<p>You write your posts in MarkDown, and be done with it. There are all sorts of little <del>hacks</del> shortcuts when writing posts that I
am going to have a lot of fun with.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview
</span><span class='line'># now open browser to eduncan911.local:4000/</span></code></pre></td></tr></table></div></figure>


<p>When you go completely static, interesting opportunities start to emerge&hellip;  You no longer need a &ldquo;web host&rdquo; &ndash; all you need is a place
to dump your files online somewhere.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>Enter <a href="https://pages.github.com/">GitHub Pages</a></h3>

<p>GitHub allows you to <a href="https://pages.github.com/">host static pages</a> in a public repo.  I&rsquo;ve been hosting my code.eduncan911.com
there for years.</p>

<p><span class='pullquote-right' data-pullquote='If I create a static blog, I can just host it at GitHub.'>
A few Google searches revealed I wasn&rsquo;t the only one who thought this way. If I create a static blog, I can just host it at GitHub.
At first I stumbled upon <a href="https://github.com/jekyll/jekyll">Jekyll</a> which gives you full control over markup, css, etc.  But here I was in
the same position &ndash; writing code.  I found that Octopress is built upon Jekyll; but, it already has a default theme, css, plugins, etc.
</span></p>

<p>The best part is they have step-by-step instructions on how to publish it straight to GitHub Pages.  It really can&rsquo;t get any easier than
this, for any <del>hacker</del> skill level.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add --all
</span><span class='line'>git commit -m "new post: My Hacker Blog"
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s right, this blog is hosted at <a href="http://eduncan911.github.io/">eduncan911.github.io</a>.  They have instructions on
setting up a CNAME (in my case though, an ALIAS for the root eduncan911.com domain) and that&rsquo;s it, you&rsquo;re live.</p>

<p>As a matter of fact, <a href="https://github.com/eduncan911/eduncan911.github.io">go browse my site</a> just like the old &ldquo;directory browsing&rdquo; method.
If you want to see the source code in how I generate the site, switch branches to <a href="https://github.com/eduncan911/eduncan911.github.io/tree/source"><code>source</code></a> to
check that out.  Tip: most of that is Octopress.  Drill into the /source/ directory to see the raw nit-n-gritty fun stuff.</p>

<p>I will admit though, it took some tinkering to get Octopress setup and working correctly on Windows with PoshGit and PowerShell.</p>

<h3>The way forward</h3>

<p>There are a number of plug-ins, and there is some work I want to do to the asides (right column).  But I am liberated
to no longer wait, and just do.</p>

<p>Most of all, being just raw MarkDown, I can write from any device now: tablets, smart phones, anywhere.  And, being on GitHub,
I can just browse to my source branch and create a new file to start blogging.  There are instructions for a C.I. server to
take callbacks from GitHub, and to publish it on the site after commits.  Yep, very fun stuff&hellip;</p>

<p>~E</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power Naps for Everyone]]></title>
    <link href="http://eduncan911.com/blog/archives/power-naps-for-everyone.html"/>
    <updated>2011-04-25T19:28:35-04:00</updated>
    <id>http://eduncan911.com/blog/archives/power-naps-for-everyone</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; float: left; border-top: 0px; border-right: 0px; padding-top: 0px" title="Mei sleeping on our couch." border="0" alt="Mei sleeping on our couch." align="left" src="http://eduncan911.com/blog/archives/images/How-to-Take-a-Nap_CD86/V__A2E1_thumb.jpg" width="256" height="193" />You may think you know how to take a nap.&#160; Lie down, close eyes, and whenever you wake up that&#8217;s it.&#160; As it turns out, anything beyond 30 minutes puts you into danger of biting your work colleagues heads off when they interrupt you at 40 or 50 minutes into your nap.</p>


<p>  <p>I find myself constantly giving this advice to my work colleagues and family members.&#160; So, here&rsquo;s a blog post on what works very well for me.</p>  <p>There was a British study I read some 6 or so years ago that concluded a simple formula for power napping.&#160; And ever since I started to use this formula, it has worked wonders for my afternoon concentration.&#160; </p>  <p><strong>Preparation</strong></p>  <p>First and foremost, caffeine is your enemy here.&#160; If you are a 2+ cups of coffee drinker a day, &quot;because I need it to get going&quot;, then you may have to look elsewhere to prepare.&#160; There&rsquo;s nothing you can do when you crash in the afternoon but to drink more caffeine. </p>  <p>One idea would be to switch to Japanese Green Tea (not the cheap store-brands, but actual shredded green leafs that you control the dosage with).&#160; It is said that the caffeine in Japanese Green Tea absorbs at a much slower pace than coffee, which is less of a shock to your body (and lasts longer).&#160; This could allow you to come down from that high more easily, and allow a power nap.</p>  <p>I actually went caffeine-free for about 6 solid years.&#160; It completely changes your sleep habits (for the good).&#160; The only caffeine I take now is a cup of imported Japanese Green Tea in the morning (but no later than 12 noon), and a piece of chocolate here and there once a week or so.</p>  <p><strong>1. Remove all distractions.</strong></p>  <p>Turn off the computer, all distractions, close the office door, put up a sign in your cubical for Do Not Disturb &ndash; whatever it takes to remove all distractions.&#160; Also, silence any phones in your area (no txt, next chess move alerts, etc).</p>  <p>The problem with New York City when I moved here is I have yet to work in an office with dedicated offices, or even a cubical!&#160; Everyone is squeezed into tight open work areas, and demanded to be at full attention at all hours of the day.&#160; This is a horrible working environment and goes against our basic evolutional bodily functions.&#160; You are yawning at 2pm?&#160; Yeah, no wonder.&#160; All I have to say here is to bring a set of very large headphones, and set a workplace policy that when you have your headphones on, you are to not be disturbed.&#160; Works most of the time actually (even if head laying on the desk).</p>  <p><strong>2. Set an alarm for no longer than 30 minutes.&#160; </strong></p>  <p>You do not want to sleep past 30 minutes, no matter how tired you are.&#160; When the alarm goes off, you must get up &ndash; no exceptions.&#160; This is because your body will start to go into REM Stage I sleep at 35 to 40 minutes, and your body will be expecting to go through all 3 stages of REM &ndash; over the next 3 to 4 hours.&#160; Your body will start to release the chemicals needed for deep sleep at Stage I, and you don&rsquo;t want any of that.&#160; If your REM cycle is interrupted during any of these stages, well, that&rsquo;s when Mr. Groggy comes out and is introduced to your co-workers.</p>  <p>Tip: the use of a smartphone in your workplace is perfect here.&#160; Set some relaxing meditation music on your phone as well as an alarm on the phone for no longer than 30 minutes.&#160; Just turn off the ringer and text message sounds first.</p>  <p><strong>3. Set the proper conditions.</strong></p>  <p>If it is not possible to set a dark area, bring a sleep mask with you to work.&#160; Also, increase the temp if possible or put on a jacket &ndash; even if you are a bit warm already (your body lowers its temp during sleep cycles).&#160; If you cannot use a sleep mask or dim the lights, just lie your forehead on your arms on your desk. </p>  <p><strong>4. Remove all thoughts of stress.&#160; </strong></p>  <p>Do not think about anything related to work, no matter how fun it is.&#160; Think nothing of deadlines or tasks &ndash; that only begets an elevated heart rate. Think of the next vacation for the family instead, or your kids next birthday wish, or that hot rod car project: whatever makes you happy.&#160; </p>  <p><strong>If interrupted from slumber…</strong></p>  <p>There are a few rules to follow if you are interrupted by the kids, or co-workers.</p>  <ul>   <li>Get up immediately.&#160; </li>    <li>Do not attempt to go back to the nap for the next 2 to 3 hours.&#160; Anything earlier than that does not work. </li> </ul>  <p>This is why it is important to set the policy that once you are resting, you are at rest.&#160; </p>  <p><strong>Power Naps are not a replacement for the lack of sleep.</strong></p>  <p>One bad night of sleep?&#160; Fine.&#160; Two or more of consecutive bad nights of sleep?&#160; Power naps aren&rsquo;t going to help much.</p>  <p><strong>Tell the boss you are just thinking.</strong></p>  <p>The British study (if I could find it, I would &ndash; Binging <em>British Power Nap Studies</em> has an endless supply of links) also concluded that power napping makes you more focused in the 2 to 3 hours after the power nap.&#160; Additional research on the study yielded that people tend to have their best ideas just before and just after Stage I REM.</p>  <p>So the next time your boss asks if you are sleeping on the job, say no and you just are thinking.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[.NET 4.0, HTML, and a Potentially Dangerous Request.Form Value]]></title>
    <link href="http://eduncan911.com/blog/archives/net-4-0-html-and-a-potentially-dangerous-request-form-value.html"/>
    <updated>2010-04-09T01:51:41-04:00</updated>
    <id>http://eduncan911.com/blog/archives/net-4-0-html-and-a-potentially-dangerous-request-form-value</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-right-width: 0px; margin: 0px 0px 20px 20px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="validation" border="0" alt="validation" align="right" src="http://eduncan911.com/blog/archives/images/ApotentiallydangerousRequest.Formvalue.0_12CAD/validation.jpg" width="312" height="244" /> I ran across a breaking change tonight in the .NET 4.0 CLR&#8217;s version of ASP.NET.&#160; The 4.0 version of the CLR binds to any HTTP request data to validate against.</p>


<p>  <p>The entire error you may see is:</p>  <blockquote>   <p><em>A potentially dangerous Request.Form value was detected from the client</em></p> </blockquote>  <p>This is because 4.0 now inspects all request data.&#160; Rather that being the cookies, urls, headers, etc.&#160; A very nice security upgrade, I might say.&#160; This will prevent a hacker from submitting malicious code through cookies or other means that you may be parsing. </p>  <h2>WYSIWYG and/or HTML Editors with .NET 4.0&rsquo;s CLR</h2>  <p>One common issue that immediately creeps up with this new security is when you want to use a rich-text editor or even a textbox that you want to submit HTML data through.&#160; This seems to be now impossible with .NET 4.0&rsquo;s CLR&rsquo;s default validation because you cannot override this behavior, if you remain in 4.0&rsquo;s validation.</p>  <p>And no, there is no way to selectively disable which items to validate.</p>  <h2>ASP.NET MVC&rsquo;s ValidateInput attribute does not work</h2>  <p>You, like me, most likely just slapped a big ol&#8217; fat <font face="Courier New">[ValidateInput]</font> attribute on your MVC controller&rsquo;s action method and thought you were done.&#160; But behold, the error still remains!</p>  <p>This is because your MVC website is running on the .NET 4.0 CLR and therefore continues to be validated.</p>  <h2>The Fix: HttpRuntime requestValidationMode</h2>  <p>The work-around is to place this into your web.config&rsquo;s <font face="Courier New">&lt;system.web&gt;</font> node:</p>  <p></p>  <pre><code>
&lt;httpRuntime requestValidationMode=&quot;2.0&quot; /&gt;</p>

<p></code></pre></p>

<p></p>




<p>What this does is it forces the CLR to only check the Page&#8217;s html fields, which you can now overwrite with the <font face="Courier New">[ValidateInput]</font> attribute in MVC controllers, or the <font face="Courier New">&lt;%@ Page validateRequest=&quot;false&quot; %&gt;</font>, or any other normal means. </p>




<p>Sadly though, this also disables all of those other checks for the request data.&#160; Obviously, this is not a preferred work-around and even though VS 2010 is due for release on April 12th (just around the corner!), I do not see any notations of this being changed anytime soon.</p>




<p>If someone knows a work around for 4.0, please let me know.&#160; This is a great new feature, but sadly we must disable it for just about any website we develop on.</p>




<p>Unless we move to <a href="http://daringfireball.net/projects/markdown/" target="_blank">MarkDown</a> that is (which I am a big fan of, clients not so much…).</p>




<p><a href="http://msdn.microsoft.com/en-us/library/system.web.configuration.httpruntimesection.requestvalidationmode(VS.100).aspx" target="_blank">You can find out more information about this over at MSDN</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a Bootable USB Drive With Windows]]></title>
    <link href="http://eduncan911.com/blog/archives/create-a-bootable-usb-drive-with-windows.html"/>
    <updated>2010-04-01T23:21:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/create-a-bootable-usb-drive-with-windows</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p><img style="border-right-width: 0px; margin: 0px 20px 20px 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="5805-1[1]" border="0" alt="5805-1[1]" align="left" mce_src="/blog/archives/images/CreateaBootableUSBDrive_F442/580511.jpg" width="244" height="167" src="http://eduncan911.com/blog/archives/images/CreateaBootableUSBDrive_F442/580511.jpg"> I find myself Bing-ing this every few months to make sure I included each and every step.&nbsp; So often, that I can&#8217;t believe I still Bing it.&nbsp; So below is a manual for anyone (mostly me) to follow in the future.</p>


<p>  <h2>USB Boot Linux, Windows or any other operating system</h2>  <p>You will be creating a bootable usb drive with Windows 7 or Vista&rsquo;s diskpart utility.&nbsp; Even though you are using Windows to create the bootable device, the source disk should not matter as long as the os supports booting from fat32.&nbsp; You can have a Linux iso mounted as the source, and the usb stick will end up being a Linux bootable usb.</p>  <p>Without further ado, on with the steps.</p>  <h2>Creating a bootable USB device</h2>  <p>In Windows 7 or Vista, open a command prompt.&nbsp; A shortcut is to press <font face="Courier New"><b>WINDOWS-KEY + R</b></font> and then type <font face="Courier New"><b>CMD</b></font>, press <font face="Courier New"><b>ENTER</b></font>.</p>  <p><font face="Courier New">C:\Users\eduncan911&amp;gt; diskpart</font></p>  <p><font face="Courier New">DISKPART&gt; list disk</font></p>  <blockquote>   <p>Inspect the list and note which one is the USB drive.&nbsp; Tip: It&rsquo;s most likely the last one.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; select disk 1</font></p>  <blockquote>   <p>Where 1 is the disk number from the <font face="Courier New">list disk</font> command above.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; detail disk</font></p>  <blockquote>   <p>The <font face="Courier New">detail disk</font> step above lists the details of the selected disk.&nbsp; Make sure the correct one is listed.&nbsp; If not, go back to <font face="Courier New">list disk</font> and start over.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; clean</font></p>  <p><font face="Courier New">DISKPART&gt; create partition primary</font></p>  <p><font face="Courier New">DISKPART&gt; select partition 1</font></p>  <p><font face="Courier New">DISKPART&gt; active</font></p>  <p><font face="Courier New">DISKPART&gt; format fs=fat32 quick label=&ldquo;USB_16GB&rdquo;</font></p>  <p><font face="Courier New">DISKPART&gt; assign</font></p>  <p><font face="Courier New">DISKPART&gt; detail disk</font></p>  <blockquote>   <p>Note the drive letter listed in the column labeled <font face="Courier New">LTR</font>.</p> </blockquote>  <p><font face="Courier New">DISKPART&gt; exit</font></p>  <p><font face="Courier New">C:\Users\eduncan911&gt; xcopy d:*.* g:\ /E /F</font></p>  <blockquote>   <p>Where d:\ is your mounted ISO or DVD you want to copy from, and g:\ is the USB device to copy to.</p> </blockquote>  <p><font face="Courier New">C:\Users\eduncan911&gt; exit</font></p>  <p>And that&rsquo;s it.&nbsp; Go stick it in something and boot it.</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managed Extensibility Framework (MEF) - Microsoft's Official Inversion of Control Container]]></title>
    <link href="http://eduncan911.com/blog/archives/managed-extensibility-framework-mef-microsofts-official-inversion-of-control-container.html"/>
    <updated>2010-02-16T00:50:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/managed-extensibility-framework-mef-microsofts-official-inversion-of-control-container</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<p>This new Microsoft feature in .NET Framework 4 is a programming model for reusing components, very similar to those Inversion of Control container frameworks out there that we all know and love (Castle Windsor, Structured Map, their own Unity from the Patterns and Practices team and etc).&nbsp; Now, they have built their own to address the pain points of these frameworks called the Managed Extensibility Framework, or MEF for short.</p>


<p> <p>I was pleasantly surprised this weekend when reading the February 02010&rsquo;s issue of MSDN Magazine.&nbsp; Getting up-to-speed on some new features in .NET Framework 4, I saw the headline &ldquo;<a href="http://msdn.microsoft.com/en-us/magazine/ee291628.aspx" target="_blank">Building Composable Apps in .NET 4 with the Managed Extensibility Framework</a>&rdquo; by Glenn Block.&nbsp; Yeah, it just rolls off your tongue eh?&nbsp; So I decided I had a few minutes while waiting for the water to boil and scanned the article.&nbsp; I am glad I did.</p> <p>In this post, I will try to give a very brief overview on how to use MEF coming from a background of using other Inversion of Control (IoC) containers, including some of the gotchas that you must be aware of during the switch.&nbsp; Yeah, you will want to make the switch &ndash; the switch away from those other bulky frameworks.&nbsp; I, for one, am officially announcing my abandonment of Castle and Unity for all future projects.&nbsp; Because once you add-in .NET 4&rsquo;s new data annotations for seriously improved validation, mixed with MEF, the only other 3rd party component I am left with is Castle&rsquo;s Logger abstraction &ndash; which I am hoping I can find a replacement for with .NET 4&rsquo;s new features.</p> <h2>MEF Terminology</h2> <p>First and fore-most for those of you already using an IoC container, it&rsquo;s time for a quick review on what MEF calls a few things and concepts.&nbsp; Below is a table I whipped up to help compare the two terminologies (the MEF portions largely taken from Glenn&rsquo;s excellent article).</p> <p>&nbsp;<img style="border-bottom: 0px; border-left: 0px; display: inline; border-top: 0px; border-right: 0px" title="2-15-2010 10-41-32 PM" border="0" alt="2-15-2010 10-41-32 PM" src="http://eduncan911.com/blog/archives/images/ManagedExtensibilityFrameworkMicrosoftsO_A9C4/2152010104132PM_3.png" width="832" height="649"> </p> <p>Below is an image from Glenn&rsquo;s article that helps visualize the concepts above of MEF.</p> <p><img style="border-right-width: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px" title="ee291628_Block_Fig1(en-us,MSDN_10)" border="0" alt="ee291628_Block_Fig1(en-us,MSDN_10)" src="http://eduncan911.com/blog/archives/images/ManagedExtensibilityFrameworkMicrosoftsO_A9C4/ee291628_Block_Fig1enusMSDN_10.png" width="413" height="288"> </p> <p>You can see that the overall concept is called Composition.&nbsp; A &lsquo;part&rsquo; is the type or service you want to export.&nbsp; The part (or parts) is marked for Export via Contracts (which are automatic).&nbsp; And other parts that want to ask for another part can do so by Importing.</p> <h2>Managed Extensibility Framework &ndash; Why they built it</h2> <p>Glenn mentions in the article that they needed a way to compose of reusable types or components in the up coming Visual Studio 2010, Oslo, Acropolis and I am sure many more.&nbsp; What is important to note is why they created one themselves, instead of using Unity or alike.&nbsp; Glenn mentions some key points:</p> <ul> <li>Third-party Extensibility (allowing vendors to generate plug-ins for Visual Studio, or your own application, with minimal work on your part now)  <li>Other frameworks were too heavyweight for a simple programming model.&nbsp; <li>Or other frameworks required too much effort on the part of either the host or the extension developer. </li></ul> <p>Those last two is what struck a cord with me, and got my attention.&nbsp; Try to sit back and think about how you would allow your applications to be extended with Castle, StructureMap or even Unity.&nbsp; That&rsquo;s a lot of work, a lot of 3rd party assemblies to wire up and configure properly.&nbsp; Especially if you want runtime changes, which MEF supports out of the box with no configuration.</p> <p>That last point is particularly interesting.&nbsp; All too often I see a released developer framework or contrib project by a group of inspired individuals.&nbsp; This is great and all, but those projects quickly grow to be a large project requiring documentation, support, and even refactorings for performance.</p> <p>It got me thinking a lot about what I see wrong with Castle &ndash; only two things, it&rsquo;s learning curve and size.&nbsp; While Unity was very well documented, it comes with some significant bloat and only what I can refer to as hoop-jumping.&nbsp; The earlier versions of Unity violated Dependency Injection pricipals and concepts (no ctor injection!).&nbsp; Perfect example of refactoring.</p> <p>MEF really strives to resolve all of these issues, with some extremely simple programming models that I will show you below.</p> <p></p> <h2>MEF Programming Models &ndash; Straight Attributed Declarations</h2> <p>Another rip from Glenn&rsquo;s article.&nbsp;&nbsp; But he did it so well.</p> <blockquote> <p>Developers consume MEF through a programming model.&nbsp; A programming model provides a means to declare components as MEF parts.&nbsp; Out of the box, MEF provides an attributed programming model, which will be the main focus of this article.&nbsp; That model is just one of many possible programming models that MEF enables.&nbsp; MEF&rsquo;s core API is completely agnostic to attributes.</p></blockquote> <p>Yep, you heard that right.&nbsp; MEF supports Attributes &ndash; for out-of-the-box functionality.&nbsp; No configuration, no setup, nothing.&nbsp; This is so much easier than you are even thinking.&nbsp; So much so, I feel guilty by writing all of this text.&nbsp; Let&rsquo;s just show you how it&rsquo;s done now.</p> <h2>The Blog &ldquo;Hello World&rdquo; Snippets</h2> <p>As what seems to be an invasion, the common Hello World for websites these days <a href="http://invalidlogic.com/2008/12/22/blogging-apps-are-the-new-hello-world/" target="_blank">are blogs</a>.&nbsp; So without further delay, here&rsquo;s some code snippets.</p> <p>The post object</p> <p></p><pre><code>
public partial class Post
{</p>

<pre><code>public Int32 PostId { get; set; }
public String Title { get; set; }
public String Description { get; set; }
public String Body { get; set; }
public Guid AuthorId { get; set; }
</code></pre>

<p>}</p>

<p></code></pre></p>

<p></p>


<p>And the PostService that will service the post.</p>


<p></p>


<pre><code>
[Export(typeof(IPostService))]
public class PostService : IPostService
{
    [Import]
    public IPostRepository PostRepository { get; set; }

    public Post FetchById(Int32 postId)
    {
        return
            (from p in PostRepository.GetAll()
             where p.PostId == postId
             select p as Post).FirstOrDefault();
    }
}

</code></pre>


<p>Please note that the above code is not production-code.&nbsp; You should always provide proper cache, concurrency and disposable patterns.&nbsp; This code has been cleaned up for easier reading.</p>


<p>Notice that the PostService has been marked to be exportable, using a specific contract type for IPostService. Now, you do not have to specify the contract type or name. You can simply use [Export]. But remember, we do want to allow for simply extensibility in the future by plugging in different components to be served during composition.&nbsp; How to do that?&nbsp; Easy, just specify the interface type as the contract.&nbsp; Now how easy was that?</p>


<p>Also, notice that we have a dependency on IPostRepository. This is marked with the simple [Import] attribute.&nbsp; It does exactly as you think.&nbsp; MEF composes the first part that matches the contract for IPostRepository and supplies it </p>


<p>Now, some will cry fowl here since I am not directly injecting IPostRepository, or not demanding it in the constructor. Yes, MEF fully supports constructor injection. But, there is a few gotchas you have to be aware of with MEF and constructor composition that I get into a little further down. There&#8217;s also a new pattern I am designing, when mixed with .NET 4 and some nifty T4 templates I&#8217;m tinkering with. That&#8217;s another article I&#8217;ll write though. Check the comments, or leave a comment for more information on, &#8220;Managing BDD Contexts and Mocks Automatically with .NET 4, MEF, and T4 Templates.&#8221; Nice. I just named my next blog post. </p>


<h2>Constructor Dependency Injection - MEF Gotcha</h2>


<p>As mentioned above, constructor injection is a bit tricky with MEF.&nbsp; There are some rules to follow:</p>


<ul>
<li>MEF assumes all parameters are imports, making the import attribute unnecessary.&nbsp; I leave it up to the reader to figure out how to get around this. 
<li>Recomposition is not supported on constructor parameters.</li></ul>


<p>That last one is almost a deal breaker for me.&nbsp; Recomposition is a feature of MEF that allows parts to automatically have their imports updated as new matching exports appear in the system.&nbsp; Given, this isn&#8217;t the case with most websites out there.&nbsp; It&#8217;s an issue for websites and applications that want to support dynamic (e.g. downloadable) plugins.&nbsp; The plugins would overwrite, at runtime, certain contracts and therefore allow the parts to automatically be updated with the new plugin versions - all without an application restart!</p>


<p>So with that said (and you will never be developing plugins right?), you can use constructor injection with MEF as follows.</p>


<p><p><pre><code>
[Export(typeof(IPostService))]
public class PostService : IPostService
{</p>

<pre><code>private IPostRepository _postRepo;
private IUserRepository _userRepo

[ImportingConstructor]
public PostService(IPostRepository postRepo, IUserRepository userRepo)
{
    _postRepo = postRepo;
    _userRepo = userRepo;
}

public Post FetchById(Int32 postId)
{
    return
        (from p in _postRepo.GetAll()
         where p.PostId == postId
         select p as Post).FirstOrDefault();
}
</code></pre>

<p>}</p>

<p></code></pre>
<p>Don&rsquo;t fret too much though about the all-or-nothing constructor.&nbsp; You have a Factory option later on in this post.</p>
<h2>Bootstrapping MEF for Application Startup</h2>
<p>Glenn nailed it right on the head when he called this procedure &ldquo;bootstrapping.&rdquo;&nbsp; I&rsquo;ve always struggled with the proper terminology for this composition process with other Inversion of Control containers.&nbsp; Bootstrapping.&nbsp; Yep, just like my hacked MP3 players have.</p>
<p>To get things up and running, you will need to to insert some bootstrapping code for your application.&nbsp; This code is required with any type of IoC container, and with MEF as well.</p>
<p>Below is a small code snippet from a typical ASP.NET MVC 2 global.asax file.&nbsp; Notice I added the two using blocks at the end of the Application_Start().&nbsp; This process would be the same for any type of application you have.</p>
<p><pre><code>
using System.ComponentModel.Composition;
using System.ComponentModel.Composition.Hosting;</p>

<p>protected void Application_Start()
{</p>

<pre><code>AreaRegistration.RegisterAllAreas();

RegisterRoutes(RouteTable.Routes);

using (var catalog = new DirectoryCatalog(@".\"))
{
    using (var container = new CompositionContainer(catalog))
    {
        container.ComposeParts(this);
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>Now, this code is running from with the website assembly.&nbsp; If you, like me, create a seperate assembly to hold your Domain and Repository models, then you simply reference the assembly by replacing the &lsquo;this&rsquo; keyword with Assembly.GetAssembly(typeof(MyProject.Domain)).&nbsp; And yes, you can reference multiple catalogs and assemblies and build up your list as well.</p>
<p>Note that I included the namespaces here.&nbsp; This is important as normally this bootstrapping code is in the Hosting namespace.&nbsp; What they don&rsquo;t tell you is there is an extension in the namespace one higher for CompositionContainer, that enables the ComposeParts() extension method in the System.ComponentModel.Composition namespace.</p>
<p>There are tons of options here with the composition containers.&nbsp; Please refer to the .NET 4 documentation on MEF, as well as Glenn&rsquo;s article for a few more tips.&nbsp; You can specify an assembly to reference for the catalog.&nbsp; You can have aggregated catalogs for grouping/namespacing purposes.&nbsp; And yet, you can still have that aged-old configuration file if you really really really want to manually register (export) each type.</p>
<h2>All Parts are Singletons, out of the box</h2>
<p>Yep.&nbsp; All of your part&rsquo;s instances are composed and referenced throughout all of your code as singletons (or &ldquo;statics&rdquo;).&nbsp; This is a great solution for that stubborn developer you may have working in your group that just won&rsquo;t let go of static managers.&nbsp; Make it instance based, and slap an [Export] on it.&nbsp; Done, now use [Import] wherever you like.</p>
<p>This is important to note because Castle and StructuredMap both default to transient composition (Unity uses whatever you configured the container to use as default).&nbsp; So, make sure you are coding to be thread-safe if you are making the switch over to MEF.</p>
<p>But do not fret, it&rsquo;s easy to specify the lifestyle within the contract definitions.&nbsp; There are three possible configurations you can set with the [PartCreationPolicy()] attribute:</p>
<ul>
<li>CreationPolicy.Shared (singleton, default)
<li>CreationPolicy.NonShared (transient)
<li>CreationPolicy.Any</li></ul>
<p>The &ldquo;Any&rdquo; option is interesting as it leaves it up to the context configuration of the host and/or the configuration of the [Import] contract to specify.&nbsp; You can use RequiredCreationPolicy on the [Import] contract definition to specify the preference.</p>
<p><pre><code>
[PartCreationPolicy(CreationPolicy.Any)]
[Export(typeof(IUserAccountService))]
public class UserAccountService : IUserAccountService
{</p>

<pre><code>...
</code></pre>

<p>}</p>

<p>public class Post
{</p>

<pre><code>public Int32 PostId { get; set; }
public String Title { get; set; }
...

[Import(RequiredCreationPolicy=CreationPolicy.NonShared]
public IUserService UserService { get; set; }
</code></pre>

<p>}</p>

<p></pre></code>
<p>There is a problem with this concept though.&nbsp; With a current project we are working on at the moment, we identified the need to have a security context around our services to ensure the current WebRequest has the correct security credentials.&nbsp; With this, we elected to use Castle&rsquo;s WebRequest lifestyle feature.&nbsp; Sadly, this is not possible (yet) with the PartCreationPolicy.&nbsp; So it is left up to the implementer to handle custom composition on their own with a Factory pattern (see below).</p>
<h2>Lazy Loading within Entities</h2>
<p>Those of you that are wanting Lazy Loading within your entities, but are struggling with a solution that is compatible with Inversion of Control, fear not!&nbsp; The answer is now possible with MEF.</p><pre><code>
public partial class Post
{</p>

<pre><code>[Range(0, Int32.MaxValue)]
public Int32 PostId { get; set; }

[Required, StringLength(64, MinimumLength = 5)]
public String Title { get; set; }

[Required, StringLength(1024, MinimumLength = 5)]
public String Description { get; set; }

[Required, StringLength(Int32.MaxValue, MinimumLength = 5)]
public String Body { get; set; }

[Required]
public Guid AuthorId { get; set; }

[Import]
public IUserService UserService { get; set; }

private User _user;
public User Author
{
    get
    {
        if (_user == null)
            _user = UserService.FetchById(this.AuthorId);
        return _user;
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p>With our updated Post entity, notice we now have a dependency on IUserService marked with the [Import] attribute.&nbsp; Yep, MEF composes that for you, and you have the UserService to access your lazy objects as needed.</p>
<h2>Using MEF as a Static Wrapper</h2>
<p>Time and time again I find myself writing wrapper classes around static members of a 3rd party component, just so I can unit test my code without having to rely on that static class.&nbsp; Using MEF, if you haven&rsquo;t guesses already, is just as easy as you might think.</p>
<p></p><pre><code>
public class Loggerpart
{</p>

<pre><code>[Export]
public ILogger Logger
{
    get
    {
        return LogManager.GetLogger("LoggerInstance", "config");
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>This pattern allows you to make a wrapper around any 3rd party or legacy code.</p>
<h2>MEF Composition with a Factory Pattern</h2>
<p>Here&rsquo;s another one not in Glenn&rsquo;s article.&nbsp; How to use MEF with a factory pattern to initiate a complex type.</p>
<p><pre><code>
public class UserService : IUserService
{</p>

<pre><code>public UserService(ISecurityContext securityContext)
{
    ...
}
</code></pre>

<p>}</p>

<p>public class UserServiceFactory
{</p>

<pre><code>[Export(typeof(IUserService))]
[PartCreationPolicy(CreationPolicy.Shared)]
public IUserService Instance
{
    get
    {
        var context = HttpContext.Current;
        var securityContext = 
            SecurityContextProvider.Setup(context)
        return new UserService(securityContext);
    }
}
</code></pre>

<p>}</p>

<p></code></pre>
<p></p>
<p>Notice how the UserService is not exported?&nbsp; Instead, we designate a property member of UserServiceFactory called Instance as the Export composition location.&nbsp; </p>
<p>Remember, you are only Exporting for Composition at runtime.&nbsp; Nothing gets composed during your unit tests, as you are mocking them.&nbsp; So anywhere you use [Import] will be still be mockable for any of your unit tests with this pattern.</p>
<h2>Exporting with Multiple Contracts</h2>
<p>Here&rsquo;s a nice trick, you can specify multiple Export contracts for multiple types.&nbsp; Why would you do this?&nbsp; If you are a big DDD follower, you may be using IUserService and IAccountService combined to give you an UserAccountService part.</p>
<p><pre><code>
[Export(typeof(IUserService))]
[Export(typeof(IAccountService))]
public class UserAccountService : IUserService, IAccountService
{</p>

<pre><code>...
</code></pre>

<p>}</code><code>
</pre></code>
<p></p>
<h2>MEF Does Not Blow Up on Rejection</h2>
<p>This one is going to take some getting used to.&nbsp; As Glenn mentions, MEF does not throw exceptions if a part cannot be satisfied.&nbsp; It simply will not exist in the object graph for MEF to return &ndash; you&rsquo;ll get a null, and will most likely see a NullReferenceException in your containing code that is trying to use the part you wanted to import.</p>
<p>MEF will simply reject the request for the Import of a part for a number of reasons.&nbsp; For example, if there is no part defined as the correct Export contract type.&nbsp; Say you wanted to import IUserService, but only exported UserService with [Export] and no contract type of IUserService was defined.&nbsp; That was the typical one I found myself forgetting to do.&nbsp; As recommended above, always include the Contract Type when designated a part as Export with [Export(typeof(IUserService))].</p>
<p>I agree that MEF&rsquo;s Rejection policy is a power feature because it stabilizes the code and allows debugging.&nbsp; Glenn links to a good article on why to ensure application stability: <a title="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx" href="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx"><a href="http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx">http://blogs.msdn.com/gblock/archive/2009/08/02/stable-composition-in-mef-preview-6.aspx</a></a></p>
<p>But in short, if you get Rejection happening quite often, check your Export contract definition on your part.</p>
<h2>In Summary</h2>
<p>As you can see, it is dead simple to use MEF.&nbsp; The Export functionality is what was missing with Unity, and completely with all other IoC containers.&nbsp; And, it&rsquo;s what gives MEF such great, simplistic power.&nbsp; I highly recommend reading through Glenn&rsquo;s complete article, as he covers a few other concepts such as using the new <strong>Lazy&lt;T&gt;</strong> for importing lazy exports and metadata.</p>
<p>Some additional things Glenn covers is the very strong support for debugging and tracing, things you want to be aware of if you use MEF even moderately.&nbsp; He also hints at the up-n-coming support for MEF with IronRuby.&nbsp; He also covers some external links, which I will list here (for my own archiving purposes):</p>
<ul>
<li><a href="http://codebetter.com/blogs/glenn.block/archive/2009/05/14/customizing-container-behavior-part-2-of-n-defaults.aspx" target="_blank">Customizing Container Behavior Part 2 of N &ndash; Defaults</a> for Facilities
<li><a href="http://mef.codeplex.com/releases/view/33536" target="_blank">MEF Analysis Tool (mefx) for .NET 4.0</a> for debugging those contracts in large projects
<li><a href="http://blogs.msdn.com/dsplaisted/archive/2009/06/08/a-crash-course-on-the-mef-primitives.aspx" target="_blank">A Crash Course on the MEF Primitives</a> for the underlying &ldquo;quantum universe of MEF, its über extensibility points&rdquo; as Glenn says</li></ul>
<p>Once concept I am tinkering with is utilizing the [Import] attribute in the attributed programming model of MEF to define the complete contexts of my BDD tests for me with all dependencies already mocked up and ready, with T4 templates largely driving that effort.</p>
<p>MEF wacked me upside the head.&nbsp; It does everything right, and even allowed me to step back and realized, &ldquo;Dang. I was bloating my code.&rdquo;&nbsp; Yes, they have done it right.&nbsp; So right that the next project I am starting this week will be on Visual Studio 2010 RC &ndash; not even released yet.&nbsp; </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Registering MSpec Runners for TestDriven.NET on Windows X64]]></title>
    <link href="http://eduncan911.com/blog/archives/registering-mspec-runners-for-testdriven-net-on-windows-x64.html"/>
    <updated>2010-01-20T17:59:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/registering-mspec-runners-for-testdriven-net-on-windows-x64</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P>EDIT:&nbsp;MSpec v0.3 now supports <A href="http://weblogs.asp.net/nunitaddin/archive/2009/11/05/testdriven-net-2-24-xcopy-deployable-test-runners.aspx" mce_href="http://weblogs.asp.net/nunitaddin/archive/2009/11/05/testdriven-net-2-24-xcopy-deployable-test-runners.aspx">TestDriven.Net&#8217;s v2.24 XCopy Deployable Test Runners</A>.&nbsp; So this blog post is legacy information at this time.&nbsp; </P>


<P><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline; MARGIN-LEFT: 0px; BORDER-TOP: 0px; MARGIN-RIGHT: 0px; BORDER-RIGHT: 0px" title=td_rocket2[1] border=0 alt=td_rocket2[1] align=left src="http://eduncan911.com/blog/archives/images/MSpecrunnersforTestDrive.NETonWindowsx64_AD3B/td_rocket21.gif" width=141 height=100 mce_src="/blog/archives/images/MSpecrunnersforTestDrive.NETonWindowsx64_AD3B/td_rocket21.gif"> Machine.Specifications (MSpec) is my preferred Behavior-Driven Design (BDD) framework for Microsoft.NET.&nbsp; Aaron Jensen, <A href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx" target=_blank mce_href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx">the author of MSpec</A>, released support for TestDriven.NET, xUnit, nUnit, and Gallio.&nbsp; And with the latest release of v0.3, it adds official support for ReSharper&#8217;s Unit Tests and and Selenium integration testing.&nbsp; Very cool stuff indeed, and a very active project!</P>


<P>What has bugged me a bit is getting TestDriven.NET to see my MSpec specifications, on my Windows 7 x64 platform.&nbsp; Aaron so kindly includes a InstallTDNetRunner.bat file to register MSpec with TestDrive.NET; but, it only works on x86 systems.</P>


<P>So why does it not work with x64 systems?&nbsp; It is because the installer for TestDriven.NET registers the runners in a different registry location.</P>


<H2>Windows Vista/7 x64 (64-bit) MSpec runner TestDriven.NET registry file</H2>


<P>Below, I have created a bat file you can copy and paste into your own InstallTDNetRunner-x64.bat if you are on Windows x64.&nbsp; Or, you can download it from here: </P>


<P><A href="http://eduncan911.com/blog/binary/legacy/InstallTDNetRunner-x64.zip">/blog/binary/legacy/InstallTDNetRunner-x64.zip</A> </P>


<PRE><CODE>

@echo off &amp; if not &#8220;%ECHO%&#8221;==&#8221;&#8221; echo %ECHO%

setlocal
set LOCALDIR=%~dp0

echo Windows Registry Editor Version 5.00 &gt; MSpecTDNet.reg
echo [HKEY_CURRENT_USER\Software\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg
echo. &gt;&gt; MSpecTDNet.reg

echo [HKEY_LOCAL_MACHINE\SOFTWARE\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg
echo. &gt;&gt; MSpecTDNet.reg

echo [HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\MutantDesign\TestDriven.NET\TestRunners\MSpec] &gt;&gt; MSpecTDNet.reg
echo &#8220;Application&#8221;=&#8221;&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;AssemblyPath&#8221;=&#8221;%LOCALDIR:\=&#92;%Machine.Specifications.TDNetRunner.dll&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TargetFrameworkAssemblyName&#8221;=&#8221;Machine.Specifications&#8221; &gt;&gt; MSpecTDNet.reg
echo &#8220;TypeName&#8221;=&#8221;Machine.Specifications.TDNetRunner.SpecificationRunner&#8221; &gt;&gt; MSpecTDNet.reg
echo @=&#8221;5&#8221; &gt;&gt; MSpecTDNet.reg

regedit MSpecTDNet.reg

del MSpecTDNet.reg


</CODE></PRE>


<H2>Setup TestDriven.NET and MSpec</H2>


<P>Still a bit confused, getting TestDriven.NET and MSpec setup for the first time? Here&#8217;s the steps to follow:</P>


<UL>
<LI>Go ahead and install TestDriven.NET.&nbsp; It can be installed and upgraded at any time. </LI>
<LI>Next, grab <A href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx" target=_blank mce_href="http://codebetter.com/blogs/aaron.jensen/archive/tags/mspec/default.aspx">the latest release of MSpec</A>&nbsp; and extract the zip to a semi-permanent location.&nbsp; This is because things such as ReSharper and TestDriven.NET will need to know a common location for the mspec assemblies.&nbsp; I recommend C:\Program Files (x86)\MSpec&#46; 
<UL>
<LI>Included with the MSpec zip is an InstallTDNetRunner.bat, but it only works on 32-bit Windows.&nbsp; For 64-bit Windows, you want to copy my registry code above into a new file called InstallTDNetRunner-x64.bat. </LI>
<LI>Make sure to place this InstallTDNetRunner-x64.bat file in the same directory as your semi-permanent MSpec location above. </LI></UL></LI>
<LI>Finally, you want to double-click and execute the InstallTDNetRunner or InstallTDNetRunner-x64 from within this semi-permanent location.&nbsp; This will insert the registry values for a new runner called MSpec for TestDriven.NET to detect and execute. </LI></UL>


<P>From this point further, you can right-click within different places to execute your specifications within your MSpec.&nbsp; Some tips on locations you can right-click and execute the specs:</P>


<UL>
<LI>The project file: will execute all specs detected within that project. </LI>
<LI>The Namespace: will execute all specs detected within that namespace throughout the project. </LI>
<LI>Within the <FONT face="Courier New">Establish context</FONT> or <FONT face="Courier New">Because of</FONT> : Will execute all specs within that one class/scenario. </LI>
<LI>Within the <FONT face="Courier New">It</FONT> spec - Will execute just that one test. </LI></UL>


<P>Something to note is Aaron is currently upgrading MSpec (version 0.4, not released yet) to support TestDriven.NET&#8217;s new 2.24 feature of version independent runners. I haven&#8217;t looked completely into that myself, but should make registring TDNet runners in the future a bit easier.</P>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Azure SDK for Microsoft Visual Studio November 2009]]></title>
    <link href="http://eduncan911.com/blog/archives/windows-azure-sdk-for-microsoft-visual-studio-november-2009.html"/>
    <updated>2009-11-16T18:38:00-05:00</updated>
    <id>http://eduncan911.com/blog/archives/windows-azure-sdk-for-microsoft-visual-studio-november-2009</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blogs/eduncan911/productsoverviewinfographic_677ADB3A.gif" mce_href="/blogs/eduncan911/productsoverviewinfographic_677ADB3A.gif"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; WIDTH: 637px; DISPLAY: inline; HEIGHT: 191px; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=products-overview-infographic border=0 alt=products-overview-infographic src="http://eduncan911.com/blog/archives/images/products-overview-infographic.gif" width=637 height=191 mce_src="/blog/archives/images/products-overview-infographic.gif"></A> </P>


<P>Over this past weekend, Microsoft released an updated Windows Azure SDK dated November 2009 for Visual Studio 2008 and 2010 Beta 2.&nbsp; It is great to hear this since my tinkering with with the old CTP release was a bit buggy (had to download a few hot-fixes).&nbsp; </P>


<P>Officially this SDK is known as version 20091111.1401, and released on November 13th, 2009.&nbsp; <A href="http://go.microsoft.com/fwlink/?LinkID=128752" target=_blank mce_href="http://go.microsoft.com/fwlink/?LinkID=128752">You can go straight to the SDK download here</A>.</P>


<P>I have compiled a list of improvements and details about this release.&nbsp; For those new to Windows Azure, the SDK add-on for Visual Studio 2008/2010 includes the following:</P>


<UL>
<LI>C# and VB Project creation support for creating a Windows Azure Cloud Service solution with multiple roles.</LI>
<LI>Tools to add and remove roles from the Cloud Service.</LI>
<LI>Tools to configure each Role.</LI>
<LI>Integrated local development via the Development Fabric and Development Storage services.</LI>
<LI>Running and Debugging a Cloud Service in the Development Fabric.</LI>
<LI>Building and packaging of Cloud Service Packages.</LI>
<LI>Browsing to the Windows Azure Developer Portal.</LI></UL>


<P>This updated includes a large number of enhancements and compatibility updates.&nbsp; The overview reads:</P>


<UL>
<LI>Windows Azure Service Runtime managed library: The latest version of the Service Hosting Runtime API includes support for enhanced communication between roles and for runtime notification of service configuration changes. Direct communication between role instances enables new application development scenarios, including applications that distribute state across role instances. Service configuration changes include an increase or decrease in the number of request role instances and changes to the values of configuration settings.</LI>
<LI>Windows Azure Diagnostics managed library: The new Diagnostics API enables logging using standard .NET APIs. The Diagnostics API provides built-in support for collecting standard logs and diagnostic information, including the Windows Azure logs, IIS 7.0 logs, Failed Request logs, crash dumps, Windows Event logs, performance counters, and custom logs. </LI>
<LI>Certificate Management: Enhanced support for SSL certificates in Windows Azure and in the Windows Azure SDK enables the secure automated deployment of certificates to services hosted on Windows Azure. </LI>
<LI>Variable-size Virtual Machines : Developers may now specify the size of the virtual machine to which they wish to deploy a role instance, based on the role&#8217;s resource requirements. The size of the VM determines the number of CPU cores, the memory capacity, and the local file system size allocated to a running instance. </LI>
<LI>External endpoints for worker roles. A worker role may now define any number of external endpoints for HTTP, HTTPS, and TCP, and specify the desired port number for any external endpoint. </LI>
<LI>Persistent local resource storage: Developers can now choose to persist data written to a local storage resource at runtime when the role is recycled. </LI>
<LI>Windows Azure Storage Client managed library: The Storage Client library provides a .NET API for accessing the Windows Azure storage services. </LI>
<LI>Improved Development Storage: Development storage provides a high-fidelity simulation of the Windows Azure storage services in the cloud. Tables can now be created dynamically in the development storage Table service and are no longer required to be generated in advance. </LI>
<LI>Updated samples: The samples included with the Windows Azure SDK have been updated to demonstrate new features. The samples now include both C# and Visual Basic versions.</LI></UL>


<P>The actual technical updates are listed below.&nbsp; Some interesting parts such as ASP.NET MVC 2 support are now included.</P>


<UL>
<LI>Service Model UI: A redesigned and significantly more complete interface for manipulating Role configuration information. To access, double-click on a role node in the Solution Explorer.</LI>
<LI>Additional role templates: Support for ASP.NET MVC 2 (2010 only), F# worker roles (2010 only), and WCF Service Application web roles.</LI>
<LI>VS2010 Beta2 Support: Support for Visual Studio 2010 Beta 2 and VWD Express 2010 Beta 2.</LI>
<LI>Support for dynamically creating tables: The Create Tables functionality is now performed automatically; there is no longer a need to right-click and select Create Tables… on the project after your table definitions have changed.</LI>
<LI>Full support for and installation of the November Windows Azure SDK release (in short, similar to the above list):</LI>
<UL>
<LI>The sample storage client has been replaced by a new production quality library.</LI>
<LI>New Diagnostics library enables logging using .NET APIs and enables the collection of diagnostic information from the service.</LI>
<LI>Service Runtime library updated to support inter-role communication and notification of configuration changes . </LI>
<LI>Support for input endpoints on Worker Roles. </LI>
<LI>Higher fidelity simulation of Development Storage: supports all current cloud storage features, including dynamically creating tables. </LI>
<LI>Ability to choose the size of the VM for a role instance. </LI>
<LI>Ability to persist data in local storage even after the role is recycled. </LI>
<LI>Ability to manage certificates to install to the role VMs. </LI></UL></UL>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Support Ticket Severity vs Priority]]></title>
    <link href="http://eduncan911.com/blog/archives/support-ticket-severity-vs-priority.html"/>
    <updated>2009-10-05T02:16:00-04:00</updated>
    <id>http://eduncan911.com/blog/archives/support-ticket-severity-vs-priority</id>
    <content type="html"><![CDATA[<!-- more -->


<blockquote><p>Please note that this post was migrated to my new blog platform. There may be bad formating, broken links, images, downloads and so on.  If you need an item on this page, please contact me and I will do my best to get it from my backups.</p><footer><strong>~E</strong></footer></blockquote>


<P><A href="http://eduncan911.com/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw.jpg" mce_href="/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw.jpg"><IMG style="BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px 20px 0px 0px; DISPLAY: inline; BORDER-TOP: 0px; BORDER-RIGHT: 0px" title=ARG1329_pvw border=0 alt=ARG1329_pvw align=left src="http://eduncan911.com/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw_thumb.jpg" width=244 height=236 mce_src="/blog/archives/images/SupportTicketSeverityvsPriority_11E83/ARG1329_pvw_thumb.jpg"></A> All too often, I get involved with ticketing systems that have these set incorrectly.&nbsp; Or, they utilize them in a different manner than what they were intended for.&nbsp; Tonight, I am setting up another system and thought I would document the differences here for future references (and for my buddies that could tweak their systems).</P>


<P>I understand there is a movement to get away from setting both of these.&nbsp; I myself like a system without the severity part, as it is much faster just to run down the priority list.&nbsp; But, I feel that the more formal the QA process is (e.g. you have a dedicated QA member or team or outsourced group), the more you need to separate the two.&nbsp; This post should help with that.</P>


<H2>Definitions of Severity and Priority</H2>


<P>The definitions, in terms of a ticketing system are as follows:</P>


<BLOCKQUOTE>
<P><STRONG>Severity</STRONG> : The level of impact the defect has on the system, overall.&nbsp; Basically, <EM>how serious the bug is</EM>.&nbsp; </P>
<P><STRONG>Priority</STRONG> : The developers order in which to attack, address, or fix the tickets.&nbsp; Ranked usually from Highest to Lowest.</P></BLOCKQUOTE>


<P>Before going any further, let’s setup the Severity to match what Microsoft uses (<A href="http://c2.com/cgi/wiki?DifferentiatePriorityAndSeverity" target=_blank mce_href="http://c2.com/cgi/wiki?DifferentiatePriorityAndSeverity">sourced from this article</A>, with my spin on it).&nbsp; </P>


<BLOCKQUOTE>
<P><STRONG>1 - Exception or Crash </STRONG>: A system crash or anything that loses persistent data.&nbsp; Often times referred to as Show Stoppers.&nbsp; Most of the time your overall exceptions that users see (or get the generic “and error has occurred” page) would fall into this category.&nbsp; Unless related to a new feature being QA’d (see #2 below).</P>
<P><STRONG>2 - New Feature Incomplete</STRONG> : A <EM>new</EM> feature that does not work at all or has exceptions.&nbsp; The word <EM>new</EM> being import there, as broken new feature bugs do not belong in #1 above.</P>
<P><STRONG>3 - Release Feature Bug</STRONG> : A completed feature that can be released, but has some rough edges to iron out further.</P>
<P><STRONG>4 - Cosmetic (UI)</STRONG> : Purely cosmetic, css, html, and spelling issues.</P></BLOCKQUOTE>


<P>I usually take it a little further by adding a 5th option.</P>


<BLOCKQUOTE>
<P><STRONG>5 - Feature Request</STRONG> : Usually a placeholder for feature notes and feature development / feedback to the reporter.&nbsp; Some organizations prefer to keep a separate list of these.&nbsp; I find they are too often forgotten about.</P></BLOCKQUOTE>


<P>It is easier to think of severities as categories of the defect itself.&nbsp; Also if you notice, I prefixed the severities with numbers.&nbsp; This has a two effects by giving users an instant “what level is this bug” resolve, as well as a trick to get several ticket systems to order the DropDownList by the number (yeah, lame, but works!).</P>


<H2>Who sets Severity and Priority?</H2>


<P>This is a good one.&nbsp; A few employees at my last company nearly went to war over who gets to set these.&nbsp; But, the answer is simple:</P>


<BLOCKQUOTE>
<P><EM>It’s the tester/bug reporter’s job to set the severity.</EM></P></BLOCKQUOTE>


<P>The person in charge of QAing the system knows the severity of the bug they are reporting.&nbsp; They know how it impacts the users on the other end.&nbsp; But, this person should not be given the power to set the priority.&nbsp; Else, everything would be set to High Priority (usually the case).</P>


<BLOCKQUOTE>
<P><EM>Priority should be set by the project manager or dispatcher.</EM></P></BLOCKQUOTE>


<P>During the weekly standup, the project manager decides on what order the tickets are addressed in and this, in turn, dictates the priority of the tickets.&nbsp; This is done by examining the severity of the bug reported (yep, there it is - examine the severity here!).&nbsp; After reviewing the severity, the PM estimates the time to resolve the bug for the next milestone or release and decides if it is acceptable.&nbsp; If so, a priority is set on the ticket and it is moved to the appropriate milestone.</P>


<H2>Severity and Priority Examples</H2>


<P>Let’s take an example of an css issue in which the overflow property is not set correctly, and the text the user sees is being obscured by this issue.&nbsp; But, this css issue is part of a new feature that is going out in the next build.&nbsp; What do you set it to?&nbsp; Is it #2, a feature incomplete?&nbsp; Or #3, a feature bug because the user cannot set the text of this “new” feature?&nbsp; Or, #4, an UI issue?</P>


<P>Personally, this is to each his own.&nbsp; I would examine the context of the text being hidden.&nbsp; If this text is the balance of your bank account being hidden, then that is a #2.&nbsp; If it is part of the help text, then #3 and can be released to be tweaked later.&nbsp; If it is just a few words not needed for any operation or description of the page’s purpose, then, it’s #4 and can wait for more sever issues to be addressed.</P>


<P>Basically, the severity dictates rather that bug must be completed before release.&nbsp; I usually set the rule that the release does not go out with any #1 and #2s in the list.&nbsp; Or, I may release some #2s if I can quickly follow-up with a patch within a day or two.&nbsp; </P>


<P>Number 3s and 4s often time get pushed back until the next release, unless the priority has been bumped (i.e. how old a ticket is).&nbsp; The #3s and #4s are great gap fillers for those &#8220;let&#8217;s run through the tickets and attack as many as we can&#8221; days.</P>


<P>If you need more examples, feel free to hit me up or leave a comment.</P>


<H2>Summary</H2>


<P>Hopefully you have a better idea of severity and how it fits into your project management.&nbsp; Again, I have to stress that smaller projects may never use severity.&nbsp; But, if you have any type of format QA process, it makes sense to stick it in there to have the extra level of communications.</P>


<P>In case you are wondering, I personally use Unfuddle at my companies and personal projects.&nbsp; You can’t beat the web version of diffmerge in the browser!&nbsp; GitHub is very good as well for those diffmerges.&nbsp; GitHub is best suited for public projects and very small teams, and is only for Git.&nbsp; Where Unfuddle supports both Git and SVN, and is more privatized. </P>

]]></content>
  </entry>
  
</feed>
